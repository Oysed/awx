{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"credentialType\",\"onSubmit\",\"onCancel\",\"submitError\"];import{i18n}from\"@lingui/core\";import React from'react';import{Formik}from'formik';import{Form}from'@patternfly/react-core';import{VariablesField}from'components/CodeEditor';import FormField,{FormSubmitError}from'components/FormField';import FormActionGroup from'components/FormActionGroup';import{required}from'util/validators';import{FormColumnLayout,FormFullWidthLayout}from'components/FormLayout';import{jsonToYaml}from'util/yaml';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CredentialTypeFormFields(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormField,{id:\"credential-type-name\",label:/*i18n*/i18n._(\"Name\"),name:\"name\",type:\"text\",validate:required(null),isRequired:true}),/*#__PURE__*/_jsx(FormField,{id:\"credential-type-description\",label:/*i18n*/i18n._(\"Description\"),name:\"description\",type:\"text\"}),/*#__PURE__*/_jsx(FormFullWidthLayout,{children:/*#__PURE__*/_jsx(VariablesField,{tooltip:/*i18n*/i18n._(\"Enter inputs using either JSON or YAML syntax. Refer to the Ansible Controller documentation for example syntax.\"),id:\"credential-type-inputs-configuration\",name:\"inputs\",label:/*i18n*/i18n._(\"Input configuration\")})}),/*#__PURE__*/_jsx(FormFullWidthLayout,{children:/*#__PURE__*/_jsx(VariablesField,{tooltip:/*i18n*/i18n._(\"Enter injectors using either JSON or YAML syntax. Refer to the Ansible Controller documentation for example syntax.\"),id:\"credential-type-injectors-configuration\",name:\"injectors\",label:/*i18n*/i18n._(\"Injector configuration\")})})]});}function CredentialTypeForm(_ref){var _ref$credentialType=_ref.credentialType,credentialType=_ref$credentialType===void 0?{}:_ref$credentialType,_onSubmit=_ref.onSubmit,onCancel=_ref.onCancel,submitError=_ref.submitError,rest=_objectWithoutProperties(_ref,_excluded);var initialValues={name:credentialType.name||'',description:credentialType.description||'',inputs:credentialType.inputs?jsonToYaml(JSON.stringify(credentialType.inputs)):'---',injectors:credentialType.injectors?jsonToYaml(JSON.stringify(credentialType.injectors)):'---'};return/*#__PURE__*/_jsx(Formik,{initialValues:initialValues,onSubmit:function onSubmit(values){return _onSubmit(values);},children:function children(formik){return/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsxs(FormColumnLayout,{children:[/*#__PURE__*/_jsx(CredentialTypeFormFields,_objectSpread({},rest)),submitError&&/*#__PURE__*/_jsx(FormSubmitError,{error:submitError}),/*#__PURE__*/_jsx(FormActionGroup,{onCancel:onCancel,onSubmit:formik.handleSubmit})]})});}});}CredentialTypeForm.defaultProps={credentialType:{},submitError:null};export default CredentialTypeForm;","map":{"version":3,"names":["React","Formik","Form","VariablesField","FormField","FormSubmitError","FormActionGroup","required","FormColumnLayout","FormFullWidthLayout","jsonToYaml","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","CredentialTypeFormFields","children","id","label","i18n","_","name","type","validate","isRequired","tooltip","CredentialTypeForm","_ref","_ref$credentialType","credentialType","onSubmit","onCancel","submitError","rest","_objectWithoutProperties","_excluded","initialValues","description","inputs","JSON","stringify","injectors","values","formik","autoComplete","handleSubmit","_objectSpread","error","defaultProps"],"sources":["/awx_devel/awx/ui/src/screens/CredentialType/shared/CredentialTypeForm.js"],"sourcesContent":["import React from 'react';\nimport { func, shape } from 'prop-types';\nimport { Formik } from 'formik';\n\nimport { t } from '@lingui/macro';\n\nimport { Form } from '@patternfly/react-core';\nimport { VariablesField } from 'components/CodeEditor';\nimport FormField, { FormSubmitError } from 'components/FormField';\nimport FormActionGroup from 'components/FormActionGroup';\nimport { required } from 'util/validators';\nimport { FormColumnLayout, FormFullWidthLayout } from 'components/FormLayout';\n\nimport { jsonToYaml } from 'util/yaml';\n\nfunction CredentialTypeFormFields() {\n  return (\n    <>\n      <FormField\n        id=\"credential-type-name\"\n        label={t`Name`}\n        name=\"name\"\n        type=\"text\"\n        validate={required(null)}\n        isRequired\n      />\n      <FormField\n        id=\"credential-type-description\"\n        label={t`Description`}\n        name=\"description\"\n        type=\"text\"\n      />\n      <FormFullWidthLayout>\n        <VariablesField\n          tooltip={t`Enter inputs using either JSON or YAML syntax. Refer to the Ansible Controller documentation for example syntax.`}\n          id=\"credential-type-inputs-configuration\"\n          name=\"inputs\"\n          label={t`Input configuration`}\n        />\n      </FormFullWidthLayout>\n      <FormFullWidthLayout>\n        <VariablesField\n          tooltip={t`Enter injectors using either JSON or YAML syntax. Refer to the Ansible Controller documentation for example syntax.`}\n          id=\"credential-type-injectors-configuration\"\n          name=\"injectors\"\n          label={t`Injector configuration`}\n        />\n      </FormFullWidthLayout>\n    </>\n  );\n}\n\nfunction CredentialTypeForm({\n  credentialType = {},\n  onSubmit,\n  onCancel,\n  submitError,\n  ...rest\n}) {\n  const initialValues = {\n    name: credentialType.name || '',\n    description: credentialType.description || '',\n    inputs: credentialType.inputs\n      ? jsonToYaml(JSON.stringify(credentialType.inputs))\n      : '---',\n    injectors: credentialType.injectors\n      ? jsonToYaml(JSON.stringify(credentialType.injectors))\n      : '---',\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values) => onSubmit(values)}\n    >\n      {(formik) => (\n        <Form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n          <FormColumnLayout>\n            <CredentialTypeFormFields {...rest} />\n            {submitError && <FormSubmitError error={submitError} />}\n            <FormActionGroup\n              onCancel={onCancel}\n              onSubmit={formik.handleSubmit}\n            />\n          </FormColumnLayout>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nCredentialTypeForm.propTypes = {\n  credentialType: shape({}),\n  onCancel: func.isRequired,\n  onSubmit: func.isRequired,\n  submitError: shape({}),\n};\n\nCredentialTypeForm.defaultProps = {\n  credentialType: {},\n  submitError: null,\n};\n\nexport default CredentialTypeForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}