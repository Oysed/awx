{"ast":null,"code":"import yaml from'js-yaml';export function yamlToJson(yamlString){var value=yaml.load(yamlString);if(!value){return'{}';}if(typeof value!=='object'){throw new Error('yaml is not in object format');}return JSON.stringify(value,null,2);}export function jsonToYaml(jsonString){if(jsonString.trim()===''){return'---\\n';}var value=JSON.parse(jsonString);if(Object.entries(value).length===0){return'---\\n';}return yaml.dump(value);}export function isJsonObject(value){return typeof value==='object'&&value!==null;}export function isJsonString(jsonString){if(typeof jsonString!=='string'){return false;}var value;try{value=JSON.parse(jsonString);}catch(e){return false;}return typeof value==='object'&&value!==null;}export function parseVariableField(variableField){if(variableField==='---'||variableField==='{}'){return{};}if(!isJsonString(variableField)){variableField=yamlToJson(variableField);}variableField=JSON.parse(variableField);return variableField;}","map":{"version":3,"names":["yaml","yamlToJson","yamlString","value","load","Error","JSON","stringify","jsonToYaml","jsonString","trim","parse","Object","entries","length","dump","isJsonObject","isJsonString","e","parseVariableField","variableField"],"sources":["/awx_devel/awx/ui/src/util/yaml.js"],"sourcesContent":["import yaml from 'js-yaml';\n\nexport function yamlToJson(yamlString) {\n  const value = yaml.load(yamlString);\n  if (!value) {\n    return '{}';\n  }\n  if (typeof value !== 'object') {\n    throw new Error('yaml is not in object format');\n  }\n  return JSON.stringify(value, null, 2);\n}\n\nexport function jsonToYaml(jsonString) {\n  if (jsonString.trim() === '') {\n    return '---\\n';\n  }\n  const value = JSON.parse(jsonString);\n  if (Object.entries(value).length === 0) {\n    return '---\\n';\n  }\n  return yaml.dump(value);\n}\n\nexport function isJsonObject(value) {\n  return typeof value === 'object' && value !== null;\n}\n\nexport function isJsonString(jsonString) {\n  if (typeof jsonString !== 'string') {\n    return false;\n  }\n  let value;\n  try {\n    value = JSON.parse(jsonString);\n  } catch (e) {\n    return false;\n  }\n\n  return typeof value === 'object' && value !== null;\n}\n\nexport function parseVariableField(variableField) {\n  if (variableField === '---' || variableField === '{}') {\n    return {};\n  }\n  if (!isJsonString(variableField)) {\n    variableField = yamlToJson(variableField);\n  }\n  variableField = JSON.parse(variableField);\n\n  return variableField;\n}\n"],"mappings":"AAAA,MAAO,CAAAA,IAAI,KAAM,SAAS,CAE1B,MAAO,SAAS,CAAAC,UAAUA,CAACC,UAAU,CAAE,CACrC,GAAM,CAAAC,KAAK,CAAGH,IAAI,CAACI,IAAI,CAACF,UAAU,CAAC,CACnC,GAAI,CAACC,KAAK,CAAE,CACV,MAAO,IAAI,CACb,CACA,GAAI,MAAO,CAAAA,KAAK,GAAK,QAAQ,CAAE,CAC7B,KAAM,IAAI,CAAAE,KAAK,CAAC,8BAA8B,CAAC,CACjD,CACA,MAAO,CAAAC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAE,IAAI,CAAE,CAAC,CAAC,CACvC,CAEA,MAAO,SAAS,CAAAK,UAAUA,CAACC,UAAU,CAAE,CACrC,GAAIA,UAAU,CAACC,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CAC5B,MAAO,OAAO,CAChB,CACA,GAAM,CAAAP,KAAK,CAAGG,IAAI,CAACK,KAAK,CAACF,UAAU,CAAC,CACpC,GAAIG,MAAM,CAACC,OAAO,CAACV,KAAK,CAAC,CAACW,MAAM,GAAK,CAAC,CAAE,CACtC,MAAO,OAAO,CAChB,CACA,MAAO,CAAAd,IAAI,CAACe,IAAI,CAACZ,KAAK,CAAC,CACzB,CAEA,MAAO,SAAS,CAAAa,YAAYA,CAACb,KAAK,CAAE,CAClC,MAAO,OAAO,CAAAA,KAAK,GAAK,QAAQ,EAAIA,KAAK,GAAK,IAAI,CACpD,CAEA,MAAO,SAAS,CAAAc,YAAYA,CAACR,UAAU,CAAE,CACvC,GAAI,MAAO,CAAAA,UAAU,GAAK,QAAQ,CAAE,CAClC,MAAO,MAAK,CACd,CACA,GAAI,CAAAN,KAAK,CACT,GAAI,CACFA,KAAK,CAAGG,IAAI,CAACK,KAAK,CAACF,UAAU,CAAC,CAChC,CAAE,MAAOS,CAAC,CAAE,CACV,MAAO,MAAK,CACd,CAEA,MAAO,OAAO,CAAAf,KAAK,GAAK,QAAQ,EAAIA,KAAK,GAAK,IAAI,CACpD,CAEA,MAAO,SAAS,CAAAgB,kBAAkBA,CAACC,aAAa,CAAE,CAChD,GAAIA,aAAa,GAAK,KAAK,EAAIA,aAAa,GAAK,IAAI,CAAE,CACrD,MAAO,CAAC,CAAC,CACX,CACA,GAAI,CAACH,YAAY,CAACG,aAAa,CAAC,CAAE,CAChCA,aAAa,CAAGnB,UAAU,CAACmB,aAAa,CAAC,CAC3C,CACAA,aAAa,CAAGd,IAAI,CAACK,KAAK,CAACS,aAAa,CAAC,CAEzC,MAAO,CAAAA,aAAa,CACtB"},"metadata":{},"sourceType":"module"}