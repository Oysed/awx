{"ast":null,"code":"import _slicedToArray from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip';\nexport var TableTextVariant;\n(function (TableTextVariant) {\n  TableTextVariant[\"div\"] = \"div\";\n  TableTextVariant[\"nav\"] = \"nav\";\n})(TableTextVariant || (TableTextVariant = {}));\nexport var WrapModifier;\n(function (WrapModifier) {\n  WrapModifier[\"wrap\"] = \"wrap\";\n  WrapModifier[\"nowrap\"] = \"nowrap\";\n  WrapModifier[\"truncate\"] = \"truncate\";\n  WrapModifier[\"breakWord\"] = \"breakWord\";\n  WrapModifier[\"fitContent\"] = \"fitContent\";\n})(WrapModifier || (WrapModifier = {}));\nexport var TableText = function TableText(_a) {\n  var _a$children = _a.children,\n    children = _a$children === void 0 ? null : _a$children,\n    _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$variant = _a.variant,\n    variant = _a$variant === void 0 ? 'span' : _a$variant,\n    _a$wrapModifier = _a.wrapModifier,\n    wrapModifier = _a$wrapModifier === void 0 ? null : _a$wrapModifier,\n    _a$tooltip = _a.tooltip,\n    tooltipProp = _a$tooltip === void 0 ? '' : _a$tooltip,\n    _a$tooltipProps = _a.tooltipProps,\n    tooltipProps = _a$tooltipProps === void 0 ? {} : _a$tooltipProps,\n    _a$onMouseEnter = _a.onMouseEnter,\n    onMouseEnterProp = _a$onMouseEnter === void 0 ? function () {} : _a$onMouseEnter,\n    props = __rest(_a, [\"children\", \"className\", \"variant\", \"wrapModifier\", \"tooltip\", \"tooltipProps\", \"onMouseEnter\"]);\n  var Component = variant;\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    tooltip = _React$useState2[0],\n    setTooltip = _React$useState2[1];\n  var onMouseEnter = function onMouseEnter(event) {\n    if (event.target.offsetWidth < event.target.scrollWidth) {\n      setTooltip(tooltipProp || event.target.innerText);\n    } else {\n      setTooltip('');\n    }\n    onMouseEnterProp(event);\n  };\n  var text = React.createElement(Component, Object.assign({\n    onMouseEnter: onMouseEnter,\n    className: css(className, wrapModifier && styles.modifiers[wrapModifier], styles.tableText)\n  }, props), children);\n  return tooltip !== '' ? React.createElement(Tooltip, Object.assign({\n    content: tooltip,\n    isVisible: true\n  }, tooltipProps), text) : text;\n};\nTableText.displayName = 'TableText';","map":{"version":3,"names":["React","styles","css","Tooltip","TableTextVariant","WrapModifier","TableText","_a","children","_a$children","_a$className","className","_a$variant","variant","_a$wrapModifier","wrapModifier","_a$tooltip","tooltip","tooltipProp","_a$tooltipProps","tooltipProps","_a$onMouseEnter","onMouseEnter","onMouseEnterProp","props","__rest","Component","_React$useState","useState","_React$useState2","_slicedToArray","setTooltip","event","target","offsetWidth","scrollWidth","innerText","text","createElement","Object","assign","modifiers","tableText","content","isVisible","displayName"],"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/TableText.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip, TooltipProps } from '@patternfly/react-core/dist/esm/components/Tooltip';\n\nexport enum TableTextVariant {\n  div = 'div',\n  nav = 'nav'\n}\n\nexport enum WrapModifier {\n  wrap = 'wrap',\n  nowrap = 'nowrap',\n  truncate = 'truncate',\n  breakWord = 'breakWord',\n  fitContent = 'fitContent'\n}\n\nexport interface TableTextProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered within the table text */\n  children?: React.ReactNode;\n  /** Additional classes added to the table text */\n  className?: string;\n  /** Determines which element to render as a table text */\n  variant?: TableTextVariant | 'span' | 'div';\n  /** Determines which wrapping modifier to apply to the table text */\n  wrapModifier?: WrapModifier | 'wrap' | 'nowrap' | 'truncate' | 'breakWord' | 'fitContent';\n  /** text to display on the tooltip */\n  tooltip?: string;\n  /** other props to pass to the tooltip */\n  tooltipProps?: Omit<TooltipProps, 'content'>;\n  /** callback used to create the tooltip if text is truncated */\n  onMouseEnter?: (event: any) => void;\n}\n\nexport const TableText: React.FunctionComponent<TableTextProps> = ({\n  children = null,\n  className = '',\n  variant = 'span',\n  wrapModifier = null,\n  tooltip: tooltipProp = '',\n  tooltipProps = {},\n  onMouseEnter: onMouseEnterProp = () => {},\n  ...props\n}: TableTextProps) => {\n  const Component: TableTextVariant | 'span' | 'div' = variant;\n\n  const [tooltip, setTooltip] = React.useState('');\n  const onMouseEnter = (event: any) => {\n    if (event.target.offsetWidth < event.target.scrollWidth) {\n      setTooltip(tooltipProp || event.target.innerText);\n    } else {\n      setTooltip('');\n    }\n    onMouseEnterProp(event);\n  };\n\n  const text = (\n    <Component\n      onMouseEnter={onMouseEnter}\n      className={css(className, wrapModifier && styles.modifiers[wrapModifier], styles.tableText)}\n      {...props}\n    >\n      {children}\n    </Component>\n  );\n\n  return tooltip !== '' ? (\n    <Tooltip content={tooltip} isVisible {...tooltipProps}>\n      {text}\n    </Tooltip>\n  ) : (\n    text\n  );\n};\nTableText.displayName = 'TableText';\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,qDAAqD;AACxE,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,SAASC,OAAO,QAAsB,oDAAoD;AAE1F,WAAYC,gBAGX;AAHD,WAAYA,gBAAgB;EAC1BA,gBAAA,eAAW;EACXA,gBAAA,eAAW;AACb,CAAC,EAHWA,gBAAgB,KAAhBA,gBAAgB;AAK5B,WAAYC,YAMX;AAND,WAAYA,YAAY;EACtBA,YAAA,iBAAa;EACbA,YAAA,qBAAiB;EACjBA,YAAA,yBAAqB;EACrBA,YAAA,2BAAuB;EACvBA,YAAA,6BAAyB;AAC3B,CAAC,EANWA,YAAY,KAAZA,YAAY;AAyBxB,OAAO,IAAMC,SAAS,GAA4C,SAArDA,SAASA,CAA6CC,EASlD,EAAI;oBAFsBA,EAE1B,CARfC,QAAQ;IAARA,QAAQ,GAAAC,WAAA,cAAG,IAAI,GAAAA,WAAA;IAAAC,YAAA,GAM0BH,EAE1B,CAPfI,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAE,UAAA,GAK2BL,EAE1B,CANfM,OAAO;IAAPA,OAAO,GAAAD,UAAA,cAAG,MAAM,GAAAA,UAAA;IAAAE,eAAA,GAIyBP,EAE1B,CALfQ,YAAY;IAAZA,YAAY,GAAAD,eAAA,cAAG,IAAI,GAAAA,eAAA;IAAAE,UAAA,GAGsBT,EAE1B,CAJfU,OAAO;IAAEC,WAAW,GAAAF,UAAA,cAAG,EAAE,GAAAA,UAAA;IAAAG,eAAA,GAEgBZ,EAE1B,CAHfa,YAAY;IAAZA,YAAY,GAAAD,eAAA,cAAG,EAAE,GAAAA,eAAA;IAAAE,eAAA,GACwBd,EAE1B,CAFfe,YAAY;IAAEC,gBAAgB,GAAAF,eAAA,cAAG,YAAK,CAAE,CAAC,GAAAA,eAAA;IACtCG,KAAK,GAAAC,MAAA,CAAAlB,EAAA,EARyD,+FASlE,CADS;EAER,IAAMmB,SAAS,GAAsCb,OAAO;EAE5D,IAAAc,eAAA,GAA8B3B,KAAK,CAAC4B,QAAQ,CAAC,EAAE,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAzCV,OAAO,GAAAY,gBAAA;IAAEE,UAAU,GAAAF,gBAAA;EAC1B,IAAMP,YAAY,GAAG,SAAfA,YAAYA,CAAIU,KAAU,EAAI;IAClC,IAAIA,KAAK,CAACC,MAAM,CAACC,WAAW,GAAGF,KAAK,CAACC,MAAM,CAACE,WAAW,EAAE;MACvDJ,UAAU,CAACb,WAAW,IAAIc,KAAK,CAACC,MAAM,CAACG,SAAS,CAAC;KAClD,MAAM;MACLL,UAAU,CAAC,EAAE,CAAC;;IAEhBR,gBAAgB,CAACS,KAAK,CAAC;EACzB,CAAC;EAED,IAAMK,IAAI,GACRrC,KAAA,CAAAsC,aAAA,CAACZ,SAAS,EAAAa,MAAA,CAAAC,MAAA;IACRlB,YAAY,EAAEA,YAAY;IAC1BX,SAAS,EAAET,GAAG,CAACS,SAAS,EAAEI,YAAY,IAAId,MAAM,CAACwC,SAAS,CAAC1B,YAAY,CAAC,EAAEd,MAAM,CAACyC,SAAS;EAAC,GACvFlB,KAAK,GAERhB,QAAQ,CAEZ;EAED,OAAOS,OAAO,KAAK,EAAE,GACnBjB,KAAA,CAAAsC,aAAA,CAACnC,OAAO,EAAAoC,MAAA,CAAAC,MAAA;IAACG,OAAO,EAAE1B,OAAO;IAAE2B,SAAS;EAAA,GAAKxB,YAAY,GAClDiB,IAAI,CACG,GAEVA,IACD;AACH,CAAC;AACD/B,SAAS,CAACuC,WAAW,GAAG,WAAW"},"metadata":{},"sourceType":"module"}