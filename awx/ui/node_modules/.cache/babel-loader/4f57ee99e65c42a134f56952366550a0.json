{"ast":null,"code":"import _toConsumableArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _excluded=[\"inputs\",\"organization\",\"passwordPrompts\"];import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import React,{useCallback,useEffect,useState}from'react';import{useHistory,useParams}from'react-router-dom';import{CardBody}from'components/Card';import{CredentialsAPI,CredentialInputSourcesAPI,CredentialTypesAPI,OrganizationsAPI,UsersAPI}from'api';import ContentError from'components/ContentError';import ContentLoading from'components/ContentLoading';import useRequest from'hooks/useRequest';import{useConfig}from'contexts/Config';import{Credential}from'types';import CredentialForm from'../shared/CredentialForm';import{jsx as _jsx}from\"react/jsx-runtime\";function CredentialEdit(_ref){var credential=_ref.credential;var history=useHistory();var _useParams=useParams(),credId=_useParams.id;var _useConfig=useConfig(),_useConfig$me=_useConfig.me,me=_useConfig$me===void 0?{}:_useConfig$me;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOrgLookupDisabled=_useState2[0],setIsOrgLookupDisabled=_useState2[1];var _useRequest=useRequest(useCallback(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,credentialTypesMap,inputSourceMap){var _credential$inputs;var credentialTypeInputs,inputs,organization,passwordPrompts,remainingValues,nonPluginInputs,pluginInputs,possibleFields,createAndUpdateInputSources,destroyInputSources,modifiedData,_yield$Promise$all,_yield$Promise$all2,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:credentialTypeInputs=credentialTypesMap[values.credential_type].inputs;inputs=values.inputs,organization=values.organization,passwordPrompts=values.passwordPrompts,remainingValues=_objectWithoutProperties(values,_excluded);nonPluginInputs={};pluginInputs={};possibleFields=credentialTypeInputs.fields||[];possibleFields.forEach(function(field){var input=inputs[field.id];if(input!==null&&input!==void 0&&input.credential&&input!==null&&input!==void 0&&input.inputs){pluginInputs[field.id]=input;}else if(passwordPrompts[field.id]){nonPluginInputs[field.id]='ASK';}else{nonPluginInputs[field.id]=input;}});createAndUpdateInputSources=function createAndUpdateInputSources(){return Object.entries(pluginInputs).map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),fieldName=_ref4[0],fieldValue=_ref4[1];if(!inputSourceMap[fieldName]){return CredentialInputSourcesAPI.create({input_field_name:fieldName,metadata:fieldValue.inputs,source_credential:fieldValue.credential.id,target_credential:credId});}if(fieldValue.touched){return CredentialInputSourcesAPI.update(inputSourceMap[fieldName].id,{metadata:fieldValue.inputs,source_credential:fieldValue.credential.id});}return null;});};destroyInputSources=function destroyInputSources(){return Object.values(inputSourceMap).map(function(inputSource){var _inputs$input_field_n;var id=inputSource.id,input_field_name=inputSource.input_field_name;if(!((_inputs$input_field_n=inputs[input_field_name])!==null&&_inputs$input_field_n!==void 0&&_inputs$input_field_n.credential)){return CredentialInputSourcesAPI.destroy(id);}return null;});};modifiedData=_objectSpread({inputs:nonPluginInputs},remainingValues);// can send only one of org, user, team\nif(organization!==null&&organization!==void 0&&organization.id){modifiedData.organization=organization.id;}else{modifiedData.organization=null;if(me!==null&&me!==void 0&&me.id){modifiedData.user=me.id;}}if(credential.kind==='vault'&&!((_credential$inputs=credential.inputs)!==null&&_credential$inputs!==void 0&&_credential$inputs.vault_id)){delete modifiedData.inputs.vault_id;}_context.next=13;return Promise.all([CredentialsAPI.update(credId,modifiedData)].concat(_toConsumableArray(destroyInputSources())));case 13:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,1);data=_yield$Promise$all2[0].data;_context.next=18;return Promise.all(createAndUpdateInputSources());case 18:return _context.abrupt(\"return\",data);case 19:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2,_x3){return _ref2.apply(this,arguments);};}(),[me,credId,credential])),submitError=_useRequest.error,submitRequest=_useRequest.request,result=_useRequest.result;useEffect(function(){if(result){history.push(\"/credentials/\".concat(result.id,\"/details\"));}},[result,history]);var _useRequest2=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$Promise$all3,_yield$Promise$all4,data,results,adminOrgCount,credentialAdminCount,credTypes,_yield$CredentialType,additionalCredTypes,creds,inputSources;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return Promise.all([CredentialTypesAPI.read({page_size:200}),CredentialsAPI.readInputSources(credId),UsersAPI.readAdminOfOrganizations(me.id),OrganizationsAPI.read({page_size:1,role_level:'credential_admin_role'})]);case 2:_yield$Promise$all3=_context2.sent;_yield$Promise$all4=_slicedToArray(_yield$Promise$all3,4);data=_yield$Promise$all4[0].data;results=_yield$Promise$all4[1].data.results;adminOrgCount=_yield$Promise$all4[2].data.count;credentialAdminCount=_yield$Promise$all4[3].data.count;setIsOrgLookupDisabled(!(adminOrgCount||credentialAdminCount));credTypes=data.results;if(!(data.next&&data.next.includes('page=2'))){_context2.next=16;break;}_context2.next=13;return CredentialTypesAPI.read({page_size:200,page:2});case 13:_yield$CredentialType=_context2.sent;additionalCredTypes=_yield$CredentialType.data.results;credTypes.concat(_toConsumableArray(additionalCredTypes));case 16:creds=credTypes.reduce(function(credentialTypesMap,credentialType){credentialTypesMap[credentialType.id]=credentialType;return credentialTypesMap;},{});inputSources=results.reduce(function(inputSourcesMap,inputSource){inputSourcesMap[inputSource.input_field_name]=inputSource;return inputSourcesMap;},{});return _context2.abrupt(\"return\",{credentialTypes:creds,loadedInputSources:inputSources});case 19:case\"end\":return _context2.stop();}}},_callee2);})),[credId,me.id]),{}),isLoading=_useRequest2.isLoading,error=_useRequest2.error,loadData=_useRequest2.request,_useRequest2$result=_useRequest2.result,credentialTypes=_useRequest2$result.credentialTypes,loadedInputSources=_useRequest2$result.loadedInputSources;useEffect(function(){loadData();},[loadData]);var handleCancel=function handleCancel(){var url=\"/credentials/\".concat(credId,\"/details\");history.push(\"\".concat(url));};var handleSubmit=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return submitRequest(values,credentialTypes,loadedInputSources);case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function handleSubmit(_x4){return _ref6.apply(this,arguments);};}();if(error){return/*#__PURE__*/_jsx(ContentError,{error:error});}if(isLoading||!credentialTypes){return/*#__PURE__*/_jsx(ContentLoading,{});}return/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(CredentialForm,{onCancel:handleCancel,onSubmit:handleSubmit,credential:credential,credentialTypes:credentialTypes,inputSources:loadedInputSources,submitError:submitError,isOrgLookupDisabled:isOrgLookupDisabled})});}export{CredentialEdit as _CredentialEdit};export default CredentialEdit;","map":{"version":3,"names":["React","useCallback","useEffect","useState","useHistory","useParams","CardBody","CredentialsAPI","CredentialInputSourcesAPI","CredentialTypesAPI","OrganizationsAPI","UsersAPI","ContentError","ContentLoading","useRequest","useConfig","Credential","CredentialForm","jsx","_jsx","CredentialEdit","_ref","credential","history","_useParams","credId","id","_useConfig","_useConfig$me","me","_useState","_useState2","_slicedToArray","isOrgLookupDisabled","setIsOrgLookupDisabled","_useRequest","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","credentialTypesMap","inputSourceMap","_credential$inputs","credentialTypeInputs","inputs","organization","passwordPrompts","remainingValues","nonPluginInputs","pluginInputs","possibleFields","createAndUpdateInputSources","destroyInputSources","modifiedData","_yield$Promise$all","_yield$Promise$all2","data","wrap","_callee$","_context","prev","next","credential_type","_objectWithoutProperties","_excluded","fields","forEach","field","input","Object","entries","map","_ref3","_ref4","fieldName","fieldValue","create","input_field_name","metadata","source_credential","target_credential","touched","update","inputSource","_inputs$input_field_n","destroy","_objectSpread","user","kind","vault_id","Promise","all","concat","_toConsumableArray","sent","abrupt","stop","_x","_x2","_x3","apply","arguments","submitError","error","submitRequest","request","result","push","_useRequest2","_callee2","_yield$Promise$all3","_yield$Promise$all4","results","adminOrgCount","credentialAdminCount","credTypes","_yield$CredentialType","additionalCredTypes","creds","inputSources","_callee2$","_context2","read","page_size","readInputSources","readAdminOfOrganizations","role_level","count","includes","page","reduce","credentialType","inputSourcesMap","credentialTypes","loadedInputSources","isLoading","loadData","_useRequest2$result","handleCancel","url","handleSubmit","_ref6","_callee3","_callee3$","_context3","_x4","children","onCancel","onSubmit","_CredentialEdit"],"sources":["/awx_devel/awx/ui/src/screens/Credential/CredentialEdit/CredentialEdit.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { CardBody } from 'components/Card';\nimport {\n  CredentialsAPI,\n  CredentialInputSourcesAPI,\n  CredentialTypesAPI,\n  OrganizationsAPI,\n  UsersAPI,\n} from 'api';\nimport ContentError from 'components/ContentError';\nimport ContentLoading from 'components/ContentLoading';\nimport useRequest from 'hooks/useRequest';\nimport { useConfig } from 'contexts/Config';\nimport { Credential } from 'types';\nimport CredentialForm from '../shared/CredentialForm';\n\nfunction CredentialEdit({ credential }) {\n  const history = useHistory();\n  const { id: credId } = useParams();\n  const { me = {} } = useConfig();\n  const [isOrgLookupDisabled, setIsOrgLookupDisabled] = useState(false);\n\n  const {\n    error: submitError,\n    request: submitRequest,\n    result,\n  } = useRequest(\n    useCallback(\n      async (values, credentialTypesMap, inputSourceMap) => {\n        const { inputs: credentialTypeInputs } =\n          credentialTypesMap[values.credential_type];\n\n        const { inputs, organization, passwordPrompts, ...remainingValues } =\n          values;\n\n        const nonPluginInputs = {};\n        const pluginInputs = {};\n        const possibleFields = credentialTypeInputs.fields || [];\n\n        possibleFields.forEach((field) => {\n          const input = inputs[field.id];\n          if (input?.credential && input?.inputs) {\n            pluginInputs[field.id] = input;\n          } else if (passwordPrompts[field.id]) {\n            nonPluginInputs[field.id] = 'ASK';\n          } else {\n            nonPluginInputs[field.id] = input;\n          }\n        });\n\n        const createAndUpdateInputSources = () =>\n          Object.entries(pluginInputs).map(([fieldName, fieldValue]) => {\n            if (!inputSourceMap[fieldName]) {\n              return CredentialInputSourcesAPI.create({\n                input_field_name: fieldName,\n                metadata: fieldValue.inputs,\n                source_credential: fieldValue.credential.id,\n                target_credential: credId,\n              });\n            }\n            if (fieldValue.touched) {\n              return CredentialInputSourcesAPI.update(\n                inputSourceMap[fieldName].id,\n                {\n                  metadata: fieldValue.inputs,\n                  source_credential: fieldValue.credential.id,\n                }\n              );\n            }\n\n            return null;\n          });\n\n        const destroyInputSources = () =>\n          Object.values(inputSourceMap).map((inputSource) => {\n            const { id, input_field_name } = inputSource;\n            if (!inputs[input_field_name]?.credential) {\n              return CredentialInputSourcesAPI.destroy(id);\n            }\n            return null;\n          });\n\n        const modifiedData = { inputs: nonPluginInputs, ...remainingValues };\n        // can send only one of org, user, team\n        if (organization?.id) {\n          modifiedData.organization = organization.id;\n        } else {\n          modifiedData.organization = null;\n          if (me?.id) {\n            modifiedData.user = me.id;\n          }\n        }\n\n        if (credential.kind === 'vault' && !credential.inputs?.vault_id) {\n          delete modifiedData.inputs.vault_id;\n        }\n\n        const [{ data }] = await Promise.all([\n          CredentialsAPI.update(credId, modifiedData),\n          ...destroyInputSources(),\n        ]);\n\n        await Promise.all(createAndUpdateInputSources());\n\n        return data;\n      },\n      [me, credId, credential]\n    )\n  );\n\n  useEffect(() => {\n    if (result) {\n      history.push(`/credentials/${result.id}/details`);\n    }\n  }, [result, history]);\n  const {\n    isLoading,\n    error,\n    request: loadData,\n    result: { credentialTypes, loadedInputSources },\n  } = useRequest(\n    useCallback(async () => {\n      const [\n        { data },\n        {\n          data: { results },\n        },\n        {\n          data: { count: adminOrgCount },\n        },\n        {\n          data: { count: credentialAdminCount },\n        },\n      ] = await Promise.all([\n        CredentialTypesAPI.read({ page_size: 200 }),\n        CredentialsAPI.readInputSources(credId),\n        UsersAPI.readAdminOfOrganizations(me.id),\n        OrganizationsAPI.read({\n          page_size: 1,\n          role_level: 'credential_admin_role',\n        }),\n      ]);\n      setIsOrgLookupDisabled(!(adminOrgCount || credentialAdminCount));\n      const credTypes = data.results;\n      if (data.next && data.next.includes('page=2')) {\n        const {\n          data: { results: additionalCredTypes },\n        } = await CredentialTypesAPI.read({\n          page_size: 200,\n          page: 2,\n        });\n        credTypes.concat([...additionalCredTypes]);\n      }\n      const creds = credTypes.reduce((credentialTypesMap, credentialType) => {\n        credentialTypesMap[credentialType.id] = credentialType;\n        return credentialTypesMap;\n      }, {});\n      const inputSources = results.reduce((inputSourcesMap, inputSource) => {\n        inputSourcesMap[inputSource.input_field_name] = inputSource;\n        return inputSourcesMap;\n      }, {});\n      return { credentialTypes: creds, loadedInputSources: inputSources };\n    }, [credId, me.id]),\n    {}\n  );\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  const handleCancel = () => {\n    const url = `/credentials/${credId}/details`;\n    history.push(`${url}`);\n  };\n\n  const handleSubmit = async (values) => {\n    await submitRequest(values, credentialTypes, loadedInputSources);\n  };\n\n  if (error) {\n    return <ContentError error={error} />;\n  }\n\n  if (isLoading || !credentialTypes) {\n    return <ContentLoading />;\n  }\n\n  return (\n    <CardBody>\n      <CredentialForm\n        onCancel={handleCancel}\n        onSubmit={handleSubmit}\n        credential={credential}\n        credentialTypes={credentialTypes}\n        inputSources={loadedInputSources}\n        submitError={submitError}\n        isOrgLookupDisabled={isOrgLookupDisabled}\n      />\n    </CardBody>\n  );\n}\n\nCredentialEdit.propTypes = {\n  credential: Credential.isRequired,\n};\n\nexport { CredentialEdit as _CredentialEdit };\nexport default CredentialEdit;\n"],"mappings":"ksBAAA,MAAO,CAAAA,KAAK,EAAIC,WAAW,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC/D,OAASC,UAAU,CAAEC,SAAS,KAAQ,kBAAkB,CACxD,OAASC,QAAQ,KAAQ,iBAAiB,CAC1C,OACEC,cAAc,CACdC,yBAAyB,CACzBC,kBAAkB,CAClBC,gBAAgB,CAChBC,QAAQ,KACH,KAAK,CACZ,MAAO,CAAAC,YAAY,KAAM,yBAAyB,CAClD,MAAO,CAAAC,cAAc,KAAM,2BAA2B,CACtD,MAAO,CAAAC,UAAU,KAAM,kBAAkB,CACzC,OAASC,SAAS,KAAQ,iBAAiB,CAC3C,OAASC,UAAU,KAAQ,OAAO,CAClC,MAAO,CAAAC,cAAc,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtD,QAAS,CAAAC,cAAcA,CAAAC,IAAA,CAAiB,IAAd,CAAAC,UAAU,CAAAD,IAAA,CAAVC,UAAU,CAClC,GAAM,CAAAC,OAAO,CAAGnB,UAAU,CAAC,CAAC,CAC5B,IAAAoB,UAAA,CAAuBnB,SAAS,CAAC,CAAC,CAAtBoB,MAAM,CAAAD,UAAA,CAAVE,EAAE,CACV,IAAAC,UAAA,CAAoBZ,SAAS,CAAC,CAAC,CAAAa,aAAA,CAAAD,UAAA,CAAvBE,EAAE,CAAFA,EAAE,CAAAD,aAAA,UAAG,CAAC,CAAC,CAAAA,aAAA,CACf,IAAAE,SAAA,CAAsD3B,QAAQ,CAAC,KAAK,CAAC,CAAA4B,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA9DG,mBAAmB,CAAAF,UAAA,IAAEG,sBAAsB,CAAAH,UAAA,IAElD,IAAAI,WAAA,CAIIrB,UAAU,CACZb,WAAW,6BAAAmC,KAAA,CAAAC,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,CACT,SAAAC,QAAOC,MAAM,CAAEC,kBAAkB,CAAEC,cAAc,MAAAC,kBAAA,KAAAC,oBAAA,CAAAC,MAAA,CAAAC,YAAA,CAAAC,eAAA,CAAAC,eAAA,CAAAC,eAAA,CAAAC,YAAA,CAAAC,cAAA,CAAAC,2BAAA,CAAAC,mBAAA,CAAAC,YAAA,CAAAC,kBAAA,CAAAC,mBAAA,CAAAC,IAAA,QAAApB,mBAAA,CAAAqB,IAAA,UAAAC,SAAAC,QAAA,kBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAC/BlB,oBAAoB,CAClCH,kBAAkB,CAACD,MAAM,CAACuB,eAAe,CAAC,CADpClB,MAAM,CAGNA,MAAM,CACZL,MAAM,CADAK,MAAM,CAAEC,YAAY,CAC1BN,MAAM,CADQM,YAAY,CAAEC,eAAe,CAC3CP,MAAM,CADsBO,eAAe,CAAKC,eAAe,CAAAgB,wBAAA,CAC/DxB,MAAM,CAAAyB,SAAA,EAEFhB,eAAe,CAAG,CAAC,CAAC,CACpBC,YAAY,CAAG,CAAC,CAAC,CACjBC,cAAc,CAAGP,oBAAoB,CAACsB,MAAM,EAAI,EAAE,CAExDf,cAAc,CAACgB,OAAO,CAAC,SAACC,KAAK,CAAK,CAChC,GAAM,CAAAC,KAAK,CAAGxB,MAAM,CAACuB,KAAK,CAAC3C,EAAE,CAAC,CAC9B,GAAI4C,KAAK,SAALA,KAAK,WAALA,KAAK,CAAEhD,UAAU,EAAIgD,KAAK,SAALA,KAAK,WAALA,KAAK,CAAExB,MAAM,CAAE,CACtCK,YAAY,CAACkB,KAAK,CAAC3C,EAAE,CAAC,CAAG4C,KAAK,CAChC,CAAC,IAAM,IAAItB,eAAe,CAACqB,KAAK,CAAC3C,EAAE,CAAC,CAAE,CACpCwB,eAAe,CAACmB,KAAK,CAAC3C,EAAE,CAAC,CAAG,KAAK,CACnC,CAAC,IAAM,CACLwB,eAAe,CAACmB,KAAK,CAAC3C,EAAE,CAAC,CAAG4C,KAAK,CACnC,CACF,CAAC,CAAC,CAEIjB,2BAA2B,CAAG,QAA9B,CAAAA,2BAA2BA,CAAA,QAC/B,CAAAkB,MAAM,CAACC,OAAO,CAACrB,YAAY,CAAC,CAACsB,GAAG,CAAC,SAAAC,KAAA,CAA6B,KAAAC,KAAA,CAAA3C,cAAA,CAAA0C,KAAA,IAA3BE,SAAS,CAAAD,KAAA,IAAEE,UAAU,CAAAF,KAAA,IACtD,GAAI,CAAChC,cAAc,CAACiC,SAAS,CAAC,CAAE,CAC9B,MAAO,CAAApE,yBAAyB,CAACsE,MAAM,CAAC,CACtCC,gBAAgB,CAAEH,SAAS,CAC3BI,QAAQ,CAAEH,UAAU,CAAC/B,MAAM,CAC3BmC,iBAAiB,CAAEJ,UAAU,CAACvD,UAAU,CAACI,EAAE,CAC3CwD,iBAAiB,CAAEzD,MACrB,CAAC,CAAC,CACJ,CACA,GAAIoD,UAAU,CAACM,OAAO,CAAE,CACtB,MAAO,CAAA3E,yBAAyB,CAAC4E,MAAM,CACrCzC,cAAc,CAACiC,SAAS,CAAC,CAAClD,EAAE,CAC5B,CACEsD,QAAQ,CAAEH,UAAU,CAAC/B,MAAM,CAC3BmC,iBAAiB,CAAEJ,UAAU,CAACvD,UAAU,CAACI,EAC3C,CACF,CAAC,CACH,CAEA,MAAO,KAAI,CACb,CAAC,CAAC,GAEE4B,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CAAA,QACvB,CAAAiB,MAAM,CAAC9B,MAAM,CAACE,cAAc,CAAC,CAAC8B,GAAG,CAAC,SAACY,WAAW,CAAK,KAAAC,qBAAA,CACjD,GAAQ,CAAA5D,EAAE,CAAuB2D,WAAW,CAApC3D,EAAE,CAAEqD,gBAAgB,CAAKM,WAAW,CAAhCN,gBAAgB,CAC5B,GAAI,GAAAO,qBAAA,CAACxC,MAAM,CAACiC,gBAAgB,CAAC,UAAAO,qBAAA,WAAxBA,qBAAA,CAA0BhE,UAAU,EAAE,CACzC,MAAO,CAAAd,yBAAyB,CAAC+E,OAAO,CAAC7D,EAAE,CAAC,CAC9C,CACA,MAAO,KAAI,CACb,CAAC,CAAC,GAEE6B,YAAY,CAAAiC,aAAA,EAAK1C,MAAM,CAAEI,eAAe,EAAKD,eAAe,EAClE;AACA,GAAIF,YAAY,SAAZA,YAAY,WAAZA,YAAY,CAAErB,EAAE,CAAE,CACpB6B,YAAY,CAACR,YAAY,CAAGA,YAAY,CAACrB,EAAE,CAC7C,CAAC,IAAM,CACL6B,YAAY,CAACR,YAAY,CAAG,IAAI,CAChC,GAAIlB,EAAE,SAAFA,EAAE,WAAFA,EAAE,CAAEH,EAAE,CAAE,CACV6B,YAAY,CAACkC,IAAI,CAAG5D,EAAE,CAACH,EAAE,CAC3B,CACF,CAEA,GAAIJ,UAAU,CAACoE,IAAI,GAAK,OAAO,EAAI,GAAA9C,kBAAA,CAACtB,UAAU,CAACwB,MAAM,UAAAF,kBAAA,WAAjBA,kBAAA,CAAmB+C,QAAQ,EAAE,CAC/D,MAAO,CAAApC,YAAY,CAACT,MAAM,CAAC6C,QAAQ,CACrC,CAAC9B,QAAA,CAAAE,IAAA,UAEwB,CAAA6B,OAAO,CAACC,GAAG,EAClCtF,cAAc,CAAC6E,MAAM,CAAC3D,MAAM,CAAE8B,YAAY,CAAC,EAAAuC,MAAA,CAAAC,kBAAA,CACxCzC,mBAAmB,CAAC,CAAC,EACzB,CAAC,SAAAE,kBAAA,CAAAK,QAAA,CAAAmC,IAAA,CAAAvC,mBAAA,CAAAzB,cAAA,CAAAwB,kBAAA,IAHOE,IAAI,CAAAD,mBAAA,IAAJC,IAAI,CAAAG,QAAA,CAAAE,IAAA,UAKP,CAAA6B,OAAO,CAACC,GAAG,CAACxC,2BAA2B,CAAC,CAAC,CAAC,gBAAAQ,QAAA,CAAAoC,MAAA,UAEzCvC,IAAI,2BAAAG,QAAA,CAAAqC,IAAA,OAAA1D,OAAA,GACZ,mBAAA2D,EAAA,CAAAC,GAAA,CAAAC,GAAA,SAAAjE,KAAA,CAAAkE,KAAA,MAAAC,SAAA,QACD,CAAC1E,EAAE,CAAEJ,MAAM,CAAEH,UAAU,CACzB,CACF,CAAC,CArFQkF,WAAW,CAAArE,WAAA,CAAlBsE,KAAK,CACIC,aAAa,CAAAvE,WAAA,CAAtBwE,OAAO,CACPC,MAAM,CAAAzE,WAAA,CAANyE,MAAM,CAqFR1G,SAAS,CAAC,UAAM,CACd,GAAI0G,MAAM,CAAE,CACVrF,OAAO,CAACsF,IAAI,iBAAAf,MAAA,CAAiBc,MAAM,CAAClF,EAAE,YAAU,CAAC,CACnD,CACF,CAAC,CAAE,CAACkF,MAAM,CAAErF,OAAO,CAAC,CAAC,CACrB,IAAAuF,YAAA,CAKIhG,UAAU,CACZb,WAAW,cAAAoC,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,CAAC,SAAAwE,SAAA,MAAAC,mBAAA,CAAAC,mBAAA,CAAAvD,IAAA,CAAAwD,OAAA,CAAAC,aAAA,CAAAC,oBAAA,CAAAC,SAAA,CAAAC,qBAAA,CAAAC,mBAAA,CAAAC,KAAA,CAAAC,YAAA,QAAAnF,mBAAA,CAAAqB,IAAA,UAAA+D,UAAAC,SAAA,kBAAAA,SAAA,CAAA7D,IAAA,CAAA6D,SAAA,CAAA5D,IAAA,SAAA4D,SAAA,CAAA5D,IAAA,SAYA,CAAA6B,OAAO,CAACC,GAAG,CAAC,CACpBpF,kBAAkB,CAACmH,IAAI,CAAC,CAAEC,SAAS,CAAE,GAAI,CAAC,CAAC,CAC3CtH,cAAc,CAACuH,gBAAgB,CAACrG,MAAM,CAAC,CACvCd,QAAQ,CAACoH,wBAAwB,CAAClG,EAAE,CAACH,EAAE,CAAC,CACxChB,gBAAgB,CAACkH,IAAI,CAAC,CACpBC,SAAS,CAAE,CAAC,CACZG,UAAU,CAAE,uBACd,CAAC,CAAC,CACH,CAAC,QAAAhB,mBAAA,CAAAW,SAAA,CAAA3B,IAAA,CAAAiB,mBAAA,CAAAjF,cAAA,CAAAgF,mBAAA,IAlBEtD,IAAI,CAAAuD,mBAAA,IAAJvD,IAAI,CAEIwD,OAAO,CAAAD,mBAAA,IAAfvD,IAAI,CAAIwD,OAAO,CAGAC,aAAa,CAAAF,mBAAA,IAA5BvD,IAAI,CAAIuE,KAAK,CAGEb,oBAAoB,CAAAH,mBAAA,IAAnCvD,IAAI,CAAIuE,KAAK,CAWjB/F,sBAAsB,CAAC,EAAEiF,aAAa,EAAIC,oBAAoB,CAAC,CAAC,CAC1DC,SAAS,CAAG3D,IAAI,CAACwD,OAAO,MAC1BxD,IAAI,CAACK,IAAI,EAAIL,IAAI,CAACK,IAAI,CAACmE,QAAQ,CAAC,QAAQ,CAAC,GAAAP,SAAA,CAAA5D,IAAA,WAAA4D,SAAA,CAAA5D,IAAA,UAGjC,CAAAtD,kBAAkB,CAACmH,IAAI,CAAC,CAChCC,SAAS,CAAE,GAAG,CACdM,IAAI,CAAE,CACR,CAAC,CAAC,SAAAb,qBAAA,CAAAK,SAAA,CAAA3B,IAAA,CAJiBuB,mBAAmB,CAAAD,qBAAA,CAApC5D,IAAI,CAAIwD,OAAO,CAKjBG,SAAS,CAACvB,MAAM,CAAAC,kBAAA,CAAKwB,mBAAmB,CAAC,CAAC,CAAC,QAEvCC,KAAK,CAAGH,SAAS,CAACe,MAAM,CAAC,SAAC1F,kBAAkB,CAAE2F,cAAc,CAAK,CACrE3F,kBAAkB,CAAC2F,cAAc,CAAC3G,EAAE,CAAC,CAAG2G,cAAc,CACtD,MAAO,CAAA3F,kBAAkB,CAC3B,CAAC,CAAE,CAAC,CAAC,CAAC,CACA+E,YAAY,CAAGP,OAAO,CAACkB,MAAM,CAAC,SAACE,eAAe,CAAEjD,WAAW,CAAK,CACpEiD,eAAe,CAACjD,WAAW,CAACN,gBAAgB,CAAC,CAAGM,WAAW,CAC3D,MAAO,CAAAiD,eAAe,CACxB,CAAC,CAAE,CAAC,CAAC,CAAC,QAAAX,SAAA,CAAA1B,MAAA,UACC,CAAEsC,eAAe,CAAEf,KAAK,CAAEgB,kBAAkB,CAAEf,YAAa,CAAC,2BAAAE,SAAA,CAAAzB,IAAA,OAAAa,QAAA,GACpE,GAAE,CAACtF,MAAM,CAAEI,EAAE,CAACH,EAAE,CAAC,CAAC,CACnB,CAAC,CACH,CAAC,CAhDC+G,SAAS,CAAA3B,YAAA,CAAT2B,SAAS,CACThC,KAAK,CAAAK,YAAA,CAALL,KAAK,CACIiC,QAAQ,CAAA5B,YAAA,CAAjBH,OAAO,CAAAgC,mBAAA,CAAA7B,YAAA,CACPF,MAAM,CAAI2B,eAAe,CAAAI,mBAAA,CAAfJ,eAAe,CAAEC,kBAAkB,CAAAG,mBAAA,CAAlBH,kBAAkB,CA+C/CtI,SAAS,CAAC,UAAM,CACdwI,QAAQ,CAAC,CAAC,CACZ,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEd,GAAM,CAAAE,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAA,CAAS,CACzB,GAAM,CAAAC,GAAG,iBAAA/C,MAAA,CAAmBrE,MAAM,YAAU,CAC5CF,OAAO,CAACsF,IAAI,IAAAf,MAAA,CAAI+C,GAAG,CAAE,CAAC,CACxB,CAAC,CAED,GAAM,CAAAC,YAAY,6BAAAC,KAAA,CAAA1G,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,CAAG,SAAAyG,SAAOvG,MAAM,SAAAH,mBAAA,CAAAqB,IAAA,UAAAsF,UAAAC,SAAA,kBAAAA,SAAA,CAAApF,IAAA,CAAAoF,SAAA,CAAAnF,IAAA,SAAAmF,SAAA,CAAAnF,IAAA,SAC1B,CAAA2C,aAAa,CAACjE,MAAM,CAAE8F,eAAe,CAAEC,kBAAkB,CAAC,yBAAAU,SAAA,CAAAhD,IAAA,OAAA8C,QAAA,GACjE,kBAFK,CAAAF,YAAYA,CAAAK,GAAA,SAAAJ,KAAA,CAAAzC,KAAA,MAAAC,SAAA,OAEjB,CAED,GAAIE,KAAK,CAAE,CACT,mBAAOtF,IAAA,CAACP,YAAY,EAAC6F,KAAK,CAAEA,KAAM,CAAE,CAAC,CACvC,CAEA,GAAIgC,SAAS,EAAI,CAACF,eAAe,CAAE,CACjC,mBAAOpH,IAAA,CAACN,cAAc,GAAE,CAAC,CAC3B,CAEA,mBACEM,IAAA,CAACb,QAAQ,EAAA8I,QAAA,cACPjI,IAAA,CAACF,cAAc,EACboI,QAAQ,CAAET,YAAa,CACvBU,QAAQ,CAAER,YAAa,CACvBxH,UAAU,CAAEA,UAAW,CACvBiH,eAAe,CAAEA,eAAgB,CACjCd,YAAY,CAAEe,kBAAmB,CACjChC,WAAW,CAAEA,WAAY,CACzBvE,mBAAmB,CAAEA,mBAAoB,CAC1C,CAAC,CACM,CAAC,CAEf,CAMA,OAASb,cAAc,GAAI,CAAAmI,eAAe,EAC1C,cAAe,CAAAnI,cAAc"},"metadata":{},"sourceType":"module"}