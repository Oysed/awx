{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _excluded=[\"fieldOptions\",\"isFieldGroupValid\",\"credentialKind\",\"isVaultIdDisabled\"];var _templateObject;import{i18n}from\"@lingui/core\";/* eslint-disable react/jsx-no-useless-fragment */import React,{useState}from'react';import{useLocation}from'react-router-dom';import{useField,useFormikContext}from'formik';import styled from'styled-components';import{Button,ButtonVariant,FileUpload as PFFileUpload,FormGroup,InputGroup,TextInput,Tooltip}from'@patternfly/react-core';import{PficonHistoryIcon}from'@patternfly/react-icons';import{PasswordInput}from'components/FormField';import AnsibleSelect from'components/AnsibleSelect';import Popover from'components/Popover';import{CredentialType}from'types';import{required}from'util/validators';import{CredentialPluginField}from'../CredentialPlugins';import BecomeMethodField from'./BecomeMethodField';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FileUpload=styled(PFFileUpload)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  flex-grow: 1;\\n\"])));function CredentialInput(_ref){var fieldOptions=_ref.fieldOptions,isFieldGroupValid=_ref.isFieldGroupValid,credentialKind=_ref.credentialKind,isVaultIdDisabled=_ref.isVaultIdDisabled,rest=_objectWithoutProperties(_ref,_excluded);var _useState=useState(''),_useState2=_slicedToArray(_useState,2),fileName=_useState2[0],setFileName=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),fileIsUploading=_useState4[0],setFileIsUploading=_useState4[1];var _useField=useField(\"inputs.\".concat(fieldOptions.id)),_useField2=_slicedToArray(_useField,3),subFormField=_useField2[0],meta=_useField2[1],helpers=_useField2[2];var _useField3=useField(\"passwordPrompts.\".concat(fieldOptions.id)),_useField4=_slicedToArray(_useField3,1),passwordPromptsField=_useField4[0];var isValid=!(meta.touched&&meta.error);var RevertReplaceButton=/*#__PURE__*/_jsx(_Fragment,{children:meta.initialValue&&meta.initialValue!==''&&!meta.initialValue.credential&&!passwordPromptsField.value&&/*#__PURE__*/_jsx(Tooltip,{id:\"credential-\".concat(fieldOptions.id,\"-replace-tooltip\"),content:meta.value!==meta.initialValue?/*i18n*/i18n._(\"Revert\"):/*i18n*/i18n._(\"Replace\"),children:/*#__PURE__*/_jsx(Button,{id:\"credential-\".concat(fieldOptions.id,\"-replace-button\"),variant:ButtonVariant.control,\"aria-label\":meta.touched?/*i18n*/i18n._(\"Revert field to previously saved value\"):/*i18n*/i18n._(\"Replace field with new value\"),onClick:function onClick(){if(meta.value!==meta.initialValue){helpers.setValue(meta.initialValue);}else{helpers.setValue('',false);}},children:/*#__PURE__*/_jsx(PficonHistoryIcon,{})})})});if(fieldOptions.multiline){var handleFileChange=function handleFileChange(value,filename){helpers.setValue(value);setFileName(filename);};if(fieldOptions.secret){return/*#__PURE__*/_jsxs(InputGroup,{children:[RevertReplaceButton,/*#__PURE__*/_jsx(FileUpload,_objectSpread(_objectSpread(_objectSpread({},subFormField),rest),{},{id:\"credential-\".concat(fieldOptions.id),type:\"text\",filename:fileName,filenamePlaceholder:/*i18n*/i18n._(\"Drag a file here or browse to upload\"),browseButtonText:/*i18n*/i18n._(\"Browse\\u2026\"),clearButtonText:/*i18n*/i18n._(\"Clear\"),onChange:handleFileChange,onReadStarted:function onReadStarted(){return setFileIsUploading(true);},onReadFinished:function onReadFinished(){return setFileIsUploading(false);},isLoading:fileIsUploading,allowEditingUploadedText:true,validated:isValid?'default':'error'}))]});}return/*#__PURE__*/_jsx(FileUpload,_objectSpread(_objectSpread(_objectSpread({},subFormField),rest),{},{id:\"credential-\".concat(fieldOptions.id),type:\"text\",filename:fileName,filenamePlaceholder:/*i18n*/i18n._(\"Drag a file here or browse to upload\"),browseButtonText:/*i18n*/i18n._(\"Browse\\u2026\"),clearButtonText:/*i18n*/i18n._(\"Clear\"),onChange:handleFileChange,onReadStarted:function onReadStarted(){return setFileIsUploading(true);},onReadFinished:function onReadFinished(){return setFileIsUploading(false);},isLoading:fileIsUploading,allowEditingUploadedText:true,validated:isValid?'default':'error',isDisabled:false}));}if(fieldOptions.secret){var passwordInput=function passwordInput(){return/*#__PURE__*/_jsxs(_Fragment,{children:[RevertReplaceButton,/*#__PURE__*/_jsx(PasswordInput,_objectSpread(_objectSpread({isFieldGroupValid:isFieldGroupValid},subFormField),{},{id:\"credential-\".concat(fieldOptions.id)},rest))]});};return credentialKind==='external'?/*#__PURE__*/_jsx(InputGroup,{children:passwordInput()}):passwordInput();}return/*#__PURE__*/_jsx(TextInput,_objectSpread(_objectSpread({},subFormField),{},{id:\"credential-\".concat(fieldOptions.id),onChange:function onChange(value,event){subFormField.onChange(event);},isDisabled:isVaultIdDisabled,validated:isValid?'default':'error'}));}CredentialInput.defaultProps={credentialKind:''};function CredentialField(_ref2){var _credentialType$input;var credentialType=_ref2.credentialType,fieldOptions=_ref2.fieldOptions;var _useFormikContext=useFormikContext(),formikValues=_useFormikContext.values;var location=useLocation();var requiredFields=(credentialType===null||credentialType===void 0?void 0:(_credentialType$input=credentialType.inputs)===null||_credentialType$input===void 0?void 0:_credentialType$input.required)||[];var isRequired=requiredFields.includes(fieldOptions.id);var validateField=function validateField(){if(isRequired&&!(formikValues!==null&&formikValues!==void 0&&formikValues.passwordPrompts[fieldOptions.id])){var validationMsg=fieldOptions.ask_at_runtime?/*i18n*/i18n._(\"Provide a value for this field or select the Prompt on launch option.\"):null;return required(validationMsg);}return null;};var _useField5=useField({name:\"inputs.\".concat(fieldOptions.id),validate:validateField()}),_useField6=_slicedToArray(_useField5,3),subFormField=_useField6[0],meta=_useField6[1],helpers=_useField6[2];var isValid=!(meta.touched&&meta.error)||formikValues.passwordPrompts[fieldOptions.id];if(fieldOptions.choices){var selectOptions=fieldOptions.choices.map(function(choice){return{value:choice,key:choice,label:choice};});return/*#__PURE__*/_jsx(FormGroup,{fieldId:\"credential-\".concat(fieldOptions.id),helperTextInvalid:meta.error,label:fieldOptions.label,isRequired:isRequired,validated:isValid?'default':'error',children:/*#__PURE__*/_jsx(AnsibleSelect,_objectSpread(_objectSpread({},subFormField),{},{id:\"credential-\".concat(fieldOptions.id),data:selectOptions,onChange:function onChange(event,value){helpers.setValue(value);}}))});}if(credentialType.kind==='external'){return/*#__PURE__*/_jsx(FormGroup,{fieldId:\"credential-\".concat(fieldOptions.id),helperTextInvalid:meta.error,label:fieldOptions.label,labelIcon:fieldOptions.help_text&&/*#__PURE__*/_jsx(Popover,{content:fieldOptions.help_text}),isRequired:isRequired,validated:isValid?'default':'error',children:/*#__PURE__*/_jsx(CredentialInput,{credentialKind:credentialType.kind,fieldOptions:fieldOptions,isDisabled:!!(meta.initialValue&&meta.initialValue!==''&&meta.value===meta.initialValue)})});}if(credentialType.kind==='ssh'&&fieldOptions.id==='become_method'){return/*#__PURE__*/_jsx(BecomeMethodField,{fieldOptions:fieldOptions,isRequired:isRequired});}var disabled=false;if(credentialType.kind==='vault'&&location.pathname.endsWith('edit')&&fieldOptions.id==='vault_id'){disabled=true;}return/*#__PURE__*/_jsx(CredentialPluginField,{fieldOptions:fieldOptions,isRequired:isRequired,validated:isValid?'default':'error',children:/*#__PURE__*/_jsx(CredentialInput,{isFieldGroupValid:isValid,fieldOptions:fieldOptions,isVaultIdDisabled:disabled})});}CredentialField.defaultProps={};export default CredentialField;","map":{"version":3,"names":["React","useState","useLocation","useField","useFormikContext","styled","Button","ButtonVariant","FileUpload","PFFileUpload","FormGroup","InputGroup","TextInput","Tooltip","PficonHistoryIcon","PasswordInput","AnsibleSelect","Popover","CredentialType","required","CredentialPluginField","BecomeMethodField","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","_templateObject","_taggedTemplateLiteral","CredentialInput","_ref","fieldOptions","isFieldGroupValid","credentialKind","isVaultIdDisabled","rest","_objectWithoutProperties","_excluded","_useState","_useState2","_slicedToArray","fileName","setFileName","_useState3","_useState4","fileIsUploading","setFileIsUploading","_useField","concat","id","_useField2","subFormField","meta","helpers","_useField3","_useField4","passwordPromptsField","isValid","touched","error","RevertReplaceButton","children","initialValue","credential","value","content","i18n","_","variant","control","onClick","setValue","multiline","handleFileChange","filename","secret","_objectSpread","type","filenamePlaceholder","browseButtonText","clearButtonText","onChange","onReadStarted","onReadFinished","isLoading","allowEditingUploadedText","validated","isDisabled","passwordInput","event","defaultProps","CredentialField","_ref2","_credentialType$input","credentialType","_useFormikContext","formikValues","values","location","requiredFields","inputs","isRequired","includes","validateField","passwordPrompts","validationMsg","ask_at_runtime","_useField5","name","validate","_useField6","choices","selectOptions","map","choice","key","label","fieldId","helperTextInvalid","data","kind","labelIcon","help_text","disabled","pathname","endsWith"],"sources":["/awx_devel/awx/ui/src/screens/Credential/shared/CredentialFormFields/CredentialField.js"],"sourcesContent":["/* eslint-disable react/jsx-no-useless-fragment */\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useField, useFormikContext } from 'formik';\nimport { shape, string } from 'prop-types';\nimport styled from 'styled-components';\n\nimport { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  FileUpload as PFFileUpload,\n  FormGroup,\n  InputGroup,\n  TextInput,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { PficonHistoryIcon } from '@patternfly/react-icons';\nimport { PasswordInput } from 'components/FormField';\nimport AnsibleSelect from 'components/AnsibleSelect';\nimport Popover from 'components/Popover';\nimport { CredentialType } from 'types';\nimport { required } from 'util/validators';\nimport { CredentialPluginField } from '../CredentialPlugins';\nimport BecomeMethodField from './BecomeMethodField';\n\nconst FileUpload = styled(PFFileUpload)`\n  flex-grow: 1;\n`;\n\nfunction CredentialInput({\n  fieldOptions,\n  isFieldGroupValid,\n  credentialKind,\n  isVaultIdDisabled,\n  ...rest\n}) {\n  const [fileName, setFileName] = useState('');\n  const [fileIsUploading, setFileIsUploading] = useState(false);\n  const [subFormField, meta, helpers] = useField(`inputs.${fieldOptions.id}`);\n  const [passwordPromptsField] = useField(`passwordPrompts.${fieldOptions.id}`);\n  const isValid = !(meta.touched && meta.error);\n\n  const RevertReplaceButton = (\n    <>\n      {meta.initialValue &&\n        meta.initialValue !== '' &&\n        !meta.initialValue.credential &&\n        !passwordPromptsField.value && (\n          <Tooltip\n            id={`credential-${fieldOptions.id}-replace-tooltip`}\n            content={meta.value !== meta.initialValue ? t`Revert` : t`Replace`}\n          >\n            <Button\n              id={`credential-${fieldOptions.id}-replace-button`}\n              variant={ButtonVariant.control}\n              aria-label={\n                meta.touched\n                  ? t`Revert field to previously saved value`\n                  : t`Replace field with new value`\n              }\n              onClick={() => {\n                if (meta.value !== meta.initialValue) {\n                  helpers.setValue(meta.initialValue);\n                } else {\n                  helpers.setValue('', false);\n                }\n              }}\n            >\n              <PficonHistoryIcon />\n            </Button>\n          </Tooltip>\n        )}\n    </>\n  );\n\n  if (fieldOptions.multiline) {\n    const handleFileChange = (value, filename) => {\n      helpers.setValue(value);\n      setFileName(filename);\n    };\n\n    if (fieldOptions.secret) {\n      return (\n        <InputGroup>\n          {RevertReplaceButton}\n          <FileUpload\n            {...subFormField}\n            {...rest}\n            id={`credential-${fieldOptions.id}`}\n            type=\"text\"\n            filename={fileName}\n            filenamePlaceholder={t`Drag a file here or browse to upload`}\n            browseButtonText={t`Browse…`}\n            clearButtonText={t`Clear`}\n            onChange={handleFileChange}\n            onReadStarted={() => setFileIsUploading(true)}\n            onReadFinished={() => setFileIsUploading(false)}\n            isLoading={fileIsUploading}\n            allowEditingUploadedText\n            validated={isValid ? 'default' : 'error'}\n          />\n        </InputGroup>\n      );\n    }\n\n    return (\n      <FileUpload\n        {...subFormField}\n        {...rest}\n        id={`credential-${fieldOptions.id}`}\n        type=\"text\"\n        filename={fileName}\n        filenamePlaceholder={t`Drag a file here or browse to upload`}\n        browseButtonText={t`Browse…`}\n        clearButtonText={t`Clear`}\n        onChange={handleFileChange}\n        onReadStarted={() => setFileIsUploading(true)}\n        onReadFinished={() => setFileIsUploading(false)}\n        isLoading={fileIsUploading}\n        allowEditingUploadedText\n        validated={isValid ? 'default' : 'error'}\n        isDisabled={false}\n      />\n    );\n  }\n\n  if (fieldOptions.secret) {\n    const passwordInput = () => (\n      <>\n        {RevertReplaceButton}\n        <PasswordInput\n          isFieldGroupValid={isFieldGroupValid}\n          {...subFormField}\n          id={`credential-${fieldOptions.id}`}\n          {...rest}\n        />\n      </>\n    );\n    return credentialKind === 'external' ? (\n      <InputGroup>{passwordInput()}</InputGroup>\n    ) : (\n      passwordInput()\n    );\n  }\n  return (\n    <TextInput\n      {...subFormField}\n      id={`credential-${fieldOptions.id}`}\n      onChange={(value, event) => {\n        subFormField.onChange(event);\n      }}\n      isDisabled={isVaultIdDisabled}\n      validated={isValid ? 'default' : 'error'}\n    />\n  );\n}\n\nCredentialInput.propTypes = {\n  fieldOptions: shape({\n    id: string.isRequired,\n    label: string.isRequired,\n  }).isRequired,\n  credentialKind: string,\n};\n\nCredentialInput.defaultProps = {\n  credentialKind: '',\n};\n\nfunction CredentialField({ credentialType, fieldOptions }) {\n  const { values: formikValues } = useFormikContext();\n  const location = useLocation();\n  const requiredFields = credentialType?.inputs?.required || [];\n  const isRequired = requiredFields.includes(fieldOptions.id);\n  const validateField = () => {\n    if (isRequired && !formikValues?.passwordPrompts[fieldOptions.id]) {\n      const validationMsg = fieldOptions.ask_at_runtime\n        ? t`Provide a value for this field or select the Prompt on launch option.`\n        : null;\n      return required(validationMsg);\n    }\n    return null;\n  };\n  const [subFormField, meta, helpers] = useField({\n    name: `inputs.${fieldOptions.id}`,\n    validate: validateField(),\n  });\n  const isValid =\n    !(meta.touched && meta.error) ||\n    formikValues.passwordPrompts[fieldOptions.id];\n\n  if (fieldOptions.choices) {\n    const selectOptions = fieldOptions.choices.map((choice) => ({\n      value: choice,\n      key: choice,\n      label: choice,\n    }));\n    return (\n      <FormGroup\n        fieldId={`credential-${fieldOptions.id}`}\n        helperTextInvalid={meta.error}\n        label={fieldOptions.label}\n        isRequired={isRequired}\n        validated={isValid ? 'default' : 'error'}\n      >\n        <AnsibleSelect\n          {...subFormField}\n          id={`credential-${fieldOptions.id}`}\n          data={selectOptions}\n          onChange={(event, value) => {\n            helpers.setValue(value);\n          }}\n        />\n      </FormGroup>\n    );\n  }\n  if (credentialType.kind === 'external') {\n    return (\n      <FormGroup\n        fieldId={`credential-${fieldOptions.id}`}\n        helperTextInvalid={meta.error}\n        label={fieldOptions.label}\n        labelIcon={\n          fieldOptions.help_text && <Popover content={fieldOptions.help_text} />\n        }\n        isRequired={isRequired}\n        validated={isValid ? 'default' : 'error'}\n      >\n        <CredentialInput\n          credentialKind={credentialType.kind}\n          fieldOptions={fieldOptions}\n          isDisabled={\n            !!(\n              meta.initialValue &&\n              meta.initialValue !== '' &&\n              meta.value === meta.initialValue\n            )\n          }\n        />\n      </FormGroup>\n    );\n  }\n  if (credentialType.kind === 'ssh' && fieldOptions.id === 'become_method') {\n    return (\n      <BecomeMethodField fieldOptions={fieldOptions} isRequired={isRequired} />\n    );\n  }\n\n  let disabled = false;\n  if (\n    credentialType.kind === 'vault' &&\n    location.pathname.endsWith('edit') &&\n    fieldOptions.id === 'vault_id'\n  ) {\n    disabled = true;\n  }\n  return (\n    <CredentialPluginField\n      fieldOptions={fieldOptions}\n      isRequired={isRequired}\n      validated={isValid ? 'default' : 'error'}\n    >\n      <CredentialInput\n        isFieldGroupValid={isValid}\n        fieldOptions={fieldOptions}\n        isVaultIdDisabled={disabled}\n      />\n    </CredentialPluginField>\n  );\n}\n\nCredentialField.propTypes = {\n  credentialType: CredentialType.isRequired,\n  fieldOptions: shape({\n    id: string.isRequired,\n    label: string.isRequired,\n  }).isRequired,\n};\n\nCredentialField.defaultProps = {};\n\nexport default CredentialField;\n"],"mappings":"0kBAAA,kDACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,QAAQ,CAAEC,gBAAgB,KAAQ,QAAQ,CAEnD,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CAGtC,OACEC,MAAM,CACNC,aAAa,CACbC,UAAU,GAAI,CAAAC,YAAY,CAC1BC,SAAS,CACTC,UAAU,CACVC,SAAS,CACTC,OAAO,KACF,wBAAwB,CAC/B,OAASC,iBAAiB,KAAQ,yBAAyB,CAC3D,OAASC,aAAa,KAAQ,sBAAsB,CACpD,MAAO,CAAAC,aAAa,KAAM,0BAA0B,CACpD,MAAO,CAAAC,OAAO,KAAM,oBAAoB,CACxC,OAASC,cAAc,KAAQ,OAAO,CACtC,OAASC,QAAQ,KAAQ,iBAAiB,CAC1C,OAASC,qBAAqB,KAAQ,sBAAsB,CAC5D,MAAO,CAAAC,iBAAiB,KAAM,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEpD,GAAM,CAAAnB,UAAU,CAAGH,MAAM,CAACI,YAAY,CAAC,CAAAmB,eAAA,GAAAA,eAAA,CAAAC,sBAAA,2BAEtC,CAED,QAAS,CAAAC,eAAeA,CAAAC,IAAA,CAMrB,IALD,CAAAC,YAAY,CAAAD,IAAA,CAAZC,YAAY,CACZC,iBAAiB,CAAAF,IAAA,CAAjBE,iBAAiB,CACjBC,cAAc,CAAAH,IAAA,CAAdG,cAAc,CACdC,iBAAiB,CAAAJ,IAAA,CAAjBI,iBAAiB,CACdC,IAAI,CAAAC,wBAAA,CAAAN,IAAA,CAAAO,SAAA,EAEP,IAAAC,SAAA,CAAgCtC,QAAQ,CAAC,EAAE,CAAC,CAAAuC,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArCG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAC5B,IAAAI,UAAA,CAA8C3C,QAAQ,CAAC,KAAK,CAAC,CAAA4C,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAtDE,eAAe,CAAAD,UAAA,IAAEE,kBAAkB,CAAAF,UAAA,IAC1C,IAAAG,SAAA,CAAsC7C,QAAQ,WAAA8C,MAAA,CAAWjB,YAAY,CAACkB,EAAE,CAAE,CAAC,CAAAC,UAAA,CAAAV,cAAA,CAAAO,SAAA,IAApEI,YAAY,CAAAD,UAAA,IAAEE,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAClC,IAAAI,UAAA,CAA+BpD,QAAQ,oBAAA8C,MAAA,CAAoBjB,YAAY,CAACkB,EAAE,CAAE,CAAC,CAAAM,UAAA,CAAAf,cAAA,CAAAc,UAAA,IAAtEE,oBAAoB,CAAAD,UAAA,IAC3B,GAAM,CAAAE,OAAO,CAAG,EAAEL,IAAI,CAACM,OAAO,EAAIN,IAAI,CAACO,KAAK,CAAC,CAE7C,GAAM,CAAAC,mBAAmB,cACvBtC,IAAA,CAAAE,SAAA,EAAAqC,QAAA,CACGT,IAAI,CAACU,YAAY,EAChBV,IAAI,CAACU,YAAY,GAAK,EAAE,EACxB,CAACV,IAAI,CAACU,YAAY,CAACC,UAAU,EAC7B,CAACP,oBAAoB,CAACQ,KAAK,eACzB1C,IAAA,CAACV,OAAO,EACNqC,EAAE,eAAAD,MAAA,CAAgBjB,YAAY,CAACkB,EAAE,oBAAmB,CACpDgB,OAAO,CAAEb,IAAI,CAACY,KAAK,GAAKZ,IAAI,CAACU,YAAY,SAAGI,IAAA,CAAAC,CAAA,SAAQ,CAAC,SAAGD,IAAA,CAAAC,CAAA,UAAS,CAAE,CAAAN,QAAA,cAEnEvC,IAAA,CAACjB,MAAM,EACL4C,EAAE,eAAAD,MAAA,CAAgBjB,YAAY,CAACkB,EAAE,mBAAkB,CACnDmB,OAAO,CAAE9D,aAAa,CAAC+D,OAAQ,CAC/B,aACEjB,IAAI,CAACM,OAAO,SACRQ,IAAA,CAAAC,CAAA,yCAAwC,CAAC,SACzCD,IAAA,CAAAC,CAAA,+BAA8B,CACnC,CACDG,OAAO,CAAE,SAAAA,QAAA,CAAM,CACb,GAAIlB,IAAI,CAACY,KAAK,GAAKZ,IAAI,CAACU,YAAY,CAAE,CACpCT,OAAO,CAACkB,QAAQ,CAACnB,IAAI,CAACU,YAAY,CAAC,CACrC,CAAC,IAAM,CACLT,OAAO,CAACkB,QAAQ,CAAC,EAAE,CAAE,KAAK,CAAC,CAC7B,CACF,CAAE,CAAAV,QAAA,cAEFvC,IAAA,CAACT,iBAAiB,GAAE,CAAC,CACf,CAAC,CACF,CACV,CACH,CACH,CAED,GAAIkB,YAAY,CAACyC,SAAS,CAAE,CAC1B,GAAM,CAAAC,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAIT,KAAK,CAAEU,QAAQ,CAAK,CAC5CrB,OAAO,CAACkB,QAAQ,CAACP,KAAK,CAAC,CACvBtB,WAAW,CAACgC,QAAQ,CAAC,CACvB,CAAC,CAED,GAAI3C,YAAY,CAAC4C,MAAM,CAAE,CACvB,mBACEjD,KAAA,CAAChB,UAAU,EAAAmD,QAAA,EACRD,mBAAmB,cACpBtC,IAAA,CAACf,UAAU,CAAAqE,aAAA,CAAAA,aAAA,CAAAA,aAAA,IACLzB,YAAY,EACZhB,IAAI,MACRc,EAAE,eAAAD,MAAA,CAAgBjB,YAAY,CAACkB,EAAE,CAAG,CACpC4B,IAAI,CAAC,MAAM,CACXH,QAAQ,CAAEjC,QAAS,CACnBqC,mBAAmB,SAAEZ,IAAA,CAAAC,CAAA,uCAAsC,CAAE,CAC7DY,gBAAgB,SAAEb,IAAA,CAAAC,CAAA,eAAS,CAAE,CAC7Ba,eAAe,SAAEd,IAAA,CAAAC,CAAA,QAAO,CAAE,CAC1Bc,QAAQ,CAAER,gBAAiB,CAC3BS,aAAa,CAAE,SAAAA,cAAA,QAAM,CAAApC,kBAAkB,CAAC,IAAI,CAAC,EAAC,CAC9CqC,cAAc,CAAE,SAAAA,eAAA,QAAM,CAAArC,kBAAkB,CAAC,KAAK,CAAC,EAAC,CAChDsC,SAAS,CAAEvC,eAAgB,CAC3BwC,wBAAwB,MACxBC,SAAS,CAAE7B,OAAO,CAAG,SAAS,CAAG,OAAQ,EAC1C,CAAC,EACQ,CAAC,CAEjB,CAEA,mBACEnC,IAAA,CAACf,UAAU,CAAAqE,aAAA,CAAAA,aAAA,CAAAA,aAAA,IACLzB,YAAY,EACZhB,IAAI,MACRc,EAAE,eAAAD,MAAA,CAAgBjB,YAAY,CAACkB,EAAE,CAAG,CACpC4B,IAAI,CAAC,MAAM,CACXH,QAAQ,CAAEjC,QAAS,CACnBqC,mBAAmB,SAAEZ,IAAA,CAAAC,CAAA,uCAAsC,CAAE,CAC7DY,gBAAgB,SAAEb,IAAA,CAAAC,CAAA,eAAS,CAAE,CAC7Ba,eAAe,SAAEd,IAAA,CAAAC,CAAA,QAAO,CAAE,CAC1Bc,QAAQ,CAAER,gBAAiB,CAC3BS,aAAa,CAAE,SAAAA,cAAA,QAAM,CAAApC,kBAAkB,CAAC,IAAI,CAAC,EAAC,CAC9CqC,cAAc,CAAE,SAAAA,eAAA,QAAM,CAAArC,kBAAkB,CAAC,KAAK,CAAC,EAAC,CAChDsC,SAAS,CAAEvC,eAAgB,CAC3BwC,wBAAwB,MACxBC,SAAS,CAAE7B,OAAO,CAAG,SAAS,CAAG,OAAQ,CACzC8B,UAAU,CAAE,KAAM,EACnB,CAAC,CAEN,CAEA,GAAIxD,YAAY,CAAC4C,MAAM,CAAE,CACvB,GAAM,CAAAa,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,qBACjB9D,KAAA,CAAAF,SAAA,EAAAqC,QAAA,EACGD,mBAAmB,cACpBtC,IAAA,CAACR,aAAa,CAAA8D,aAAA,CAAAA,aAAA,EACZ5C,iBAAiB,CAAEA,iBAAkB,EACjCmB,YAAY,MAChBF,EAAE,eAAAD,MAAA,CAAgBjB,YAAY,CAACkB,EAAE,CAAG,EAChCd,IAAI,CACT,CAAC,EACF,CAAC,EACJ,CACD,MAAO,CAAAF,cAAc,GAAK,UAAU,cAClCX,IAAA,CAACZ,UAAU,EAAAmD,QAAA,CAAE2B,aAAa,CAAC,CAAC,CAAa,CAAC,CAE1CA,aAAa,CAAC,CACf,CACH,CACA,mBACElE,IAAA,CAACX,SAAS,CAAAiE,aAAA,CAAAA,aAAA,IACJzB,YAAY,MAChBF,EAAE,eAAAD,MAAA,CAAgBjB,YAAY,CAACkB,EAAE,CAAG,CACpCgC,QAAQ,CAAE,SAAAA,SAACjB,KAAK,CAAEyB,KAAK,CAAK,CAC1BtC,YAAY,CAAC8B,QAAQ,CAACQ,KAAK,CAAC,CAC9B,CAAE,CACFF,UAAU,CAAErD,iBAAkB,CAC9BoD,SAAS,CAAE7B,OAAO,CAAG,SAAS,CAAG,OAAQ,EAC1C,CAAC,CAEN,CAUA5B,eAAe,CAAC6D,YAAY,CAAG,CAC7BzD,cAAc,CAAE,EAClB,CAAC,CAED,QAAS,CAAA0D,eAAeA,CAAAC,KAAA,CAAmC,KAAAC,qBAAA,IAAhC,CAAAC,cAAc,CAAAF,KAAA,CAAdE,cAAc,CAAE/D,YAAY,CAAA6D,KAAA,CAAZ7D,YAAY,CACrD,IAAAgE,iBAAA,CAAiC5F,gBAAgB,CAAC,CAAC,CAAnC6F,YAAY,CAAAD,iBAAA,CAApBE,MAAM,CACd,GAAM,CAAAC,QAAQ,CAAGjG,WAAW,CAAC,CAAC,CAC9B,GAAM,CAAAkG,cAAc,CAAG,CAAAL,cAAc,SAAdA,cAAc,kBAAAD,qBAAA,CAAdC,cAAc,CAAEM,MAAM,UAAAP,qBAAA,iBAAtBA,qBAAA,CAAwB3E,QAAQ,GAAI,EAAE,CAC7D,GAAM,CAAAmF,UAAU,CAAGF,cAAc,CAACG,QAAQ,CAACvE,YAAY,CAACkB,EAAE,CAAC,CAC3D,GAAM,CAAAsD,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CAC1B,GAAIF,UAAU,EAAI,EAACL,YAAY,SAAZA,YAAY,WAAZA,YAAY,CAAEQ,eAAe,CAACzE,YAAY,CAACkB,EAAE,CAAC,EAAE,CACjE,GAAM,CAAAwD,aAAa,CAAG1E,YAAY,CAAC2E,cAAc,SAC7CxC,IAAA,CAAAC,CAAA,wEAAuE,CAAC,CACxE,IAAI,CACR,MAAO,CAAAjD,QAAQ,CAACuF,aAAa,CAAC,CAChC,CACA,MAAO,KAAI,CACb,CAAC,CACD,IAAAE,UAAA,CAAsCzG,QAAQ,CAAC,CAC7C0G,IAAI,WAAA5D,MAAA,CAAYjB,YAAY,CAACkB,EAAE,CAAE,CACjC4D,QAAQ,CAAEN,aAAa,CAAC,CAC1B,CAAC,CAAC,CAAAO,UAAA,CAAAtE,cAAA,CAAAmE,UAAA,IAHKxD,YAAY,CAAA2D,UAAA,IAAE1D,IAAI,CAAA0D,UAAA,IAAEzD,OAAO,CAAAyD,UAAA,IAIlC,GAAM,CAAArD,OAAO,CACX,EAAEL,IAAI,CAACM,OAAO,EAAIN,IAAI,CAACO,KAAK,CAAC,EAC7BqC,YAAY,CAACQ,eAAe,CAACzE,YAAY,CAACkB,EAAE,CAAC,CAE/C,GAAIlB,YAAY,CAACgF,OAAO,CAAE,CACxB,GAAM,CAAAC,aAAa,CAAGjF,YAAY,CAACgF,OAAO,CAACE,GAAG,CAAC,SAACC,MAAM,QAAM,CAC1DlD,KAAK,CAAEkD,MAAM,CACbC,GAAG,CAAED,MAAM,CACXE,KAAK,CAAEF,MACT,CAAC,EAAC,CAAC,CACH,mBACE5F,IAAA,CAACb,SAAS,EACR4G,OAAO,eAAArE,MAAA,CAAgBjB,YAAY,CAACkB,EAAE,CAAG,CACzCqE,iBAAiB,CAAElE,IAAI,CAACO,KAAM,CAC9ByD,KAAK,CAAErF,YAAY,CAACqF,KAAM,CAC1Bf,UAAU,CAAEA,UAAW,CACvBf,SAAS,CAAE7B,OAAO,CAAG,SAAS,CAAG,OAAQ,CAAAI,QAAA,cAEzCvC,IAAA,CAACP,aAAa,CAAA6D,aAAA,CAAAA,aAAA,IACRzB,YAAY,MAChBF,EAAE,eAAAD,MAAA,CAAgBjB,YAAY,CAACkB,EAAE,CAAG,CACpCsE,IAAI,CAAEP,aAAc,CACpB/B,QAAQ,CAAE,SAAAA,SAACQ,KAAK,CAAEzB,KAAK,CAAK,CAC1BX,OAAO,CAACkB,QAAQ,CAACP,KAAK,CAAC,CACzB,CAAE,EACH,CAAC,CACO,CAAC,CAEhB,CACA,GAAI8B,cAAc,CAAC0B,IAAI,GAAK,UAAU,CAAE,CACtC,mBACElG,IAAA,CAACb,SAAS,EACR4G,OAAO,eAAArE,MAAA,CAAgBjB,YAAY,CAACkB,EAAE,CAAG,CACzCqE,iBAAiB,CAAElE,IAAI,CAACO,KAAM,CAC9ByD,KAAK,CAAErF,YAAY,CAACqF,KAAM,CAC1BK,SAAS,CACP1F,YAAY,CAAC2F,SAAS,eAAIpG,IAAA,CAACN,OAAO,EAACiD,OAAO,CAAElC,YAAY,CAAC2F,SAAU,CAAE,CACtE,CACDrB,UAAU,CAAEA,UAAW,CACvBf,SAAS,CAAE7B,OAAO,CAAG,SAAS,CAAG,OAAQ,CAAAI,QAAA,cAEzCvC,IAAA,CAACO,eAAe,EACdI,cAAc,CAAE6D,cAAc,CAAC0B,IAAK,CACpCzF,YAAY,CAAEA,YAAa,CAC3BwD,UAAU,CACR,CAAC,EACCnC,IAAI,CAACU,YAAY,EACjBV,IAAI,CAACU,YAAY,GAAK,EAAE,EACxBV,IAAI,CAACY,KAAK,GAAKZ,IAAI,CAACU,YAAY,CAEnC,CACF,CAAC,CACO,CAAC,CAEhB,CACA,GAAIgC,cAAc,CAAC0B,IAAI,GAAK,KAAK,EAAIzF,YAAY,CAACkB,EAAE,GAAK,eAAe,CAAE,CACxE,mBACE3B,IAAA,CAACF,iBAAiB,EAACW,YAAY,CAAEA,YAAa,CAACsE,UAAU,CAAEA,UAAW,CAAE,CAAC,CAE7E,CAEA,GAAI,CAAAsB,QAAQ,CAAG,KAAK,CACpB,GACE7B,cAAc,CAAC0B,IAAI,GAAK,OAAO,EAC/BtB,QAAQ,CAAC0B,QAAQ,CAACC,QAAQ,CAAC,MAAM,CAAC,EAClC9F,YAAY,CAACkB,EAAE,GAAK,UAAU,CAC9B,CACA0E,QAAQ,CAAG,IAAI,CACjB,CACA,mBACErG,IAAA,CAACH,qBAAqB,EACpBY,YAAY,CAAEA,YAAa,CAC3BsE,UAAU,CAAEA,UAAW,CACvBf,SAAS,CAAE7B,OAAO,CAAG,SAAS,CAAG,OAAQ,CAAAI,QAAA,cAEzCvC,IAAA,CAACO,eAAe,EACdG,iBAAiB,CAAEyB,OAAQ,CAC3B1B,YAAY,CAAEA,YAAa,CAC3BG,iBAAiB,CAAEyF,QAAS,CAC7B,CAAC,CACmB,CAAC,CAE5B,CAUAhC,eAAe,CAACD,YAAY,CAAG,CAAC,CAAC,CAEjC,cAAe,CAAAC,eAAe"},"metadata":{},"sourceType":"module"}