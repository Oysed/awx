{"ast":null,"code":"import{i18n}from\"@lingui/core\";import React from'react';import{Tr,Td}from'@patternfly/react-table';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function InstanceListenerAddressListItem(_ref){var peerListenerAddress=_ref.peerListenerAddress,isSelected=_ref.isSelected,onSelect=_ref.onSelect,rowIndex=_ref.rowIndex;var labelId=\"check-action-\".concat(peerListenerAddress.id);return/*#__PURE__*/_jsxs(Tr,{id:\"peerListenerAddress-row-\".concat(peerListenerAddress.id),ouiaId:\"peerListenerAddress-row-\".concat(peerListenerAddress.id),children:[/*#__PURE__*/_jsx(Td,{select:{rowIndex:rowIndex,isSelected:isSelected,onSelect:onSelect},dataLabel:/*i18n*/i18n._(\"Selected\")}),/*#__PURE__*/_jsx(Td,{id:labelId,dataLabel:/*i18n*/i18n._(\"Address\"),children:peerListenerAddress.address}),/*#__PURE__*/_jsx(Td,{id:labelId,dataLabel:/*i18n*/i18n._(\"Port\"),children:peerListenerAddress.port}),/*#__PURE__*/_jsx(Td,{id:labelId,dataLabel:/*i18n*/i18n._(\"Protocol\"),children:peerListenerAddress.protocol}),/*#__PURE__*/_jsx(Td,{id:labelId,dataLabel:/*i18n*/i18n._(\"Canonical\"),children:peerListenerAddress.canonical.toString()})]});}export default InstanceListenerAddressListItem;","map":{"version":3,"names":["React","Tr","Td","jsx","_jsx","jsxs","_jsxs","InstanceListenerAddressListItem","_ref","peerListenerAddress","isSelected","onSelect","rowIndex","labelId","concat","id","ouiaId","children","select","dataLabel","i18n","_","address","port","protocol","canonical","toString"],"sources":["/awx_devel/awx/ui/src/screens/Instances/InstanceListenerAddressList/InstanceListenerAddressListItem.js"],"sourcesContent":["import React from 'react';\nimport { t } from '@lingui/macro';\nimport 'styled-components/macro';\nimport { Tr, Td } from '@patternfly/react-table';\n\nfunction InstanceListenerAddressListItem({\n  peerListenerAddress,\n  isSelected,\n  onSelect,\n  rowIndex,\n}) {\n  const labelId = `check-action-${peerListenerAddress.id}`;\n  return (\n    <Tr\n      id={`peerListenerAddress-row-${peerListenerAddress.id}`}\n      ouiaId={`peerListenerAddress-row-${peerListenerAddress.id}`}\n    >\n      <Td\n        select={{\n          rowIndex,\n          isSelected,\n          onSelect,\n        }}\n        dataLabel={t`Selected`}\n      />\n\n      <Td id={labelId} dataLabel={t`Address`}>\n        {peerListenerAddress.address}\n      </Td>\n\n      <Td id={labelId} dataLabel={t`Port`}>\n        {peerListenerAddress.port}\n      </Td>\n\n      <Td id={labelId} dataLabel={t`Protocol`}>\n        {peerListenerAddress.protocol}\n      </Td>\n\n      <Td id={labelId} dataLabel={t`Canonical`}>\n        {peerListenerAddress.canonical.toString()}\n      </Td>\n    </Tr>\n  );\n}\n\nexport default InstanceListenerAddressListItem;\n"],"mappings":"+BAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAGzB,OAASC,EAAE,CAAEC,EAAE,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEjD,QAAS,CAAAC,+BAA+BA,CAAAC,IAAA,CAKrC,IAJD,CAAAC,mBAAmB,CAAAD,IAAA,CAAnBC,mBAAmB,CACnBC,UAAU,CAAAF,IAAA,CAAVE,UAAU,CACVC,QAAQ,CAAAH,IAAA,CAARG,QAAQ,CACRC,QAAQ,CAAAJ,IAAA,CAARI,QAAQ,CAER,GAAM,CAAAC,OAAO,iBAAAC,MAAA,CAAmBL,mBAAmB,CAACM,EAAE,CAAE,CACxD,mBACET,KAAA,CAACL,EAAE,EACDc,EAAE,4BAAAD,MAAA,CAA6BL,mBAAmB,CAACM,EAAE,CAAG,CACxDC,MAAM,4BAAAF,MAAA,CAA6BL,mBAAmB,CAACM,EAAE,CAAG,CAAAE,QAAA,eAE5Db,IAAA,CAACF,EAAE,EACDgB,MAAM,CAAE,CACNN,QAAQ,CAARA,QAAQ,CACRF,UAAU,CAAVA,UAAU,CACVC,QAAQ,CAARA,QACF,CAAE,CACFQ,SAAS,SAAEC,IAAA,CAAAC,CAAA,WAAU,CAAE,CACxB,CAAC,cAEFjB,IAAA,CAACF,EAAE,EAACa,EAAE,CAAEF,OAAQ,CAACM,SAAS,SAAEC,IAAA,CAAAC,CAAA,UAAS,CAAE,CAAAJ,QAAA,CACpCR,mBAAmB,CAACa,OAAO,CAC1B,CAAC,cAELlB,IAAA,CAACF,EAAE,EAACa,EAAE,CAAEF,OAAQ,CAACM,SAAS,SAAEC,IAAA,CAAAC,CAAA,OAAM,CAAE,CAAAJ,QAAA,CACjCR,mBAAmB,CAACc,IAAI,CACvB,CAAC,cAELnB,IAAA,CAACF,EAAE,EAACa,EAAE,CAAEF,OAAQ,CAACM,SAAS,SAAEC,IAAA,CAAAC,CAAA,WAAU,CAAE,CAAAJ,QAAA,CACrCR,mBAAmB,CAACe,QAAQ,CAC3B,CAAC,cAELpB,IAAA,CAACF,EAAE,EAACa,EAAE,CAAEF,OAAQ,CAACM,SAAS,SAAEC,IAAA,CAAAC,CAAA,YAAW,CAAE,CAAAJ,QAAA,CACtCR,mBAAmB,CAACgB,SAAS,CAACC,QAAQ,CAAC,CAAC,CACvC,CAAC,EACH,CAAC,CAET,CAEA,cAAe,CAAAnB,+BAA+B"},"metadata":{},"sourceType":"module"}