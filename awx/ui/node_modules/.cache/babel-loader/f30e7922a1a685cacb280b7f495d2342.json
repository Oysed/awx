{"ast":null,"code":"import _slicedToArray from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useOUIAProps } from '@patternfly/react-core/dist/esm/helpers';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport { css } from '@patternfly/react-styles';\nimport { TableComposableContext } from './TableComposable';\nvar TrBase = function TrBase(_a) {\n  var children = _a.children,\n    className = _a.className,\n    isExpanded = _a.isExpanded,\n    isEditable = _a.isEditable,\n    _a$isHidden = _a.isHidden,\n    isHidden = _a$isHidden === void 0 ? false : _a$isHidden,\n    _a$isHoverable = _a.isHoverable,\n    isHoverable = _a$isHoverable === void 0 ? false : _a$isHoverable,\n    _a$isRowSelected = _a.isRowSelected,\n    isRowSelected = _a$isRowSelected === void 0 ? false : _a$isRowSelected,\n    _a$isStriped = _a.isStriped,\n    isStriped = _a$isStriped === void 0 ? false : _a$isStriped,\n    _a$isBorderRow = _a.isBorderRow,\n    isBorderRow = _a$isBorderRow === void 0 ? false : _a$isBorderRow,\n    innerRef = _a.innerRef,\n    ouiaId = _a.ouiaId,\n    _a$ouiaSafe = _a.ouiaSafe,\n    ouiaSafe = _a$ouiaSafe === void 0 ? true : _a$ouiaSafe,\n    _a$resetOffset = _a.resetOffset,\n    resetOffset = _a$resetOffset === void 0 ? false : _a$resetOffset,\n    onRowClick = _a.onRowClick,\n    isSelectable = _a.isSelectable,\n    passedAriaLabel = _a['aria-label'],\n    props = __rest(_a, [\"children\", \"className\", \"isExpanded\", \"isEditable\", \"isHidden\", \"isHoverable\", \"isRowSelected\", \"isStriped\", \"isBorderRow\", \"innerRef\", \"ouiaId\", \"ouiaSafe\", \"resetOffset\", \"onRowClick\", \"isSelectable\", 'aria-label']);\n  var ouiaProps = useOUIAProps('TableRow', ouiaId, ouiaSafe);\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    computedAriaLabel = _React$useState2[0],\n    setComputedAriaLabel = _React$useState2[1];\n  var onKeyDown = null;\n  if (onRowClick) {\n    onKeyDown = function onKeyDown(e) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        onRowClick(e);\n        e.preventDefault();\n      }\n    };\n  }\n  var rowIsHidden = isHidden || isExpanded !== undefined && !isExpanded;\n  var _React$useContext = React.useContext(TableComposableContext),\n    registerSelectableRow = _React$useContext.registerSelectableRow;\n  React.useEffect(function () {\n    if (isSelectable && !rowIsHidden) {\n      setComputedAriaLabel(\"\".concat(isRowSelected ? 'Row selected' : ''));\n      registerSelectableRow();\n    } else {\n      setComputedAriaLabel(undefined);\n    }\n  }, [isRowSelected, isSelectable, registerSelectableRow, rowIsHidden]);\n  var ariaLabel = passedAriaLabel || computedAriaLabel;\n  return React.createElement(React.Fragment, null, isSelectable && React.createElement(\"output\", {\n    className: \"pf-screen-reader\"\n  }, ariaLabel), React.createElement(\"tr\", Object.assign({\n    className: css(className, isExpanded !== undefined && styles.tableExpandableRow, isExpanded && styles.modifiers.expanded, isEditable && inlineStyles.modifiers.inlineEditable, isHoverable && styles.modifiers.hoverable, isRowSelected && styles.modifiers.selected, isStriped && styles.modifiers.striped, isBorderRow && styles.modifiers.borderRow, resetOffset && styles.modifiers.firstCellOffsetReset),\n    hidden: rowIsHidden\n  }, isHoverable && {\n    tabIndex: 0\n  }, {\n    \"aria-label\": ariaLabel,\n    ref: innerRef\n  }, onRowClick && {\n    onClick: onRowClick,\n    onKeyDown: onKeyDown\n  }, ouiaProps, props), children));\n};\nexport var Tr = React.forwardRef(function (props, ref) {\n  return React.createElement(TrBase, Object.assign({}, props, {\n    innerRef: ref\n  }));\n});\nTr.displayName = 'Tr';","map":{"version":3,"names":["React","useOUIAProps","styles","inlineStyles","css","TableComposableContext","TrBase","_a","children","className","isExpanded","isEditable","_a$isHidden","isHidden","_a$isHoverable","isHoverable","_a$isRowSelected","isRowSelected","_a$isStriped","isStriped","_a$isBorderRow","isBorderRow","innerRef","ouiaId","_a$ouiaSafe","ouiaSafe","_a$resetOffset","resetOffset","onRowClick","isSelectable","passedAriaLabel","props","__rest","ouiaProps","_React$useState","useState","_React$useState2","_slicedToArray","computedAriaLabel","setComputedAriaLabel","onKeyDown","e","key","preventDefault","rowIsHidden","undefined","_React$useContext","useContext","registerSelectableRow","useEffect","concat","ariaLabel","createElement","Fragment","Object","assign","tableExpandableRow","modifiers","expanded","inlineEditable","hoverable","selected","striped","borderRow","firstCellOffsetReset","hidden","tabIndex","ref","onClick","Tr","forwardRef","displayName"],"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/TableComposable/Tr.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useOUIAProps, OUIAProps } from '@patternfly/react-core/dist/esm/helpers';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport { css } from '@patternfly/react-styles';\nimport { TableComposableContext } from './TableComposable';\n\nexport interface TrProps extends React.HTMLProps<HTMLTableRowElement>, OUIAProps {\n  /** Content rendered inside the <tr> row */\n  children?: React.ReactNode;\n  /** Additional classes added to the <tr> row  */\n  className?: string;\n  /** Forwarded ref */\n  innerRef?: React.Ref<any>;\n  /** Flag indicating the Tr is hidden */\n  isHidden?: boolean;\n  /** Only applicable to Tr within the Tbody: Makes the row expandable and determines if it's expanded or not.\n   * To prevent column widths from responding automatically when expandable rows are toggled, the width prop must also be passed into either the th or td component\n   */\n  isExpanded?: boolean;\n  /** Only applicable to Tr within the Tbody: Whether the row is editable */\n  isEditable?: boolean;\n  /** Flag which adds hover styles for the table row */\n  isHoverable?: boolean;\n  /** Flag indicating the row is selected - adds selected styling */\n  isRowSelected?: boolean;\n  /** Flag indicating the row is striped */\n  isStriped?: boolean;\n  /** Flag indicating the row will act as a border. This is typically used for a table with a nested and sticky header. */\n  isBorderRow?: boolean;\n  /** An event handler for the row */\n  onRowClick?: (event?: React.KeyboardEvent | React.MouseEvent) => void;\n  /** Flag indicating that the row is selectable */\n  isSelectable?: boolean;\n  /** Flag indicating the spacing offset of the first cell should be reset */\n  resetOffset?: boolean;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\nconst TrBase: React.FunctionComponent<TrProps> = ({\n  children,\n  className,\n  isExpanded,\n  isEditable,\n  isHidden = false,\n  isHoverable = false,\n  isRowSelected = false,\n  isStriped = false,\n  isBorderRow = false,\n  innerRef,\n  ouiaId,\n  ouiaSafe = true,\n  resetOffset = false,\n  onRowClick,\n  isSelectable,\n  'aria-label': passedAriaLabel,\n  ...props\n}: TrProps) => {\n  const ouiaProps = useOUIAProps('TableRow', ouiaId, ouiaSafe);\n  const [computedAriaLabel, setComputedAriaLabel] = React.useState<string | undefined>('');\n\n  let onKeyDown = null;\n  if (onRowClick) {\n    onKeyDown = (e: React.KeyboardEvent) => {\n      if (e.key === 'Enter' || e.key === ' ') {\n        onRowClick(e);\n        e.preventDefault();\n      }\n    };\n  }\n\n  const rowIsHidden = isHidden || (isExpanded !== undefined && !isExpanded);\n\n  const { registerSelectableRow } = React.useContext(TableComposableContext);\n\n  React.useEffect(() => {\n    if (isSelectable && !rowIsHidden) {\n      setComputedAriaLabel(`${isRowSelected ? 'Row selected' : ''}`);\n      registerSelectableRow();\n    } else {\n      setComputedAriaLabel(undefined);\n    }\n  }, [isRowSelected, isSelectable, registerSelectableRow, rowIsHidden]);\n\n  const ariaLabel = passedAriaLabel || computedAriaLabel;\n\n  return (\n    <>\n      {isSelectable && <output className=\"pf-screen-reader\">{ariaLabel}</output>}\n      <tr\n        className={css(\n          className,\n          isExpanded !== undefined && styles.tableExpandableRow,\n          isExpanded && styles.modifiers.expanded,\n          isEditable && inlineStyles.modifiers.inlineEditable,\n          isHoverable && styles.modifiers.hoverable,\n          isRowSelected && styles.modifiers.selected,\n          isStriped && styles.modifiers.striped,\n          isBorderRow && styles.modifiers.borderRow,\n          resetOffset && styles.modifiers.firstCellOffsetReset\n        )}\n        hidden={rowIsHidden}\n        {...(isHoverable && { tabIndex: 0 })}\n        aria-label={ariaLabel}\n        ref={innerRef}\n        {...(onRowClick && { onClick: onRowClick, onKeyDown })}\n        {...ouiaProps}\n        {...props}\n      >\n        {children}\n      </tr>\n    </>\n  );\n};\n\nexport const Tr = React.forwardRef((props: TrProps, ref: React.Ref<HTMLTableRowElement>) => (\n  <TrBase {...props} innerRef={ref} />\n));\nTr.displayName = 'Tr';\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,YAAY,QAAmB,yCAAyC;AACjF,OAAOC,MAAM,MAAM,qDAAqD;AACxE,OAAOC,YAAY,MAAM,gEAAgE;AACzF,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,SAASC,sBAAsB,QAAQ,mBAAmB;AAqC1D,IAAMC,MAAM,GAAqC,SAA3CA,MAAMA,CAAsCC,EAkBxC,EAAI;MAjBZC,QAAQ,GAeqBD,EAErB,CAjBRC,QAAQ;IACRC,SAAS,GAcoBF,EAErB,CAhBRE,SAAS;IACTC,UAAU,GAamBH,EAErB,CAfRG,UAAU;IACVC,UAAU,GAYmBJ,EAErB,CAdRI,UAAU;IAAAC,WAAA,GAYmBL,EAErB,CAbRM,QAAQ;IAARA,QAAQ,GAAAD,WAAA,cAAG,KAAK,GAAAA,WAAA;IAAAE,cAAA,GAWaP,EAErB,CAZRQ,WAAW;IAAXA,WAAW,GAAAD,cAAA,cAAG,KAAK,GAAAA,cAAA;IAAAE,gBAAA,GAUUT,EAErB,CAXRU,aAAa;IAAbA,aAAa,GAAAD,gBAAA,cAAG,KAAK,GAAAA,gBAAA;IAAAE,YAAA,GASQX,EAErB,CAVRY,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,KAAK,GAAAA,YAAA;IAAAE,cAAA,GAQYb,EAErB,CATRc,WAAW;IAAXA,WAAW,GAAAD,cAAA,cAAG,KAAK,GAAAA,cAAA;IACnBE,QAAQ,GAMqBf,EAErB,CARRe,QAAQ;IACRC,MAAM,GAKuBhB,EAErB,CAPRgB,MAAM;IAAAC,WAAA,GAKuBjB,EAErB,CANRkB,QAAQ;IAARA,QAAQ,GAAAD,WAAA,cAAG,IAAI,GAAAA,WAAA;IAAAE,cAAA,GAIcnB,EAErB,CALRoB,WAAW;IAAXA,WAAW,GAAAD,cAAA,cAAG,KAAK,GAAAA,cAAA;IACnBE,UAAU,GAEmBrB,EAErB,CAJRqB,UAAU;IACVC,YAAY,GACiBtB,EAErB,CAHRsB,YAAY;IACEC,eAAe,GAAAvB,EAErB,CAFR,YAAY;IACTwB,KAAK,GAAAC,MAAA,CAAAzB,EAAA,EAjBwC,0NAkBjD,CADS;EAER,IAAM0B,SAAS,GAAGhC,YAAY,CAAC,UAAU,EAAEsB,MAAM,EAAEE,QAAQ,CAAC;EAC5D,IAAAS,eAAA,GAAkDlC,KAAK,CAACmC,QAAQ,CAAqB,EAAE,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAjFI,iBAAiB,GAAAF,gBAAA;IAAEG,oBAAoB,GAAAH,gBAAA;EAE9C,IAAII,SAAS,GAAG,IAAI;EACpB,IAAIZ,UAAU,EAAE;IACdY,SAAS,GAAG,SAAAA,UAACC,CAAsB,EAAI;MACrC,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAID,CAAC,CAACC,GAAG,KAAK,GAAG,EAAE;QACtCd,UAAU,CAACa,CAAC,CAAC;QACbA,CAAC,CAACE,cAAc,EAAE;;IAEtB,CAAC;;EAGH,IAAMC,WAAW,GAAG/B,QAAQ,IAAKH,UAAU,KAAKmC,SAAS,IAAI,CAACnC,UAAW;EAEzE,IAAAoC,iBAAA,GAAkC9C,KAAK,CAAC+C,UAAU,CAAC1C,sBAAsB,CAAC;IAAlE2C,qBAAqB,GAAAF,iBAAA,CAArBE,qBAAqB;EAE7BhD,KAAK,CAACiD,SAAS,CAAC,YAAK;IACnB,IAAIpB,YAAY,IAAI,CAACe,WAAW,EAAE;MAChCL,oBAAoB,IAAAW,MAAA,CAAIjC,aAAa,GAAG,cAAc,GAAG,EAAE,CAAE,CAAC;MAC9D+B,qBAAqB,EAAE;KACxB,MAAM;MACLT,oBAAoB,CAACM,SAAS,CAAC;;EAEnC,CAAC,EAAE,CAAC5B,aAAa,EAAEY,YAAY,EAAEmB,qBAAqB,EAAEJ,WAAW,CAAC,CAAC;EAErE,IAAMO,SAAS,GAAGrB,eAAe,IAAIQ,iBAAiB;EAEtD,OACEtC,KAAA,CAAAoD,aAAA,CAAApD,KAAA,CAAAqD,QAAA,QACGxB,YAAY,IAAI7B,KAAA,CAAAoD,aAAA;IAAQ3C,SAAS,EAAC;EAAkB,GAAE0C,SAAS,CAAU,EAC1EnD,KAAA,CAAAoD,aAAA,OAAAE,MAAA,CAAAC,MAAA;IACE9C,SAAS,EAAEL,GAAG,CACZK,SAAS,EACTC,UAAU,KAAKmC,SAAS,IAAI3C,MAAM,CAACsD,kBAAkB,EACrD9C,UAAU,IAAIR,MAAM,CAACuD,SAAS,CAACC,QAAQ,EACvC/C,UAAU,IAAIR,YAAY,CAACsD,SAAS,CAACE,cAAc,EACnD5C,WAAW,IAAIb,MAAM,CAACuD,SAAS,CAACG,SAAS,EACzC3C,aAAa,IAAIf,MAAM,CAACuD,SAAS,CAACI,QAAQ,EAC1C1C,SAAS,IAAIjB,MAAM,CAACuD,SAAS,CAACK,OAAO,EACrCzC,WAAW,IAAInB,MAAM,CAACuD,SAAS,CAACM,SAAS,EACzCpC,WAAW,IAAIzB,MAAM,CAACuD,SAAS,CAACO,oBAAoB,CACrD;IACDC,MAAM,EAAErB;EAAW,GACd7B,WAAW,IAAI;IAAEmD,QAAQ,EAAE;EAAC,CAAE,EAAC;IAAA,cACxBf,SAAS;IACrBgB,GAAG,EAAE7C;EAAQ,GACRM,UAAU,IAAI;IAAEwC,OAAO,EAAExC,UAAU;IAAEY,SAAS,EAATA;EAAS,CAAE,EACjDP,SAAS,EACTF,KAAK,GAERvB,QAAQ,CACN,CACJ;AAEP,CAAC;AAED,OAAO,IAAM6D,EAAE,GAAGrE,KAAK,CAACsE,UAAU,CAAC,UAACvC,KAAc,EAAEoC,GAAmC;EAAA,OACrFnE,KAAA,CAAAoD,aAAA,CAAC9C,MAAM,EAAAgD,MAAA,CAAAC,MAAA,KAAKxB,KAAK;IAAET,QAAQ,EAAE6C;EAAG,GAAI;AAAA,CACrC,CAAC;AACFE,EAAE,CAACE,WAAW,GAAG,IAAI"},"metadata":{},"sourceType":"module"}