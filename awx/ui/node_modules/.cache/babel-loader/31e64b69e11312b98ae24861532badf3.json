{"ast":null,"code":"import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _toPropertyKey from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js\";import _defineProperty from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";/* eslint-disable react/destructuring-assignment */import{useState,useEffect,useReducer}from'react';var initialState={// array of root level nodes (no parent_uuid)\ntree:[],// all events indexed by counter value\nevents:{},// counter value indexed by uuid\nuuidMap:{},// events with parent events that aren't yet loaded.\n// arrays indexed by parent uuid\neventsWithoutParents:{},// object in the form { counter: {rowNumber: n, numChildren: m}} for parent nodes\nchildrenSummary:{},// parent_uuid's for \"meta\" events that need to be injected into the tree to\n// maintain tree integrity\nmetaEventParentUuid:{},isAllCollapsed:false};export var ADD_EVENTS='ADD_EVENTS';export var TOGGLE_NODE_COLLAPSED='TOGGLE_NODE_COLLAPSED';export var CLEAR_EVENTS='CLEAR_EVENTS';export var REBUILD_TREE='REBUILD_TREE';export var TOGGLE_COLLAPSE_ALL='TOGGLE_COLLAPSE_ALL';export var SET_CHILDREN_SUMMARY='SET_CHILDREN_SUMMARY';export default function useJobEvents(callbacks,jobId,isFlatMode){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),actionQueue=_useState2[0],setActionQueue=_useState2[1];var enqueueAction=function enqueueAction(action){setActionQueue(function(queue){return queue.concat(action);});};var reducer=jobEventsReducer(callbacks,isFlatMode,enqueueAction);var _useReducer=useReducer(reducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];useEffect(function(){setActionQueue(function(queue){var action=queue[0];if(!action){return queue;}try{dispatch(action);}catch(e){console.error(e);// eslint-disable-line no-console\n}return queue.slice(1);});},[actionQueue]);useEffect(function(){if(isFlatMode){callbacks.setJobTreeReady();return;}callbacks.fetchChildrenSummary().then(function(result){var _result$data=result.data,event_processing_finished=_result$data.event_processing_finished,is_tree=_result$data.is_tree;if(event_processing_finished===false||is_tree===false){callbacks.setForceFlatMode(true);callbacks.setJobTreeReady();return;}enqueueAction({type:SET_CHILDREN_SUMMARY,childrenSummary:result.data.children_summary,metaEventParentUuid:result.data.meta_event_nested_uuid});}).catch(function(){callbacks.setForceFlatMode(true);callbacks.setJobTreeReady();});},[jobId,isFlatMode]);// eslint-disable-line react-hooks/exhaustive-deps\nreturn{addEvents:function addEvents(events){return dispatch({type:ADD_EVENTS,events:events});},getNodeByUuid:function getNodeByUuid(uuid){return _getNodeByUuid(state,uuid);},toggleNodeIsCollapsed:function toggleNodeIsCollapsed(uuid,isCollapsed){return dispatch({type:TOGGLE_NODE_COLLAPSED,uuid:uuid,isCollapsed:isCollapsed});},toggleCollapseAll:function toggleCollapseAll(isCollapsed){return dispatch({type:TOGGLE_COLLAPSE_ALL,isCollapsed:isCollapsed});},getEventForRow:function getEventForRow(rowIndex){return _getEventForRow(state,rowIndex);},getNodeForRow:function getNodeForRow(rowIndex){return _getNodeForRow2(state,rowIndex);},getTotalNumChildren:function getTotalNumChildren(uuid){var node=_getNodeByUuid(state,uuid);return _getTotalNumChildren(node,state.childrenSummary);},getNumCollapsedEvents:function getNumCollapsedEvents(){return state.tree.reduce(function(sum,node){return sum+getNumCollapsedChildren(node,state.childrenSummary);},0);},getCounterForRow:function getCounterForRow(rowIndex){return _getCounterForRow(state,rowIndex);},getEvent:function getEvent(eventIndex){return _getEvent(state,eventIndex);},clearLoadedEvents:function clearLoadedEvents(){return dispatch({type:CLEAR_EVENTS});},rebuildEventsTree:function rebuildEventsTree(){return dispatch({type:REBUILD_TREE});},isAllCollapsed:state.isAllCollapsed};}export function jobEventsReducer(callbacks,isFlatMode,enqueueAction){return function(state,action){switch(action.type){case ADD_EVENTS:return addEvents(state,action.events);case TOGGLE_COLLAPSE_ALL:return toggleCollapseAll(state,action.isCollapsed);case TOGGLE_NODE_COLLAPSED:return toggleNodeIsCollapsed(state,action.uuid);case CLEAR_EVENTS:return initialState;case REBUILD_TREE:return rebuildTree(state);case SET_CHILDREN_SUMMARY:callbacks.setJobTreeReady();return _objectSpread(_objectSpread({},state),{},{childrenSummary:action.childrenSummary||{},metaEventParentUuid:action.metaEventParentUuid||{}});default:throw new Error(\"Unrecognized action: \".concat(action.type));}};function addEvents(origState,newEvents){var state=_objectSpread(_objectSpread({},origState),{},{events:_objectSpread({},origState.events),tree:_toConsumableArray(origState.tree)});var parentsToFetch={};newEvents.forEach(function(event){if(typeof event.rowNumber!=='number'||Number.isNaN(event.rowNumber)){throw new Error('Cannot add event; missing rowNumber');}var eventIndex=event.counter;if(!event.parent_uuid&&state.metaEventParentUuid[eventIndex]){event.parent_uuid=state.metaEventParentUuid[eventIndex];}if(state.events[eventIndex]){state.events[eventIndex]=event;state=_gatherEventsForNewParent(state,event.uuid);return;}if(!event.parent_uuid||isFlatMode){state=_addRootLevelEvent(state,event);return;}var isParentFound;var _addNestedLevelEvent2=_addNestedLevelEvent(state,event);var _addNestedLevelEvent3=_slicedToArray(_addNestedLevelEvent2,2);state=_addNestedLevelEvent3[0];isParentFound=_addNestedLevelEvent3[1];if(!isParentFound){parentsToFetch[event.parent_uuid]=true;state=_addEventWithoutParent(state,event);}});Object.keys(parentsToFetch).forEach(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(uuid){var parent;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return callbacks.fetchEventByUuid(uuid);case 2:parent=_context.sent;if(!(!state.childrenSummary||!state.childrenSummary[parent.counter])){_context.next=6;break;}// eslint-disable-next-line no-console\nconsole.error('No row number found for ',parent.counter);return _context.abrupt(\"return\");case 6:parent.rowNumber=state.childrenSummary[parent.counter].rowNumber;enqueueAction({type:ADD_EVENTS,events:[parent]});case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());return state;}function _addRootLevelEvent(state,event){var eventIndex=event.counter;var newNode={eventIndex:eventIndex,isCollapsed:state.isAllCollapsed,children:[]};var index=state.tree.findIndex(function(node){return node.eventIndex>eventIndex;});var updatedTree=_toConsumableArray(state.tree);if(index===-1){updatedTree.push(newNode);}else{updatedTree.splice(index,0,newNode);}return _gatherEventsForNewParent(_objectSpread(_objectSpread({},state),{},{events:_objectSpread(_objectSpread({},state.events),{},_defineProperty({},eventIndex,event)),tree:updatedTree,uuidMap:_objectSpread(_objectSpread({},state.uuidMap),{},_defineProperty({},event.uuid,eventIndex))}),event.uuid);}function _addNestedLevelEvent(state,event){var eventIndex=event.counter;var parent=_getNodeByUuid(state,event.parent_uuid);if(!parent){return[state,false];}var newNode={eventIndex:eventIndex,isCollapsed:state.isAllCollapsed,children:[]};var index=parent.children.findIndex(function(node){return node.eventIndex>=eventIndex;});if(index===-1){state=updateNodeByUuid(state,event.parent_uuid,function(node){node.children.push(newNode);return node;});}else{state=updateNodeByUuid(state,event.parent_uuid,function(node){node.children.splice(index,0,newNode);return node;});}state=_gatherEventsForNewParent(_objectSpread(_objectSpread({},state),{},{events:_objectSpread(_objectSpread({},state.events),{},_defineProperty({},eventIndex,event)),uuidMap:_objectSpread(_objectSpread({},state.uuidMap),{},_defineProperty({},event.uuid,eventIndex))}),event.uuid);return[state,true];}function _addEventWithoutParent(state,event){var parentUuid=event.parent_uuid;var eventsList;if(!state.eventsWithoutParents[parentUuid]){eventsList=[event];}else{eventsList=state.eventsWithoutParents[parentUuid].concat(event);}return _objectSpread(_objectSpread({},state),{},{eventsWithoutParents:_objectSpread(_objectSpread({},state.eventsWithoutParents),{},_defineProperty({},parentUuid,eventsList))});}function _gatherEventsForNewParent(state,parentUuid){if(!state.eventsWithoutParents[parentUuid]){return state;}var _state$eventsWithoutP=state.eventsWithoutParents,newEvents=_state$eventsWithoutP[parentUuid],remaining=_objectWithoutProperties(_state$eventsWithoutP,[parentUuid].map(_toPropertyKey));return addEvents(_objectSpread(_objectSpread({},state),{},{eventsWithoutParents:remaining}),newEvents);}function rebuildTree(state){var events=Object.values(state.events);return addEvents(initialState,events);}}function _getEventForRow(state,rowIndex){var _getNodeForRow3=_getNodeForRow(state,rowIndex,state.tree),node=_getNodeForRow3.node;if(node){return{node:node,event:state.events[node.eventIndex]};}return null;}function _getNodeForRow2(state,rowToFind,childrenSummary){var _getNodeForRow4=_getNodeForRow(state,rowToFind,state.tree,childrenSummary),node=_getNodeForRow4.node;return node;}function _getCounterForRow(state,rowToFind){var _getNodeForRow5=_getNodeForRow(state,rowToFind,state.tree),node=_getNodeForRow5.node,expectedCounter=_getNodeForRow5.expectedCounter;if(node){var event=state.events[node.eventIndex];return event.counter;}return expectedCounter;}function _getNodeForRow(state,rowToFind,nodes){for(var i=0;i<nodes.length;i++){var node=nodes[i];var event=state.events[node.eventIndex];if(event.rowNumber===rowToFind){return{node:node};}var totalNodeDescendants=_getTotalNumChildren(node,state.childrenSummary);var numCollapsedChildren=getNumCollapsedChildren(node,state.childrenSummary);var nodeChildren=totalNodeDescendants-numCollapsedChildren;if(event.rowNumber+nodeChildren>=rowToFind){// requested row is in children/descendants\nreturn _getNodeInChildren(state,node,rowToFind);}rowToFind+=numCollapsedChildren;var nextNode=nodes[i+1];if(!nextNode){continue;}var nextEvent=state.events[nextNode.eventIndex];var lastChild=_getLastDescendantNode([node]);if(nextEvent.rowNumber>rowToFind){// requested row is not loaded; return best guess at counter number\nvar lastChildEvent=state.events[lastChild.eventIndex];var _rowDiff=rowToFind-lastChildEvent.rowNumber;return{node:null,expectedCounter:lastChild.eventIndex+_rowDiff};}}var lastDescendant=_getLastDescendantNode(nodes);if(!lastDescendant){return{node:null,expectedCounter:rowToFind};}var lastDescendantEvent=state.events[lastDescendant.eventIndex];var rowDiff=rowToFind-lastDescendantEvent.rowNumber;return{node:null,expectedCounter:lastDescendant.eventIndex+rowDiff};}function _getNodeInChildren(state,node,rowToFind){var _node$children$;var event=state.events[node.eventIndex];var firstChild=state.events[(_node$children$=node.children[0])===null||_node$children$===void 0?void 0:_node$children$.eventIndex];if(!firstChild||rowToFind<firstChild.rowNumber){var rowDiff=rowToFind-event.rowNumber;return{node:null,expectedCounter:event.counter+rowDiff};}return _getNodeForRow(state,rowToFind,node.children);}function _getLastDescendantNode(nodes){var _lastDescendant;var lastDescendant=nodes[nodes.length-1];var children=((_lastDescendant=lastDescendant)===null||_lastDescendant===void 0?void 0:_lastDescendant.children)||[];while(children.length){lastDescendant=children[children.length-1];children=lastDescendant.children;}return lastDescendant;}function _getTotalNumChildren(node,childrenSummary){if(childrenSummary[node.eventIndex]){return childrenSummary[node.eventIndex].numChildren;}var estimatedNumChildren=node.children.length;node.children.forEach(function(child){estimatedNumChildren+=_getTotalNumChildren(child,childrenSummary);});return estimatedNumChildren;}function getNumCollapsedChildren(node,childrenSummary){if(node.isCollapsed){return _getTotalNumChildren(node,childrenSummary);}var sum=0;node.children.forEach(function(child){sum+=getNumCollapsedChildren(child,childrenSummary);});return sum;}function toggleNodeIsCollapsed(state,eventUuid){return _objectSpread(_objectSpread({},updateNodeByUuid(state,eventUuid,function(node){return _objectSpread(_objectSpread({},node),{},{isCollapsed:!node.isCollapsed});})),{},{isAllCollapsed:false});}function toggleCollapseAll(state,isAllCollapsed){var newTree=state.tree.map(function(node){return _toggleNestedNodes(state.events,node,isAllCollapsed);});return _objectSpread(_objectSpread({},state),{},{tree:newTree,isAllCollapsed:isAllCollapsed});}function _toggleNestedNodes(events,node,isCollapsed){var _node$children;var _events$node$eventInd=events[node.eventIndex],parent_uuid=_events$node$eventInd.parent_uuid,playbook_uuid=_events$node$eventInd.event_data.playbook_uuid,uuid=_events$node$eventInd.uuid;var eventShouldNotCollapse=uuid===playbook_uuid||!(parent_uuid!==null&&parent_uuid!==void 0&&parent_uuid.length);var children=(_node$children=node.children)===null||_node$children===void 0?void 0:_node$children.map(function(nestedNode){return _toggleNestedNodes(events,nestedNode,isCollapsed);});return _objectSpread(_objectSpread({},node),{},{isCollapsed:eventShouldNotCollapse?false:isCollapsed,children:children});}function updateNodeByUuid(state,uuid,update){if(!state.uuidMap[uuid]){throw new Error(\"Cannot update node; Event UUID not found \".concat(uuid));}var index=state.uuidMap[uuid];return _objectSpread(_objectSpread({},state),{},{tree:_updateNodeByIndex(index,state.tree,update)});}function _updateNodeByIndex(target,nodeArray,update){var nextIndex=nodeArray.findIndex(function(node){return node.eventIndex>target;});var targetIndex=nextIndex===-1?nodeArray.length-1:nextIndex-1;var updatedNode;if(nodeArray[targetIndex].eventIndex===target){updatedNode=update(_objectSpread(_objectSpread({},nodeArray[targetIndex]),{},{children:_toConsumableArray(nodeArray[targetIndex].children)}));}else{updatedNode=_objectSpread(_objectSpread({},nodeArray[targetIndex]),{},{children:_updateNodeByIndex(target,nodeArray[targetIndex].children,update)});}return[].concat(_toConsumableArray(nodeArray.slice(0,targetIndex)),[updatedNode],_toConsumableArray(nodeArray.slice(targetIndex+1)));}function _getNodeByUuid(state,uuid){if(!state.uuidMap[uuid]){return null;}var index=state.uuidMap[uuid];return _getNodeByIndex(state.tree,index);}function _getNodeByIndex(arr,index){if(!arr.length){return null;}var i=arr.findIndex(function(node){return node.eventIndex>=index;});if(i===-1){return _getNodeByIndex(arr[arr.length-1].children,index);}if(arr[i].eventIndex===index){return arr[i];}if(!arr[i-1]){return null;}return _getNodeByIndex(arr[i-1].children,index);}function _getEvent(state,eventIndex){var event=state.events[eventIndex];if(event){return event;}return null;}","map":{"version":3,"names":["useState","useEffect","useReducer","initialState","tree","events","uuidMap","eventsWithoutParents","childrenSummary","metaEventParentUuid","isAllCollapsed","ADD_EVENTS","TOGGLE_NODE_COLLAPSED","CLEAR_EVENTS","REBUILD_TREE","TOGGLE_COLLAPSE_ALL","SET_CHILDREN_SUMMARY","useJobEvents","callbacks","jobId","isFlatMode","_useState","_useState2","_slicedToArray","actionQueue","setActionQueue","enqueueAction","action","queue","concat","reducer","jobEventsReducer","_useReducer","_useReducer2","state","dispatch","e","console","error","slice","setJobTreeReady","fetchChildrenSummary","then","result","_result$data","data","event_processing_finished","is_tree","setForceFlatMode","type","children_summary","meta_event_nested_uuid","catch","addEvents","getNodeByUuid","uuid","toggleNodeIsCollapsed","isCollapsed","toggleCollapseAll","getEventForRow","rowIndex","getNodeForRow","getTotalNumChildren","node","getNumCollapsedEvents","reduce","sum","getNumCollapsedChildren","getCounterForRow","getEvent","eventIndex","clearLoadedEvents","rebuildEventsTree","rebuildTree","_objectSpread","Error","origState","newEvents","_toConsumableArray","parentsToFetch","forEach","event","rowNumber","Number","isNaN","counter","parent_uuid","_gatherEventsForNewParent","_addRootLevelEvent","isParentFound","_addNestedLevelEvent2","_addNestedLevelEvent","_addNestedLevelEvent3","_addEventWithoutParent","Object","keys","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","parent","wrap","_callee$","_context","prev","next","fetchEventByUuid","sent","abrupt","stop","_x","apply","arguments","newNode","children","index","findIndex","updatedTree","push","splice","_defineProperty","updateNodeByUuid","parentUuid","eventsList","_state$eventsWithoutP","remaining","_objectWithoutProperties","map","_toPropertyKey","values","_getNodeForRow3","_getNodeForRow","rowToFind","_getNodeForRow4","_getNodeForRow5","expectedCounter","nodes","i","length","totalNodeDescendants","numCollapsedChildren","nodeChildren","_getNodeInChildren","nextNode","nextEvent","lastChild","_getLastDescendantNode","lastChildEvent","rowDiff","lastDescendant","lastDescendantEvent","_node$children$","firstChild","_lastDescendant","numChildren","estimatedNumChildren","child","eventUuid","newTree","_toggleNestedNodes","_node$children","_events$node$eventInd","playbook_uuid","event_data","eventShouldNotCollapse","nestedNode","update","_updateNodeByIndex","target","nodeArray","nextIndex","targetIndex","updatedNode","_getNodeByIndex","arr"],"sources":["/awx_devel/awx/ui/src/screens/Job/JobOutput/useJobEvents.js"],"sourcesContent":["/* eslint-disable react/destructuring-assignment */\nimport { useState, useEffect, useReducer } from 'react';\n\nconst initialState = {\n  // array of root level nodes (no parent_uuid)\n  tree: [],\n  // all events indexed by counter value\n  events: {},\n  // counter value indexed by uuid\n  uuidMap: {},\n  // events with parent events that aren't yet loaded.\n  // arrays indexed by parent uuid\n  eventsWithoutParents: {},\n  // object in the form { counter: {rowNumber: n, numChildren: m}} for parent nodes\n  childrenSummary: {},\n  // parent_uuid's for \"meta\" events that need to be injected into the tree to\n  // maintain tree integrity\n  metaEventParentUuid: {},\n  isAllCollapsed: false,\n};\nexport const ADD_EVENTS = 'ADD_EVENTS';\nexport const TOGGLE_NODE_COLLAPSED = 'TOGGLE_NODE_COLLAPSED';\nexport const CLEAR_EVENTS = 'CLEAR_EVENTS';\nexport const REBUILD_TREE = 'REBUILD_TREE';\nexport const TOGGLE_COLLAPSE_ALL = 'TOGGLE_COLLAPSE_ALL';\nexport const SET_CHILDREN_SUMMARY = 'SET_CHILDREN_SUMMARY';\n\nexport default function useJobEvents(callbacks, jobId, isFlatMode) {\n  const [actionQueue, setActionQueue] = useState([]);\n  const enqueueAction = (action) => {\n    setActionQueue((queue) => queue.concat(action));\n  };\n  const reducer = jobEventsReducer(callbacks, isFlatMode, enqueueAction);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    setActionQueue((queue) => {\n      const action = queue[0];\n      if (!action) {\n        return queue;\n      }\n      try {\n        dispatch(action);\n      } catch (e) {\n        console.error(e); // eslint-disable-line no-console\n      }\n      return queue.slice(1);\n    });\n  }, [actionQueue]);\n\n  useEffect(() => {\n    if (isFlatMode) {\n      callbacks.setJobTreeReady();\n      return;\n    }\n\n    callbacks\n      .fetchChildrenSummary()\n      .then((result) => {\n        const { event_processing_finished, is_tree } = result.data;\n        if (event_processing_finished === false || is_tree === false) {\n          callbacks.setForceFlatMode(true);\n          callbacks.setJobTreeReady();\n          return;\n        }\n        enqueueAction({\n          type: SET_CHILDREN_SUMMARY,\n          childrenSummary: result.data.children_summary,\n          metaEventParentUuid: result.data.meta_event_nested_uuid,\n        });\n      })\n      .catch(() => {\n        callbacks.setForceFlatMode(true);\n        callbacks.setJobTreeReady();\n      });\n  }, [jobId, isFlatMode]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return {\n    addEvents: (events) => dispatch({ type: ADD_EVENTS, events }),\n    getNodeByUuid: (uuid) => getNodeByUuid(state, uuid),\n    toggleNodeIsCollapsed: (uuid, isCollapsed) =>\n      dispatch({ type: TOGGLE_NODE_COLLAPSED, uuid, isCollapsed }),\n    toggleCollapseAll: (isCollapsed) =>\n      dispatch({ type: TOGGLE_COLLAPSE_ALL, isCollapsed }),\n    getEventForRow: (rowIndex) => getEventForRow(state, rowIndex),\n    getNodeForRow: (rowIndex) => getNodeForRow(state, rowIndex),\n    getTotalNumChildren: (uuid) => {\n      const node = getNodeByUuid(state, uuid);\n      return getTotalNumChildren(node, state.childrenSummary);\n    },\n    getNumCollapsedEvents: () =>\n      state.tree.reduce(\n        (sum, node) =>\n          sum + getNumCollapsedChildren(node, state.childrenSummary),\n        0\n      ),\n    getCounterForRow: (rowIndex) => getCounterForRow(state, rowIndex),\n    getEvent: (eventIndex) => getEvent(state, eventIndex),\n    clearLoadedEvents: () => dispatch({ type: CLEAR_EVENTS }),\n    rebuildEventsTree: () => dispatch({ type: REBUILD_TREE }),\n    isAllCollapsed: state.isAllCollapsed,\n  };\n}\n\nexport function jobEventsReducer(callbacks, isFlatMode, enqueueAction) {\n  return (state, action) => {\n    switch (action.type) {\n      case ADD_EVENTS:\n        return addEvents(state, action.events);\n      case TOGGLE_COLLAPSE_ALL:\n        return toggleCollapseAll(state, action.isCollapsed);\n      case TOGGLE_NODE_COLLAPSED:\n        return toggleNodeIsCollapsed(state, action.uuid);\n      case CLEAR_EVENTS:\n        return initialState;\n      case REBUILD_TREE:\n        return rebuildTree(state);\n      case SET_CHILDREN_SUMMARY:\n        callbacks.setJobTreeReady();\n        return {\n          ...state,\n          childrenSummary: action.childrenSummary || {},\n          metaEventParentUuid: action.metaEventParentUuid || {},\n        };\n      default:\n        throw new Error(`Unrecognized action: ${action.type}`);\n    }\n  };\n\n  function addEvents(origState, newEvents) {\n    let state = {\n      ...origState,\n      events: { ...origState.events },\n      tree: [...origState.tree],\n    };\n    const parentsToFetch = {};\n    newEvents.forEach((event) => {\n      if (\n        typeof event.rowNumber !== 'number' ||\n        Number.isNaN(event.rowNumber)\n      ) {\n        throw new Error('Cannot add event; missing rowNumber');\n      }\n      const eventIndex = event.counter;\n      if (!event.parent_uuid && state.metaEventParentUuid[eventIndex]) {\n        event.parent_uuid = state.metaEventParentUuid[eventIndex];\n      }\n      if (state.events[eventIndex]) {\n        state.events[eventIndex] = event;\n        state = _gatherEventsForNewParent(state, event.uuid);\n        return;\n      }\n      if (!event.parent_uuid || isFlatMode) {\n        state = _addRootLevelEvent(state, event);\n        return;\n      }\n\n      let isParentFound;\n      [state, isParentFound] = _addNestedLevelEvent(state, event);\n      if (!isParentFound) {\n        parentsToFetch[event.parent_uuid] = true;\n        state = _addEventWithoutParent(state, event);\n      }\n    });\n\n    Object.keys(parentsToFetch).forEach(async (uuid) => {\n      const parent = await callbacks.fetchEventByUuid(uuid);\n\n      if (!state.childrenSummary || !state.childrenSummary[parent.counter]) {\n        // eslint-disable-next-line no-console\n        console.error('No row number found for ', parent.counter);\n        return;\n      }\n      parent.rowNumber = state.childrenSummary[parent.counter].rowNumber;\n\n      enqueueAction({\n        type: ADD_EVENTS,\n        events: [parent],\n      });\n    });\n\n    return state;\n  }\n\n  function _addRootLevelEvent(state, event) {\n    const eventIndex = event.counter;\n    const newNode = {\n      eventIndex,\n      isCollapsed: state.isAllCollapsed,\n      children: [],\n    };\n    const index = state.tree.findIndex((node) => node.eventIndex > eventIndex);\n    const updatedTree = [...state.tree];\n    if (index === -1) {\n      updatedTree.push(newNode);\n    } else {\n      updatedTree.splice(index, 0, newNode);\n    }\n    return _gatherEventsForNewParent(\n      {\n        ...state,\n        events: { ...state.events, [eventIndex]: event },\n        tree: updatedTree,\n        uuidMap: {\n          ...state.uuidMap,\n          [event.uuid]: eventIndex,\n        },\n      },\n      event.uuid\n    );\n  }\n\n  function _addNestedLevelEvent(state, event) {\n    const eventIndex = event.counter;\n    const parent = getNodeByUuid(state, event.parent_uuid);\n    if (!parent) {\n      return [state, false];\n    }\n    const newNode = {\n      eventIndex,\n      isCollapsed: state.isAllCollapsed,\n      children: [],\n    };\n    const index = parent.children.findIndex(\n      (node) => node.eventIndex >= eventIndex\n    );\n    if (index === -1) {\n      state = updateNodeByUuid(state, event.parent_uuid, (node) => {\n        node.children.push(newNode);\n        return node;\n      });\n    } else {\n      state = updateNodeByUuid(state, event.parent_uuid, (node) => {\n        node.children.splice(index, 0, newNode);\n        return node;\n      });\n    }\n    state = _gatherEventsForNewParent(\n      {\n        ...state,\n        events: {\n          ...state.events,\n          [eventIndex]: event,\n        },\n        uuidMap: {\n          ...state.uuidMap,\n          [event.uuid]: eventIndex,\n        },\n      },\n      event.uuid\n    );\n\n    return [state, true];\n  }\n\n  function _addEventWithoutParent(state, event) {\n    const parentUuid = event.parent_uuid;\n    let eventsList;\n    if (!state.eventsWithoutParents[parentUuid]) {\n      eventsList = [event];\n    } else {\n      eventsList = state.eventsWithoutParents[parentUuid].concat(event);\n    }\n\n    return {\n      ...state,\n      eventsWithoutParents: {\n        ...state.eventsWithoutParents,\n        [parentUuid]: eventsList,\n      },\n    };\n  }\n\n  function _gatherEventsForNewParent(state, parentUuid) {\n    if (!state.eventsWithoutParents[parentUuid]) {\n      return state;\n    }\n\n    const { [parentUuid]: newEvents, ...remaining } =\n      state.eventsWithoutParents;\n    return addEvents(\n      {\n        ...state,\n        eventsWithoutParents: remaining,\n      },\n      newEvents\n    );\n  }\n\n  function rebuildTree(state) {\n    const events = Object.values(state.events);\n    return addEvents(initialState, events);\n  }\n}\n\nfunction getEventForRow(state, rowIndex) {\n  const { node } = _getNodeForRow(state, rowIndex, state.tree);\n  if (node) {\n    return {\n      node,\n      event: state.events[node.eventIndex],\n    };\n  }\n  return null;\n}\n\nfunction getNodeForRow(state, rowToFind, childrenSummary) {\n  const { node } = _getNodeForRow(\n    state,\n    rowToFind,\n    state.tree,\n    childrenSummary\n  );\n  return node;\n}\n\nfunction getCounterForRow(state, rowToFind) {\n  const { node, expectedCounter } = _getNodeForRow(\n    state,\n    rowToFind,\n    state.tree\n  );\n\n  if (node) {\n    const event = state.events[node.eventIndex];\n    return event.counter;\n  }\n  return expectedCounter;\n}\n\nfunction _getNodeForRow(state, rowToFind, nodes) {\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    const event = state.events[node.eventIndex];\n    if (event.rowNumber === rowToFind) {\n      return { node };\n    }\n    const totalNodeDescendants = getTotalNumChildren(\n      node,\n      state.childrenSummary\n    );\n    const numCollapsedChildren = getNumCollapsedChildren(\n      node,\n      state.childrenSummary\n    );\n    const nodeChildren = totalNodeDescendants - numCollapsedChildren;\n    if (event.rowNumber + nodeChildren >= rowToFind) {\n      // requested row is in children/descendants\n      return _getNodeInChildren(state, node, rowToFind);\n    }\n    rowToFind += numCollapsedChildren;\n\n    const nextNode = nodes[i + 1];\n    if (!nextNode) {\n      continue;\n    }\n    const nextEvent = state.events[nextNode.eventIndex];\n    const lastChild = _getLastDescendantNode([node]);\n    if (nextEvent.rowNumber > rowToFind) {\n      // requested row is not loaded; return best guess at counter number\n      const lastChildEvent = state.events[lastChild.eventIndex];\n      const rowDiff = rowToFind - lastChildEvent.rowNumber;\n      return {\n        node: null,\n        expectedCounter: lastChild.eventIndex + rowDiff,\n      };\n    }\n  }\n\n  const lastDescendant = _getLastDescendantNode(nodes);\n  if (!lastDescendant) {\n    return { node: null, expectedCounter: rowToFind };\n  }\n\n  const lastDescendantEvent = state.events[lastDescendant.eventIndex];\n  const rowDiff = rowToFind - lastDescendantEvent.rowNumber;\n  return {\n    node: null,\n    expectedCounter: lastDescendant.eventIndex + rowDiff,\n  };\n}\n\nfunction _getNodeInChildren(state, node, rowToFind) {\n  const event = state.events[node.eventIndex];\n  const firstChild = state.events[node.children[0]?.eventIndex];\n  if (!firstChild || rowToFind < firstChild.rowNumber) {\n    const rowDiff = rowToFind - event.rowNumber;\n    return {\n      node: null,\n      expectedCounter: event.counter + rowDiff,\n    };\n  }\n  return _getNodeForRow(state, rowToFind, node.children);\n}\n\nfunction _getLastDescendantNode(nodes) {\n  let lastDescendant = nodes[nodes.length - 1];\n  let children = lastDescendant?.children || [];\n  while (children.length) {\n    lastDescendant = children[children.length - 1];\n    children = lastDescendant.children;\n  }\n  return lastDescendant;\n}\n\nfunction getTotalNumChildren(node, childrenSummary) {\n  if (childrenSummary[node.eventIndex]) {\n    return childrenSummary[node.eventIndex].numChildren;\n  }\n\n  let estimatedNumChildren = node.children.length;\n  node.children.forEach((child) => {\n    estimatedNumChildren += getTotalNumChildren(child, childrenSummary);\n  });\n  return estimatedNumChildren;\n}\n\nfunction getNumCollapsedChildren(node, childrenSummary) {\n  if (node.isCollapsed) {\n    return getTotalNumChildren(node, childrenSummary);\n  }\n  let sum = 0;\n  node.children.forEach((child) => {\n    sum += getNumCollapsedChildren(child, childrenSummary);\n  });\n  return sum;\n}\n\nfunction toggleNodeIsCollapsed(state, eventUuid) {\n  return {\n    ...updateNodeByUuid(state, eventUuid, (node) => ({\n      ...node,\n      isCollapsed: !node.isCollapsed,\n    })),\n    isAllCollapsed: false,\n  };\n}\n\nfunction toggleCollapseAll(state, isAllCollapsed) {\n  const newTree = state.tree.map((node) =>\n    _toggleNestedNodes(state.events, node, isAllCollapsed)\n  );\n  return { ...state, tree: newTree, isAllCollapsed };\n}\n\nfunction _toggleNestedNodes(events, node, isCollapsed) {\n  const {\n    parent_uuid,\n    event_data: { playbook_uuid },\n    uuid,\n  } = events[node.eventIndex];\n\n  const eventShouldNotCollapse = uuid === playbook_uuid || !parent_uuid?.length;\n\n  const children = node.children?.map((nestedNode) =>\n    _toggleNestedNodes(events, nestedNode, isCollapsed)\n  );\n\n  return {\n    ...node,\n    isCollapsed: eventShouldNotCollapse ? false : isCollapsed,\n    children,\n  };\n}\n\nfunction updateNodeByUuid(state, uuid, update) {\n  if (!state.uuidMap[uuid]) {\n    throw new Error(`Cannot update node; Event UUID not found ${uuid}`);\n  }\n  const index = state.uuidMap[uuid];\n  return {\n    ...state,\n    tree: _updateNodeByIndex(index, state.tree, update),\n  };\n}\n\nfunction _updateNodeByIndex(target, nodeArray, update) {\n  const nextIndex = nodeArray.findIndex((node) => node.eventIndex > target);\n  const targetIndex = nextIndex === -1 ? nodeArray.length - 1 : nextIndex - 1;\n  let updatedNode;\n  if (nodeArray[targetIndex].eventIndex === target) {\n    updatedNode = update({\n      ...nodeArray[targetIndex],\n      children: [...nodeArray[targetIndex].children],\n    });\n  } else {\n    updatedNode = {\n      ...nodeArray[targetIndex],\n      children: _updateNodeByIndex(\n        target,\n        nodeArray[targetIndex].children,\n        update\n      ),\n    };\n  }\n  return [\n    ...nodeArray.slice(0, targetIndex),\n    updatedNode,\n    ...nodeArray.slice(targetIndex + 1),\n  ];\n}\n\nfunction getNodeByUuid(state, uuid) {\n  if (!state.uuidMap[uuid]) {\n    return null;\n  }\n\n  const index = state.uuidMap[uuid];\n  return _getNodeByIndex(state.tree, index);\n}\n\nfunction _getNodeByIndex(arr, index) {\n  if (!arr.length) {\n    return null;\n  }\n  const i = arr.findIndex((node) => node.eventIndex >= index);\n  if (i === -1) {\n    return _getNodeByIndex(arr[arr.length - 1].children, index);\n  }\n  if (arr[i].eventIndex === index) {\n    return arr[i];\n  }\n  if (!arr[i - 1]) {\n    return null;\n  }\n  return _getNodeByIndex(arr[i - 1].children, index);\n}\n\nfunction getEvent(state, eventIndex) {\n  const event = state.events[eventIndex];\n  if (event) {\n    return event;\n  }\n\n  return null;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}