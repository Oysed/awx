{"ast":null,"code":"import _createForOfIteratorHelper from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _excluded=[\"instanceGroups\",\"inputInventories\",\"organization\"];import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useCallback,useEffect}from'react';import{useHistory}from'react-router-dom';import{ConstructedInventoriesAPI,InventoriesAPI}from'api';import useRequest from'hooks/useRequest';import{CardBody}from'components/Card';import ContentError from'components/ContentError';import ContentLoading from'components/ContentLoading';import ConstructedInventoryForm from'../shared/ConstructedInventoryForm';import{jsx as _jsx}from\"react/jsx-runtime\";function isEqual(array1,array2){return array1.length===array2.length&&array1.every(function(element,index){return element.id===array2[index].id;});}function ConstructedInventoryEdit(_ref){var inventory=_ref.inventory;var history=useHistory();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),submitError=_useState2[0],setSubmitError=_useState2[1];var detailsUrl=\"/inventories/constructed_inventory/\".concat(inventory.id,\"/details\");var constructedInventoryId=inventory.id;var _useRequest=useRequest(useCallback(function(){return ConstructedInventoriesAPI.readConstructedInventoryOptions(constructedInventoryId,'PUT');},[constructedInventoryId]),null),isLoadingOptions=_useRequest.isLoading,optionsError=_useRequest.error,fetchOptions=_useRequest.request,options=_useRequest.result;useEffect(function(){fetchOptions();},[fetchOptions]);var _useRequest2=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$Promise$all,_yield$Promise$all2,instanceGroupsResponse,inputInventoriesResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Promise.all([InventoriesAPI.readInstanceGroups(constructedInventoryId),InventoriesAPI.readInputInventories(constructedInventoryId)]);case 2:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);instanceGroupsResponse=_yield$Promise$all2[0];inputInventoriesResponse=_yield$Promise$all2[1];return _context.abrupt(\"return\",{initialInstanceGroups:instanceGroupsResponse.data.results,initialInputInventories:inputInventoriesResponse.data.results});case 7:case\"end\":return _context.stop();}}},_callee);})),[constructedInventoryId]),{initialInstanceGroups:[],initialInputInventories:[],isLoading:true}),_useRequest2$result=_useRequest2.result,initialInstanceGroups=_useRequest2$result.initialInstanceGroups,initialInputInventories=_useRequest2$result.initialInputInventories,fetchedRelatedData=_useRequest2.request,contentError=_useRequest2.error,isLoading=_useRequest2.isLoading;useEffect(function(){fetchedRelatedData();},[fetchedRelatedData]);var handleSubmit=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values){var instanceGroups,inputInventories,organization,remainingValues,_iterator,_step,inputInventory,_iterator2,_step2,_inputInventory;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:instanceGroups=values.instanceGroups,inputInventories=values.inputInventories,organization=values.organization,remainingValues=_objectWithoutProperties(values,_excluded);remainingValues.organization=organization.id;remainingValues.kind='constructed';_context2.prev=3;_context2.next=6;return Promise.all([ConstructedInventoriesAPI.update(constructedInventoryId,remainingValues),InventoriesAPI.orderInstanceGroups(constructedInventoryId,instanceGroups,initialInstanceGroups)]);case 6:if(isEqual(initialInputInventories,values.inputInventories)){_context2.next=41;break;}_iterator=_createForOfIteratorHelper(initialInputInventories);_context2.prev=8;_iterator.s();case 10:if((_step=_iterator.n()).done){_context2.next=16;break;}inputInventory=_step.value;_context2.next=14;return InventoriesAPI.disassociateInventory(constructedInventoryId,inputInventory.id);case 14:_context2.next=10;break;case 16:_context2.next=21;break;case 18:_context2.prev=18;_context2.t0=_context2[\"catch\"](8);_iterator.e(_context2.t0);case 21:_context2.prev=21;_iterator.f();return _context2.finish(21);case 24:_iterator2=_createForOfIteratorHelper(values.inputInventories);_context2.prev=25;_iterator2.s();case 27:if((_step2=_iterator2.n()).done){_context2.next=33;break;}_inputInventory=_step2.value;_context2.next=31;return InventoriesAPI.associateInventory(constructedInventoryId,_inputInventory.id);case 31:_context2.next=27;break;case 33:_context2.next=38;break;case 35:_context2.prev=35;_context2.t1=_context2[\"catch\"](25);_iterator2.e(_context2.t1);case 38:_context2.prev=38;_iterator2.f();return _context2.finish(38);case 41:/* eslint-enable no-await-in-loop, no-restricted-syntax */history.push(\"/inventories/constructed_inventory/\".concat(constructedInventoryId,\"/details\"));_context2.next=47;break;case 44:_context2.prev=44;_context2.t2=_context2[\"catch\"](3);setSubmitError(_context2.t2);case 47:case\"end\":return _context2.stop();}}},_callee2,null,[[3,44],[8,18,21,24],[25,35,38,41]]);}));return function handleSubmit(_x){return _ref3.apply(this,arguments);};}();var handleCancel=function handleCancel(){return history.push(detailsUrl);};if(contentError||optionsError){return/*#__PURE__*/_jsx(ContentError,{error:contentError||optionsError});}if(isLoading||isLoadingOptions||!options&&!optionsError){return/*#__PURE__*/_jsx(ContentLoading,{});}return/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(ConstructedInventoryForm,{onCancel:handleCancel,onSubmit:handleSubmit,submitError:submitError,constructedInventory:inventory,instanceGroups:initialInstanceGroups,inputInventories:initialInputInventories,options:options})});}export default ConstructedInventoryEdit;","map":{"version":3,"names":["React","useState","useCallback","useEffect","useHistory","ConstructedInventoriesAPI","InventoriesAPI","useRequest","CardBody","ContentError","ContentLoading","ConstructedInventoryForm","jsx","_jsx","isEqual","array1","array2","length","every","element","index","id","ConstructedInventoryEdit","_ref","inventory","history","_useState","_useState2","_slicedToArray","submitError","setSubmitError","detailsUrl","concat","constructedInventoryId","_useRequest","readConstructedInventoryOptions","isLoadingOptions","isLoading","optionsError","error","fetchOptions","request","options","result","_useRequest2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$Promise$all","_yield$Promise$all2","instanceGroupsResponse","inputInventoriesResponse","wrap","_callee$","_context","prev","next","Promise","all","readInstanceGroups","readInputInventories","sent","abrupt","initialInstanceGroups","data","results","initialInputInventories","stop","_useRequest2$result","fetchedRelatedData","contentError","handleSubmit","_ref3","_callee2","values","instanceGroups","inputInventories","organization","remainingValues","_iterator","_step","inputInventory","_iterator2","_step2","_inputInventory","_callee2$","_context2","_objectWithoutProperties","_excluded","kind","update","orderInstanceGroups","_createForOfIteratorHelper","s","n","done","value","disassociateInventory","t0","e","f","finish","associateInventory","t1","push","t2","_x","apply","arguments","handleCancel","children","onCancel","onSubmit","constructedInventory"],"sources":["/awx_devel/awx/ui/src/screens/Inventory/ConstructedInventoryEdit/ConstructedInventoryEdit.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ConstructedInventoriesAPI, InventoriesAPI } from 'api';\nimport useRequest from 'hooks/useRequest';\nimport { CardBody } from 'components/Card';\nimport ContentError from 'components/ContentError';\nimport ContentLoading from 'components/ContentLoading';\nimport ConstructedInventoryForm from '../shared/ConstructedInventoryForm';\n\nfunction isEqual(array1, array2) {\n  return (\n    array1.length === array2.length &&\n    array1.every((element, index) => element.id === array2[index].id)\n  );\n}\n\nfunction ConstructedInventoryEdit({ inventory }) {\n  const history = useHistory();\n  const [submitError, setSubmitError] = useState(null);\n  const detailsUrl = `/inventories/constructed_inventory/${inventory.id}/details`;\n  const constructedInventoryId = inventory.id;\n\n  const {\n    isLoading: isLoadingOptions,\n    error: optionsError,\n    request: fetchOptions,\n    result: options,\n  } = useRequest(\n    useCallback(\n      () =>\n        ConstructedInventoriesAPI.readConstructedInventoryOptions(\n          constructedInventoryId,\n          'PUT'\n        ),\n      [constructedInventoryId]\n    ),\n    null\n  );\n\n  useEffect(() => {\n    fetchOptions();\n  }, [fetchOptions]);\n\n  const {\n    result: { initialInstanceGroups, initialInputInventories },\n    request: fetchedRelatedData,\n    error: contentError,\n    isLoading,\n  } = useRequest(\n    useCallback(async () => {\n      const [instanceGroupsResponse, inputInventoriesResponse] =\n        await Promise.all([\n          InventoriesAPI.readInstanceGroups(constructedInventoryId),\n          InventoriesAPI.readInputInventories(constructedInventoryId),\n        ]);\n\n      return {\n        initialInstanceGroups: instanceGroupsResponse.data.results,\n        initialInputInventories: inputInventoriesResponse.data.results,\n      };\n    }, [constructedInventoryId]),\n    {\n      initialInstanceGroups: [],\n      initialInputInventories: [],\n      isLoading: true,\n    }\n  );\n\n  useEffect(() => {\n    fetchedRelatedData();\n  }, [fetchedRelatedData]);\n\n  const handleSubmit = async (values) => {\n    const {\n      instanceGroups,\n      inputInventories,\n      organization,\n      ...remainingValues\n    } = values;\n\n    remainingValues.organization = organization.id;\n    remainingValues.kind = 'constructed';\n\n    try {\n      await Promise.all([\n        ConstructedInventoriesAPI.update(\n          constructedInventoryId,\n          remainingValues\n        ),\n        InventoriesAPI.orderInstanceGroups(\n          constructedInventoryId,\n          instanceGroups,\n          initialInstanceGroups\n        ),\n      ]);\n      /* eslint-disable no-await-in-loop, no-restricted-syntax */\n      // Resolve Promises sequentially to avoid race condition\n      if (!isEqual(initialInputInventories, values.inputInventories)) {\n        for (const inputInventory of initialInputInventories) {\n          await InventoriesAPI.disassociateInventory(\n            constructedInventoryId,\n            inputInventory.id\n          );\n        }\n        for (const inputInventory of values.inputInventories) {\n          await InventoriesAPI.associateInventory(\n            constructedInventoryId,\n            inputInventory.id\n          );\n        }\n      }\n      /* eslint-enable no-await-in-loop, no-restricted-syntax */\n\n      history.push(\n        `/inventories/constructed_inventory/${constructedInventoryId}/details`\n      );\n    } catch (error) {\n      setSubmitError(error);\n    }\n  };\n\n  const handleCancel = () => history.push(detailsUrl);\n\n  if (contentError || optionsError) {\n    return <ContentError error={contentError || optionsError} />;\n  }\n\n  if (isLoading || isLoadingOptions || (!options && !optionsError)) {\n    return <ContentLoading />;\n  }\n\n  return (\n    <CardBody>\n      <ConstructedInventoryForm\n        onCancel={handleCancel}\n        onSubmit={handleSubmit}\n        submitError={submitError}\n        constructedInventory={inventory}\n        instanceGroups={initialInstanceGroups}\n        inputInventories={initialInputInventories}\n        options={options}\n      />\n    </CardBody>\n  );\n}\n\nexport default ConstructedInventoryEdit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}