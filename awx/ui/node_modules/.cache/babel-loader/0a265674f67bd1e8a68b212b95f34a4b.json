{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useState}from'react';import{useField}from'formik';import{FileUpload,FormGroup}from'@patternfly/react-core';import{jsx as _jsx}from\"react/jsx-runtime\";function GceFileUploadField(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),fileError=_useState2[0],setFileError=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),filename=_useState4[0],setFilename=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),file=_useState6[0],setFile=_useState6[1];var _useField=useField({name:'inputs.username'}),_useField2=_slicedToArray(_useField,3),inputsUsernameHelpers=_useField2[2];var _useField3=useField({name:'inputs.project'}),_useField4=_slicedToArray(_useField3,3),inputsProjectHelpers=_useField4[2];var _useField5=useField({name:'inputs.ssh_key_data'}),_useField6=_slicedToArray(_useField5,3),inputsSSHKeyDataHelpers=_useField6[2];return/*#__PURE__*/_jsx(FormGroup,{fieldId:\"credential-gce-file\",validated:!fileError?'default':'error',label:/*i18n*/i18n._(\"Service account JSON file\"),helperText:/*i18n*/i18n._(\"Select a JSON formatted service account key to autopopulate the following fields.\"),helperTextInvalid:fileError,children:/*#__PURE__*/_jsx(FileUpload,{id:\"credential-gce-file\",value:file,filename:filename,filenamePlaceholder:/*i18n*/i18n._(\"Choose a .json file\"),onChange:/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(value){var fileText,fileJSON;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!value){_context.next=16;break;}_context.prev=1;setFile(value);setFilename(value.name);_context.next=6;return value.text();case 6:fileText=_context.sent;fileJSON=JSON.parse(fileText);if(!fileJSON.client_email&&!fileJSON.project_id&&!fileJSON.private_key){setFileError(/*i18n*/i18n._(\"Expected at least one of client_email, project_id or private_key to be present in the file.\"));}else{inputsUsernameHelpers.setValue(fileJSON.client_email||'');inputsProjectHelpers.setValue(fileJSON.project_id||'');inputsSSHKeyDataHelpers.setValue(fileJSON.private_key||'');setFileError(null);}_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);setFileError(/*i18n*/i18n._(\"There was an error parsing the file. Please check the file formatting and try again.\"));case 14:_context.next=22;break;case 16:setFile('');setFilename('');inputsUsernameHelpers.setValue('');inputsProjectHelpers.setValue('');inputsSSHKeyDataHelpers.setValue('');setFileError(null);case 22:case\"end\":return _context.stop();}}},_callee,null,[[1,11]]);}));return function(_x){return _ref.apply(this,arguments);};}(),dropzoneProps:{accept:'.json',onDropRejected:function onDropRejected(){setFileError(/*i18n*/i18n._(\"File upload rejected. Please select a single .json file.\"));}}})});}export default GceFileUploadField;","map":{"version":3,"names":["React","useState","useField","FileUpload","FormGroup","jsx","_jsx","GceFileUploadField","_useState","_useState2","_slicedToArray","fileError","setFileError","_useState3","_useState4","filename","setFilename","_useState5","_useState6","file","setFile","_useField","name","_useField2","inputsUsernameHelpers","_useField3","_useField4","inputsProjectHelpers","_useField5","_useField6","inputsSSHKeyDataHelpers","fieldId","validated","label","i18n","_","helperText","helperTextInvalid","children","id","value","filenamePlaceholder","onChange","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","fileText","fileJSON","wrap","_callee$","_context","prev","next","text","sent","JSON","parse","client_email","project_id","private_key","setValue","t0","stop","_x","apply","arguments","dropzoneProps","accept","onDropRejected"],"sources":["/awx_devel/awx/ui/src/screens/Credential/shared/CredentialFormFields/GceFileUploadField.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { t } from '@lingui/macro';\nimport { useField } from 'formik';\nimport { FileUpload, FormGroup } from '@patternfly/react-core';\n\nfunction GceFileUploadField() {\n  const [fileError, setFileError] = useState(null);\n  const [filename, setFilename] = useState('');\n  const [file, setFile] = useState('');\n  const [, , inputsUsernameHelpers] = useField({\n    name: 'inputs.username',\n  });\n  const [, , inputsProjectHelpers] = useField({\n    name: 'inputs.project',\n  });\n  const [, , inputsSSHKeyDataHelpers] = useField({\n    name: 'inputs.ssh_key_data',\n  });\n  return (\n    <FormGroup\n      fieldId=\"credential-gce-file\"\n      validated={!fileError ? 'default' : 'error'}\n      label={t`Service account JSON file`}\n      helperText={t`Select a JSON formatted service account key to autopopulate the following fields.`}\n      helperTextInvalid={fileError}\n    >\n      <FileUpload\n        id=\"credential-gce-file\"\n        value={file}\n        filename={filename}\n        filenamePlaceholder={t`Choose a .json file`}\n        onChange={async (value) => {\n          if (value) {\n            try {\n              setFile(value);\n              setFilename(value.name);\n              const fileText = await value.text();\n              const fileJSON = JSON.parse(fileText);\n              if (\n                !fileJSON.client_email &&\n                !fileJSON.project_id &&\n                !fileJSON.private_key\n              ) {\n                setFileError(\n                  t`Expected at least one of client_email, project_id or private_key to be present in the file.`\n                );\n              } else {\n                inputsUsernameHelpers.setValue(fileJSON.client_email || '');\n                inputsProjectHelpers.setValue(fileJSON.project_id || '');\n                inputsSSHKeyDataHelpers.setValue(fileJSON.private_key || '');\n                setFileError(null);\n              }\n            } catch {\n              setFileError(\n                t`There was an error parsing the file. Please check the file formatting and try again.`\n              );\n            }\n          } else {\n            setFile('');\n            setFilename('');\n            inputsUsernameHelpers.setValue('');\n            inputsProjectHelpers.setValue('');\n            inputsSSHKeyDataHelpers.setValue('');\n            setFileError(null);\n          }\n        }}\n        dropzoneProps={{\n          accept: '.json',\n          onDropRejected: () => {\n            setFileError(\n              t`File upload rejected. Please select a single .json file.`\n            );\n          },\n        }}\n      />\n    </FormGroup>\n  );\n}\n\nexport default GceFileUploadField;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}