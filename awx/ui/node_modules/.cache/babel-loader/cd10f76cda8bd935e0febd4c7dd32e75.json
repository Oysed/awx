{"ast":null,"code":"import{i18n}from\"@lingui/core\";var credentialPromptsForPassword=function credentialPromptsForPassword(credential){var _credential$inputs,_credential$inputs2,_credential$inputs3,_credential$inputs4;return(credential===null||credential===void 0?void 0:(_credential$inputs=credential.inputs)===null||_credential$inputs===void 0?void 0:_credential$inputs.password)==='ASK'||(credential===null||credential===void 0?void 0:(_credential$inputs2=credential.inputs)===null||_credential$inputs2===void 0?void 0:_credential$inputs2.ssh_key_unlock)==='ASK'||(credential===null||credential===void 0?void 0:(_credential$inputs3=credential.inputs)===null||_credential$inputs3===void 0?void 0:_credential$inputs3.become_password)==='ASK'||(credential===null||credential===void 0?void 0:(_credential$inputs4=credential.inputs)===null||_credential$inputs4===void 0?void 0:_credential$inputs4.vault_password)==='ASK';};export default function credentialsValidator(allowCredentialsWithPasswords,selectedCredentials){var defaultCredentials=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];if(defaultCredentials.length>0&&selectedCredentials){var missingCredentialTypes=[];defaultCredentials.forEach(function(defaultCredential){if(!selectedCredentials.find(function(selectedCredential){var _selectedCredential$i,_defaultCredential$in,_defaultCredential$in2,_selectedCredential$i2,_defaultCredential$in3;return(selectedCredential===null||selectedCredential===void 0?void 0:selectedCredential.credential_type)===(defaultCredential===null||defaultCredential===void 0?void 0:defaultCredential.credential_type)&&!((_selectedCredential$i=selectedCredential.inputs)!==null&&_selectedCredential$i!==void 0&&_selectedCredential$i.vault_id)&&!((_defaultCredential$in=defaultCredential.inputs)!==null&&_defaultCredential$in!==void 0&&_defaultCredential$in.vault_id)||((_defaultCredential$in2=defaultCredential.inputs)===null||_defaultCredential$in2===void 0?void 0:_defaultCredential$in2.vault_id)&&((_selectedCredential$i2=selectedCredential.inputs)===null||_selectedCredential$i2===void 0?void 0:_selectedCredential$i2.vault_id)===((_defaultCredential$in3=defaultCredential.inputs)===null||_defaultCredential$in3===void 0?void 0:_defaultCredential$in3.vault_id);})){var _defaultCredential$in4;missingCredentialTypes.push((_defaultCredential$in4=defaultCredential.inputs)!==null&&_defaultCredential$in4!==void 0&&_defaultCredential$in4.vault_id?\"\".concat(defaultCredential.summary_fields.credential_type.name,\" | \").concat(defaultCredential.inputs.vault_id):defaultCredential.summary_fields.credential_type.name);}});if(missingCredentialTypes.length>0){return(/*i18n*/i18n._(\"Job Template default credentials must be replaced with one of the same type.  Please select a credential for the following types in order to proceed: {0}\",{0:missingCredentialTypes.join(', ')}));}}if(!allowCredentialsWithPasswords&&selectedCredentials){var credentialsThatPrompt=[];selectedCredentials.forEach(function(selectedCredential){if(credentialPromptsForPassword(selectedCredential)){credentialsThatPrompt.push(selectedCredential.name);}});if(credentialsThatPrompt.length>0){return(/*i18n*/i18n._(\"Credentials that require passwords on launch are not permitted.  Please remove or replace the following credentials with a credential of the same type in order to proceed: {0}\",{0:credentialsThatPrompt.join(', ')}));}}return undefined;}","map":{"version":3,"names":["credentialPromptsForPassword","credential","_credential$inputs","_credential$inputs2","_credential$inputs3","_credential$inputs4","inputs","password","ssh_key_unlock","become_password","vault_password","credentialsValidator","allowCredentialsWithPasswords","selectedCredentials","defaultCredentials","arguments","length","undefined","missingCredentialTypes","forEach","defaultCredential","find","selectedCredential","_selectedCredential$i","_defaultCredential$in","_defaultCredential$in2","_selectedCredential$i2","_defaultCredential$in3","credential_type","vault_id","_defaultCredential$in4","push","concat","summary_fields","name","i18n","_","0","join","credentialsThatPrompt"],"sources":["/awx_devel/awx/ui/src/components/LaunchPrompt/steps/credentialsValidator.js"],"sourcesContent":["import { t } from '@lingui/macro';\n\nconst credentialPromptsForPassword = (credential) =>\n  credential?.inputs?.password === 'ASK' ||\n  credential?.inputs?.ssh_key_unlock === 'ASK' ||\n  credential?.inputs?.become_password === 'ASK' ||\n  credential?.inputs?.vault_password === 'ASK';\n\nexport default function credentialsValidator(\n  allowCredentialsWithPasswords,\n  selectedCredentials,\n  defaultCredentials = []\n) {\n  if (defaultCredentials.length > 0 && selectedCredentials) {\n    const missingCredentialTypes = [];\n    defaultCredentials.forEach((defaultCredential) => {\n      if (\n        !selectedCredentials.find(\n          (selectedCredential) =>\n            (selectedCredential?.credential_type ===\n              defaultCredential?.credential_type &&\n              !selectedCredential.inputs?.vault_id &&\n              !defaultCredential.inputs?.vault_id) ||\n            (defaultCredential.inputs?.vault_id &&\n              selectedCredential.inputs?.vault_id ===\n                defaultCredential.inputs?.vault_id)\n        )\n      ) {\n        missingCredentialTypes.push(\n          defaultCredential.inputs?.vault_id\n            ? `${defaultCredential.summary_fields.credential_type.name} | ${defaultCredential.inputs.vault_id}`\n            : defaultCredential.summary_fields.credential_type.name\n        );\n      }\n    });\n\n    if (missingCredentialTypes.length > 0) {\n      return t`Job Template default credentials must be replaced with one of the same type.  Please select a credential for the following types in order to proceed: ${missingCredentialTypes.join(\n        ', '\n      )}`;\n    }\n  }\n\n  if (!allowCredentialsWithPasswords && selectedCredentials) {\n    const credentialsThatPrompt = [];\n    selectedCredentials.forEach((selectedCredential) => {\n      if (credentialPromptsForPassword(selectedCredential)) {\n        credentialsThatPrompt.push(selectedCredential.name);\n      }\n    });\n    if (credentialsThatPrompt.length > 0) {\n      return t`Credentials that require passwords on launch are not permitted.  Please remove or replace the following credentials with a credential of the same type in order to proceed: ${credentialsThatPrompt.join(\n        ', '\n      )}`;\n    }\n  }\n\n  return undefined;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}