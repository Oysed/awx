{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import useIsMounted from'hooks/useIsMounted';/*\n  Hook for using PatternFly's <Select> component when a pre-existing value\n  is loaded from somewhere other than the options. Guarantees object equality\n  between objects in `value` and the corresponding objects loaded as\n  `options` (based on matched id value).\n */export default function useSyncedSelectValue(value,onChange){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),options=_useState2[0],_setOptions=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),selections=_useState4[0],setSelections=_useState4[1];var isMounted=useIsMounted();useEffect(function(){if(!isMounted.current){return;}var newOptions=[];if(value&&value!==selections&&options.length){var syncedValue=value.map(function(item){var match=options.find(function(i){return i.id===item.id;});if(!match){newOptions.push(item);}if(match){if(item.isReadOnly){match.isReadOnly=true;}return match;}return item;});setSelections(syncedValue);}if(newOptions.length>0){_setOptions(options.concat(newOptions));}/* eslint-disable-next-line react-hooks/exhaustive-deps */},[value,options]);var onSelect=function onSelect(event,item){if(selections.includes(item)){onChange(selections.filter(function(i){return i!==item;}));}else{onChange(selections.concat(item));}};return{selections:options.length?addToStringToObjects(selections):[],onSelect:onSelect,options:options,setOptions:function setOptions(newOpts){if(isMounted.current){_setOptions(addToStringToObjects(newOpts));}}};}/*\n  PF uses toString to generate React keys. This is used to ensure\n  all objects in the array have a toString method.\n */function addToStringToObjects(){var items=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];items.forEach(function(item){item.toString=toString;});return items;}function toString(){return String(this.id);}","map":{"version":3,"names":["useState","useEffect","useIsMounted","useSyncedSelectValue","value","onChange","_useState","_useState2","_slicedToArray","options","setOptions","_useState3","_useState4","selections","setSelections","isMounted","current","newOptions","length","syncedValue","map","item","match","find","i","id","push","isReadOnly","concat","onSelect","event","includes","filter","addToStringToObjects","newOpts","items","arguments","undefined","forEach","toString","String"],"sources":["/awx_devel/awx/ui/src/components/MultiSelect/useSyncedSelectValue.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport useIsMounted from 'hooks/useIsMounted';\n\n/*\n  Hook for using PatternFly's <Select> component when a pre-existing value\n  is loaded from somewhere other than the options. Guarantees object equality\n  between objects in `value` and the corresponding objects loaded as\n  `options` (based on matched id value).\n */\nexport default function useSyncedSelectValue(value, onChange) {\n  const [options, setOptions] = useState([]);\n  const [selections, setSelections] = useState([]);\n  const isMounted = useIsMounted();\n\n  useEffect(() => {\n    if (!isMounted.current) {\n      return;\n    }\n    const newOptions = [];\n    if (value && value !== selections && options.length) {\n      const syncedValue = value.map((item) => {\n        const match = options.find((i) => i.id === item.id);\n        if (!match) {\n          newOptions.push(item);\n        }\n\n        if (match) {\n          if (item.isReadOnly) {\n            match.isReadOnly = true;\n          }\n          return match;\n        }\n\n        return item;\n      });\n      setSelections(syncedValue);\n    }\n    if (newOptions.length > 0) {\n      setOptions(options.concat(newOptions));\n    }\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\n  }, [value, options]);\n\n  const onSelect = (event, item) => {\n    if (selections.includes(item)) {\n      onChange(selections.filter((i) => i !== item));\n    } else {\n      onChange(selections.concat(item));\n    }\n  };\n  return {\n    selections: options.length ? addToStringToObjects(selections) : [],\n    onSelect,\n    options,\n    setOptions: (newOpts) => {\n      if (isMounted.current) {\n        setOptions(addToStringToObjects(newOpts));\n      }\n    },\n  };\n}\n\n/*\n  PF uses toString to generate React keys. This is used to ensure\n  all objects in the array have a toString method.\n */\nfunction addToStringToObjects(items = []) {\n  items.forEach((item) => {\n    item.toString = toString;\n  });\n  return items;\n}\n\nfunction toString() {\n  return String(this.id);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}