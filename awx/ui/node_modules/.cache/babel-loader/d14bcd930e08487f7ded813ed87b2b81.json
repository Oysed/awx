{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport LongArrowAltUpIcon from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-up-icon';\nimport LongArrowAltDownIcon from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-down-icon';\nimport ArrowsAltVIcon from '@patternfly/react-icons/dist/esm/icons/arrows-alt-v-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { TableText } from './TableText';\nexport var SortByDirection;\n(function (SortByDirection) {\n  SortByDirection[\"asc\"] = \"asc\";\n  SortByDirection[\"desc\"] = \"desc\";\n})(SortByDirection || (SortByDirection = {}));\nexport var SortColumn = function SortColumn(_a) {\n  var _a$children = _a.children,\n    children = _a$children === void 0 ? null : _a$children,\n    _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$isSortedBy = _a.isSortedBy,\n    isSortedBy = _a$isSortedBy === void 0 ? false : _a$isSortedBy,\n    _a$onSort = _a.onSort,\n    onSort = _a$onSort === void 0 ? null : _a$onSort,\n    _a$sortDirection = _a.sortDirection,\n    sortDirection = _a$sortDirection === void 0 ? '' : _a$sortDirection,\n    _a$type = _a.type,\n    type = _a$type === void 0 ? 'button' : _a$type,\n    props = __rest(_a, [\"children\", \"className\", \"isSortedBy\", \"onSort\", \"sortDirection\", \"type\"]);\n  var SortedByIcon;\n  if (isSortedBy) {\n    SortedByIcon = sortDirection === SortByDirection.asc ? LongArrowAltUpIcon : LongArrowAltDownIcon;\n  } else {\n    SortedByIcon = ArrowsAltVIcon;\n  }\n  return React.createElement(\"button\", Object.assign({}, props, {\n    type: type,\n    className: css(className, styles.tableButton),\n    onClick: function onClick(event) {\n      return onSort && onSort(event);\n    }\n  }), React.createElement(\"div\", {\n    className: css(className, styles.tableButtonContent)\n  }, React.createElement(TableText, null, children), React.createElement(\"span\", {\n    className: css(styles.tableSortIndicator)\n  }, React.createElement(SortedByIcon, null))));\n};\nSortColumn.displayName = 'SortColumn';","map":{"version":3,"names":["React","LongArrowAltUpIcon","LongArrowAltDownIcon","ArrowsAltVIcon","css","styles","TableText","SortByDirection","SortColumn","_a","children","_a$children","_a$className","className","_a$isSortedBy","isSortedBy","_a$onSort","onSort","_a$sortDirection","sortDirection","_a$type","type","props","__rest","SortedByIcon","asc","createElement","Object","assign","tableButton","onClick","event","tableButtonContent","tableSortIndicator","displayName"],"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/SortColumn.tsx"],"sourcesContent":["import * as React from 'react';\nimport LongArrowAltUpIcon from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-up-icon';\nimport LongArrowAltDownIcon from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-down-icon';\nimport ArrowsAltVIcon from '@patternfly/react-icons/dist/esm/icons/arrows-alt-v-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { TableText } from './TableText';\n\nexport enum SortByDirection {\n  asc = 'asc',\n  desc = 'desc'\n}\n\nexport interface SortColumnProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  children?: React.ReactNode;\n  className?: string;\n  isSortedBy?: boolean;\n  onSort?: Function;\n  sortDirection?: string;\n}\n\nexport const SortColumn: React.FunctionComponent<SortColumnProps> = ({\n  children = null,\n  className = '',\n  isSortedBy = false,\n  onSort = null,\n  sortDirection = '',\n  type = 'button',\n  ...props\n}: SortColumnProps) => {\n  let SortedByIcon;\n  if (isSortedBy) {\n    SortedByIcon = sortDirection === SortByDirection.asc ? LongArrowAltUpIcon : LongArrowAltDownIcon;\n  } else {\n    SortedByIcon = ArrowsAltVIcon;\n  }\n  return (\n    <button\n      {...props}\n      type={type}\n      className={css(className, styles.tableButton)}\n      onClick={event => onSort && onSort(event)}\n    >\n      <div className={css(className, styles.tableButtonContent)}>\n        <TableText>{children}</TableText>\n        <span className={css(styles.tableSortIndicator)}>\n          <SortedByIcon />\n        </span>\n      </div>\n    </button>\n  );\n};\nSortColumn.displayName = 'SortColumn';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,kBAAkB,MAAM,+DAA+D;AAC9F,OAAOC,oBAAoB,MAAM,iEAAiE;AAClG,OAAOC,cAAc,MAAM,0DAA0D;AACrF,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,qDAAqD;AACxE,SAASC,SAAS,QAAQ,aAAa;AAEvC,WAAYC,eAGX;AAHD,WAAYA,eAAe;EACzBA,eAAA,eAAW;EACXA,eAAA,iBAAa;AACf,CAAC,EAHWA,eAAe,KAAfA,eAAe;AAa3B,OAAO,IAAMC,UAAU,GAA6C,SAAvDA,UAAUA,CAA8CC,EAQnD,EAAI;oBAFLA,EAEC,CAPhBC,QAAQ;IAARA,QAAQ,GAAAC,WAAA,cAAG,IAAI,GAAAA,WAAA;IAAAC,YAAA,GAKAH,EAEC,CANhBI,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAE,aAAA,GAICL,EAEC,CALhBM,UAAU;IAAVA,UAAU,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;IAAAE,SAAA,GAGHP,EAEC,CAJhBQ,MAAM;IAANA,MAAM,GAAAD,SAAA,cAAG,IAAI,GAAAA,SAAA;IAAAE,gBAAA,GAEET,EAEC,CAHhBU,aAAa;IAAbA,aAAa,GAAAD,gBAAA,cAAG,EAAE,GAAAA,gBAAA;IAAAE,OAAA,GACHX,EAEC,CAFhBY,IAAI;IAAJA,IAAI,GAAAD,OAAA,cAAG,QAAQ,GAAAA,OAAA;IACZE,KAAK,GAAAC,MAAA,CAAAd,EAAA,EAP2D,0EAQpE,CADS;EAER,IAAIe,YAAY;EAChB,IAAIT,UAAU,EAAE;IACdS,YAAY,GAAGL,aAAa,KAAKZ,eAAe,CAACkB,GAAG,GAAGxB,kBAAkB,GAAGC,oBAAoB;GACjG,MAAM;IACLsB,YAAY,GAAGrB,cAAc;;EAE/B,OACEH,KAAA,CAAA0B,aAAA,WAAAC,MAAA,CAAAC,MAAA,KACMN,KAAK;IACTD,IAAI,EAAEA,IAAI;IACVR,SAAS,EAAET,GAAG,CAACS,SAAS,EAAER,MAAM,CAACwB,WAAW,CAAC;IAC7CC,OAAO,EAAE,SAAAA,QAAAC,KAAK;MAAA,OAAId,MAAM,IAAIA,MAAM,CAACc,KAAK,CAAC;IAAA;EAAA,IAEzC/B,KAAA,CAAA0B,aAAA;IAAKb,SAAS,EAAET,GAAG,CAACS,SAAS,EAAER,MAAM,CAAC2B,kBAAkB;EAAC,GACvDhC,KAAA,CAAA0B,aAAA,CAACpB,SAAS,QAAEI,QAAQ,CAAa,EACjCV,KAAA,CAAA0B,aAAA;IAAMb,SAAS,EAAET,GAAG,CAACC,MAAM,CAAC4B,kBAAkB;EAAC,GAC7CjC,KAAA,CAAA0B,aAAA,CAACF,YAAY,OAAG,CACX,CACH,CACC;AAEb,CAAC;AACDhB,UAAU,CAAC0B,WAAW,GAAG,YAAY"},"metadata":{},"sourceType":"module"}