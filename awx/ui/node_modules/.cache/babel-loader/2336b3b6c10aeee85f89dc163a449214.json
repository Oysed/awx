{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React from'react';import{useFormikContext}from'formik';import StepName from'../LaunchPrompt/steps/StepName';import CredentialPasswordsStep from'../LaunchPrompt/steps/CredentialPasswordsStep';import{jsx as _jsx}from\"react/jsx-runtime\";var STEP_ID='credentialPasswords';var isValueMissing=function isValueMissing(val){return!val||val==='';};export default function useCredentialPasswordsStep(showStep,visitedSteps){var _useFormikContext=useFormikContext(),values=_useFormikContext.values,setFieldError=_useFormikContext.setFieldError;var hasError=showStep&&Object.keys(visitedSteps).includes(STEP_ID)&&checkForError(values);return{step:showStep?{id:STEP_ID,name:/*#__PURE__*/_jsx(StepName,{hasErrors:hasError,id:\"credential-passwords-step\",children:/*i18n*/i18n._(\"Credential passwords\")}),component:/*#__PURE__*/_jsx(CredentialPasswordsStep,{launchConfig:{}}),enableNext:true}:null,isReady:true,contentError:null,hasError:hasError,setTouched:function setTouched(setFieldTouched){Object.keys(values.credential_passwords).forEach(function(credentialValueKey){return setFieldTouched(\"credential_passwords['\".concat(credentialValueKey,\"']\"),true,false);});},validate:function validate(){var setPasswordFieldError=function setPasswordFieldError(fieldName){setFieldError(fieldName,/*i18n*/i18n._(\"This field may not be blank\"));};Object.entries(values.credentials[0].inputs).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];if(value==='ASK'&&isValueMissing(key==='password'?values.credential_passwords.ssh_password:values.credential_passwords[key])){setPasswordFieldError(key==='password'?\"credential_passwords.ssh_password\":\"credential_passwords.\".concat(key));}});}};}function checkForError(values){var _values$credentials$;var hasError=false;Object.entries((_values$credentials$=values.credentials[0])===null||_values$credentials$===void 0?void 0:_values$credentials$.inputs).forEach(function(_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],value=_ref4[1];if(value==='ASK'&&isValueMissing(key==='password'?values.credential_passwords.ssh_password:values.credential_passwords[key])){hasError=true;}});return hasError;}","map":{"version":3,"names":["React","useFormikContext","StepName","CredentialPasswordsStep","jsx","_jsx","STEP_ID","isValueMissing","val","useCredentialPasswordsStep","showStep","visitedSteps","_useFormikContext","values","setFieldError","hasError","Object","keys","includes","checkForError","step","id","name","hasErrors","children","i18n","_","component","launchConfig","enableNext","isReady","contentError","setTouched","setFieldTouched","credential_passwords","forEach","credentialValueKey","concat","validate","setPasswordFieldError","fieldName","entries","credentials","inputs","_ref","_ref2","_slicedToArray","key","value","ssh_password","_values$credentials$","_ref3","_ref4"],"sources":["/awx_devel/awx/ui/src/components/AdHocCommands/useAdHocCredentialPasswordStep.js"],"sourcesContent":["import React from 'react';\nimport { useFormikContext } from 'formik';\nimport { t } from '@lingui/macro';\nimport StepName from '../LaunchPrompt/steps/StepName';\nimport CredentialPasswordsStep from '../LaunchPrompt/steps/CredentialPasswordsStep';\n\nconst STEP_ID = 'credentialPasswords';\n\nconst isValueMissing = (val) => !val || val === '';\n\nexport default function useCredentialPasswordsStep(showStep, visitedSteps) {\n  const { values, setFieldError } = useFormikContext();\n  const hasError =\n    showStep &&\n    Object.keys(visitedSteps).includes(STEP_ID) &&\n    checkForError(values);\n  return {\n    step: showStep\n      ? {\n          id: STEP_ID,\n          name: (\n            <StepName hasErrors={hasError} id=\"credential-passwords-step\">\n              {t`Credential passwords`}\n            </StepName>\n          ),\n          component: <CredentialPasswordsStep launchConfig={{}} />,\n          enableNext: true,\n        }\n      : null,\n    isReady: true,\n    contentError: null,\n    hasError,\n    setTouched: (setFieldTouched) => {\n      Object.keys(values.credential_passwords).forEach((credentialValueKey) =>\n        setFieldTouched(\n          `credential_passwords['${credentialValueKey}']`,\n          true,\n          false\n        )\n      );\n    },\n    validate: () => {\n      const setPasswordFieldError = (fieldName) => {\n        setFieldError(fieldName, t`This field may not be blank`);\n      };\n\n      Object.entries(values.credentials[0].inputs).forEach(([key, value]) => {\n        if (\n          value === 'ASK' &&\n          isValueMissing(\n            key === 'password'\n              ? values.credential_passwords.ssh_password\n              : values.credential_passwords[key]\n          )\n        ) {\n          setPasswordFieldError(\n            key === 'password'\n              ? `credential_passwords.ssh_password`\n              : `credential_passwords.${key}`\n          );\n        }\n      });\n    },\n  };\n}\n\nfunction checkForError(values) {\n  let hasError = false;\n  Object.entries(values.credentials[0]?.inputs).forEach(([key, value]) => {\n    if (\n      value === 'ASK' &&\n      isValueMissing(\n        key === 'password'\n          ? values.credential_passwords.ssh_password\n          : values.credential_passwords[key]\n      )\n    ) {\n      hasError = true;\n    }\n  });\n  return hasError;\n}\n"],"mappings":"sIAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,gBAAgB,KAAQ,QAAQ,CAEzC,MAAO,CAAAC,QAAQ,KAAM,gCAAgC,CACrD,MAAO,CAAAC,uBAAuB,KAAM,+CAA+C,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpF,GAAM,CAAAC,OAAO,CAAG,qBAAqB,CAErC,GAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAIC,GAAG,QAAK,CAACA,GAAG,EAAIA,GAAG,GAAK,EAAE,GAElD,cAAe,SAAS,CAAAC,0BAA0BA,CAACC,QAAQ,CAAEC,YAAY,CAAE,CACzE,IAAAC,iBAAA,CAAkCX,gBAAgB,CAAC,CAAC,CAA5CY,MAAM,CAAAD,iBAAA,CAANC,MAAM,CAAEC,aAAa,CAAAF,iBAAA,CAAbE,aAAa,CAC7B,GAAM,CAAAC,QAAQ,CACZL,QAAQ,EACRM,MAAM,CAACC,IAAI,CAACN,YAAY,CAAC,CAACO,QAAQ,CAACZ,OAAO,CAAC,EAC3Ca,aAAa,CAACN,MAAM,CAAC,CACvB,MAAO,CACLO,IAAI,CAAEV,QAAQ,CACV,CACEW,EAAE,CAAEf,OAAO,CACXgB,IAAI,cACFjB,IAAA,CAACH,QAAQ,EAACqB,SAAS,CAAER,QAAS,CAACM,EAAE,CAAC,2BAA2B,CAAAG,QAAA,SAC1DC,IAAA,CAAAC,CAAA,uBAAsB,CAAC,CAChB,CACX,CACDC,SAAS,cAAEtB,IAAA,CAACF,uBAAuB,EAACyB,YAAY,CAAE,CAAC,CAAE,CAAE,CAAC,CACxDC,UAAU,CAAE,IACd,CAAC,CACD,IAAI,CACRC,OAAO,CAAE,IAAI,CACbC,YAAY,CAAE,IAAI,CAClBhB,QAAQ,CAARA,QAAQ,CACRiB,UAAU,CAAE,SAAAA,WAACC,eAAe,CAAK,CAC/BjB,MAAM,CAACC,IAAI,CAACJ,MAAM,CAACqB,oBAAoB,CAAC,CAACC,OAAO,CAAC,SAACC,kBAAkB,QAClE,CAAAH,eAAe,0BAAAI,MAAA,CACYD,kBAAkB,OAC3C,IAAI,CACJ,KACF,CAAC,EACH,CAAC,CACH,CAAC,CACDE,QAAQ,CAAE,SAAAA,SAAA,CAAM,CACd,GAAM,CAAAC,qBAAqB,CAAG,QAAxB,CAAAA,qBAAqBA,CAAIC,SAAS,CAAK,CAC3C1B,aAAa,CAAC0B,SAAS,SAAEf,IAAA,CAAAC,CAAA,8BAA6B,CAAC,CAAC,CAC1D,CAAC,CAEDV,MAAM,CAACyB,OAAO,CAAC5B,MAAM,CAAC6B,WAAW,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAACR,OAAO,CAAC,SAAAS,IAAA,CAAkB,KAAAC,KAAA,CAAAC,cAAA,CAAAF,IAAA,IAAhBG,GAAG,CAAAF,KAAA,IAAEG,KAAK,CAAAH,KAAA,IAC/D,GACEG,KAAK,GAAK,KAAK,EACfzC,cAAc,CACZwC,GAAG,GAAK,UAAU,CACdlC,MAAM,CAACqB,oBAAoB,CAACe,YAAY,CACxCpC,MAAM,CAACqB,oBAAoB,CAACa,GAAG,CACrC,CAAC,CACD,CACAR,qBAAqB,CACnBQ,GAAG,GAAK,UAAU,6DAAAV,MAAA,CAEUU,GAAG,CACjC,CAAC,CACH,CACF,CAAC,CAAC,CACJ,CACF,CAAC,CACH,CAEA,QAAS,CAAA5B,aAAaA,CAACN,MAAM,CAAE,KAAAqC,oBAAA,CAC7B,GAAI,CAAAnC,QAAQ,CAAG,KAAK,CACpBC,MAAM,CAACyB,OAAO,EAAAS,oBAAA,CAACrC,MAAM,CAAC6B,WAAW,CAAC,CAAC,CAAC,UAAAQ,oBAAA,iBAArBA,oBAAA,CAAuBP,MAAM,CAAC,CAACR,OAAO,CAAC,SAAAgB,KAAA,CAAkB,KAAAC,KAAA,CAAAN,cAAA,CAAAK,KAAA,IAAhBJ,GAAG,CAAAK,KAAA,IAAEJ,KAAK,CAAAI,KAAA,IAChE,GACEJ,KAAK,GAAK,KAAK,EACfzC,cAAc,CACZwC,GAAG,GAAK,UAAU,CACdlC,MAAM,CAACqB,oBAAoB,CAACe,YAAY,CACxCpC,MAAM,CAACqB,oBAAoB,CAACa,GAAG,CACrC,CAAC,CACD,CACAhC,QAAQ,CAAG,IAAI,CACjB,CACF,CAAC,CAAC,CACF,MAAO,CAAAA,QAAQ,CACjB"},"metadata":{},"sourceType":"module"}