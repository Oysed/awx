{"ast":null,"code":"import _styled from\"styled-components\";import{i18n}from\"@lingui/core\";import React,{useEffect}from'react';import{Link,useParams}from'react-router-dom';import{SearchIcon,ExclamationCircleIcon as PFExclamationCircleIcon}from'@patternfly/react-icons';import ContentEmpty from'components/ContentEmpty';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ExclamationCircleIcon=styled(PFExclamationCircleIcon).withConfig({displayName:\"EmptyOutput__ExclamationCircleIcon\",componentId:\"sc-1cy2e0k-0\"})([\"color:var(--pf-global--danger-color--100);\"]);var _StyledContentEmpty=styled(ContentEmpty).withConfig({displayName:\"EmptyOutput___StyledContentEmpty\",componentId:\"sc-1cy2e0k-1\"})([\"height:100%\"]);export default function EmptyOutput(_ref){var hasQueryParams=_ref.hasQueryParams,isJobRunning=_ref.isJobRunning,onUnmount=_ref.onUnmount,job=_ref.job;var title;var message;var icon;var _useParams=useParams(),typeSegment=_useParams.typeSegment,id=_useParams.id;useEffect(function(){return onUnmount;});if(hasQueryParams){title=/*i18n*/i18n._(\"The search filter did not produce any results\\u2026\");message=/*i18n*/i18n._(\"Please try another search using the filter above\");icon=SearchIcon;}else if(isJobRunning){title=/*i18n*/i18n._(\"Waiting for job output\\u2026\");}else if(job.status==='failed'){title=/*i18n*/i18n._(\"This job failed and has no output.\");message=/*#__PURE__*/_jsxs(_Fragment,{children:[/*i18n*/i18n._(\"Return to\"),' ',/*#__PURE__*/_jsx(Link,{to:\"/jobs/\".concat(typeSegment,\"/\").concat(id,\"/details\"),children:/*i18n*/i18n._(\"details.\")}),/*#__PURE__*/_jsx(\"br\",{}),job.job_explanation&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*i18n*/i18n._(\"Failure Explanation:\"),\" \",\"\".concat(job.job_explanation)]})]});icon=ExclamationCircleIcon;}else{title=/*i18n*/i18n._(\"No output found for this job.\");}return/*#__PURE__*/_jsx(_StyledContentEmpty,{title:title,message:message,icon:icon});}","map":{"version":3,"names":["React","useEffect","Link","useParams","SearchIcon","ExclamationCircleIcon","PFExclamationCircleIcon","ContentEmpty","styled","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","withConfig","displayName","componentId","_StyledContentEmpty","EmptyOutput","_ref","hasQueryParams","isJobRunning","onUnmount","job","title","message","icon","_useParams","typeSegment","id","i18n","_","status","children","to","concat","job_explanation"],"sources":["/awx_devel/awx/ui/src/screens/Job/JobOutput/EmptyOutput.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport 'styled-components/macro';\nimport { t } from '@lingui/macro';\nimport {\n  SearchIcon,\n  ExclamationCircleIcon as PFExclamationCircleIcon,\n} from '@patternfly/react-icons';\nimport ContentEmpty from 'components/ContentEmpty';\n\nimport styled from 'styled-components';\n\nconst ExclamationCircleIcon = styled(PFExclamationCircleIcon)`\n  color: var(--pf-global--danger-color--100);\n`;\n\nexport default function EmptyOutput({\n  hasQueryParams,\n  isJobRunning,\n  onUnmount,\n  job,\n}) {\n  let title;\n  let message;\n  let icon;\n  const { typeSegment, id } = useParams();\n\n  useEffect(() => onUnmount);\n\n  if (hasQueryParams) {\n    title = t`The search filter did not produce any results…`;\n    message = t`Please try another search using the filter above`;\n    icon = SearchIcon;\n  } else if (isJobRunning) {\n    title = t`Waiting for job output…`;\n  } else if (job.status === 'failed') {\n    title = t`This job failed and has no output.`;\n    message = (\n      <>\n        {t`Return to `}{' '}\n        <Link to={`/jobs/${typeSegment}/${id}/details`}>{t`details.`}</Link>\n        <br />\n        {job.job_explanation && (\n          <>\n            {t`Failure Explanation:`} {`${job.job_explanation}`}\n          </>\n        )}\n      </>\n    );\n    icon = ExclamationCircleIcon;\n  } else {\n    title = t`No output found for this job.`;\n  }\n\n  return (\n    <ContentEmpty\n      css=\"height: 100%\"\n      title={title}\n      message={message}\n      icon={icon}\n    />\n  );\n}\n"],"mappings":"sEAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,IAAI,CAAEC,SAAS,KAAQ,kBAAkB,CAGlD,OACEC,UAAU,CACVC,qBAAqB,GAAI,CAAAC,uBAAuB,KAC3C,yBAAyB,CAChC,MAAO,CAAAC,YAAY,KAAM,yBAAyB,CAElD,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEvC,GAAM,CAAAT,qBAAqB,CAAGG,MAAM,CAACF,uBAAuB,CAAC,CAAAS,UAAA,EAAAC,WAAA,sCAAAC,WAAA,iEAE5D,CAAC,IAAAC,mBAAA,CAAAV,MAAA,CAAAD,YAAA,EAAAQ,UAAA,EAAAC,WAAA,oCAAAC,WAAA,mCAEF,cAAe,SAAS,CAAAE,WAAWA,CAAAC,IAAA,CAKhC,IAJD,CAAAC,cAAc,CAAAD,IAAA,CAAdC,cAAc,CACdC,YAAY,CAAAF,IAAA,CAAZE,YAAY,CACZC,SAAS,CAAAH,IAAA,CAATG,SAAS,CACTC,GAAG,CAAAJ,IAAA,CAAHI,GAAG,CAEH,GAAI,CAAAC,KAAK,CACT,GAAI,CAAAC,OAAO,CACX,GAAI,CAAAC,IAAI,CACR,IAAAC,UAAA,CAA4BzB,SAAS,CAAC,CAAC,CAA/B0B,WAAW,CAAAD,UAAA,CAAXC,WAAW,CAAEC,EAAE,CAAAF,UAAA,CAAFE,EAAE,CAEvB7B,SAAS,CAAC,iBAAM,CAAAsB,SAAS,GAAC,CAE1B,GAAIF,cAAc,CAAE,CAClBI,KAAK,SAAGM,IAAA,CAAAC,CAAA,sDAAgD,CAAC,CACzDN,OAAO,SAAGK,IAAA,CAAAC,CAAA,mDAAkD,CAAC,CAC7DL,IAAI,CAAGvB,UAAU,CACnB,CAAC,IAAM,IAAIkB,YAAY,CAAE,CACvBG,KAAK,SAAGM,IAAA,CAAAC,CAAA,+BAAyB,CAAC,CACpC,CAAC,IAAM,IAAIR,GAAG,CAACS,MAAM,GAAK,QAAQ,CAAE,CAClCR,KAAK,SAAGM,IAAA,CAAAC,CAAA,qCAAoC,CAAC,CAC7CN,OAAO,cACLZ,KAAA,CAAAF,SAAA,EAAAsB,QAAA,UACGH,IAAA,CAAAC,CAAA,YAAY,CAAC,CAAE,GAAG,cACnBtB,IAAA,CAACR,IAAI,EAACiC,EAAE,UAAAC,MAAA,CAAWP,WAAW,MAAAO,MAAA,CAAIN,EAAE,YAAW,CAAAI,QAAA,SAAEH,IAAA,CAAAC,CAAA,WAAU,CAAC,CAAO,CAAC,cACpEtB,IAAA,QAAK,CAAC,CACLc,GAAG,CAACa,eAAe,eAClBvB,KAAA,CAAAF,SAAA,EAAAsB,QAAA,UACGH,IAAA,CAAAC,CAAA,uBAAsB,CAAC,CAAC,GAAC,IAAAI,MAAA,CAAIZ,GAAG,CAACa,eAAe,GACjD,CACH,EACD,CACH,CACDV,IAAI,CAAGtB,qBAAqB,CAC9B,CAAC,IAAM,CACLoB,KAAK,SAAGM,IAAA,CAAAC,CAAA,gCAA+B,CAAC,CAC1C,CAEA,mBACEtB,IAAA,CAAAQ,mBAAA,EAEEO,KAAK,CAAEA,KAAM,CACbC,OAAO,CAAEA,OAAQ,CACjBC,IAAI,CAAEA,IAAK,CACZ,CAAC,CAEN"},"metadata":{},"sourceType":"module"}