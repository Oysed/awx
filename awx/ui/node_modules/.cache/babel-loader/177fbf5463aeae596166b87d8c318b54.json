{"ast":null,"code":"import _defineProperty from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import{useState,useEffect}from'react';import{useFormikContext}from'formik';import useInventoryStep from'../../LaunchPrompt/steps/useInventoryStep';import useCredentialsStep from'../../LaunchPrompt/steps/useCredentialsStep';import useExecutionEnvironmentStep from'../../LaunchPrompt/steps/useExecutionEnvironmentStep';import useInstanceGroupsStep from'../../LaunchPrompt/steps/useInstanceGroupsStep';import useOtherPromptsStep from'../../LaunchPrompt/steps/useOtherPromptsStep';import useSurveyStep from'../../LaunchPrompt/steps/useSurveyStep';import usePreviewStep from'../../LaunchPrompt/steps/usePreviewStep';export default function useSchedulePromptSteps(surveyConfig,launchConfig,schedule,resource,scheduleCredentials,resourceDefaultCredentials,labels,instanceGroups){var sourceOfValues=Object.keys(schedule).length>0&&schedule||resource;var _useFormikContext=useFormikContext(),resetForm=_useFormikContext.resetForm,values=_useFormikContext.values;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),visited=_useState2[0],setVisited=_useState2[1];var steps=[useInventoryStep(launchConfig,sourceOfValues,visited),useCredentialsStep(launchConfig,sourceOfValues,resourceDefaultCredentials),useExecutionEnvironmentStep(launchConfig,resource),useInstanceGroupsStep(launchConfig,resource,instanceGroups),useOtherPromptsStep(launchConfig,sourceOfValues,labels),useSurveyStep(launchConfig,surveyConfig,sourceOfValues,visited)];var hasErrors=steps.some(function(step){return step.hasError;});steps.push(usePreviewStep(launchConfig,resource,surveyConfig,hasErrors,true,/*i18n*/i18n._(\"Save\")));var pfSteps=steps.map(function(s){return s.step;}).filter(function(s){return s!=null;});var isReady=!steps.some(function(s){return!s.isReady;});useEffect(function(){if(launchConfig&&surveyConfig&&isReady){var initialValues={};initialValues=steps.reduce(function(acc,cur){return _objectSpread(_objectSpread({},acc),cur.initialValues);},{});if(launchConfig.ask_credential_on_launch){var defaultCredsWithoutOverrides=[];var credentialHasOverride=function credentialHasOverride(templateDefaultCred){var hasOverride=false;scheduleCredentials.forEach(function(scheduleCredential){if(templateDefaultCred.credential_type===scheduleCredential.credential_type){if(!templateDefaultCred.inputs.vault_id&&!scheduleCredential.inputs.vault_id||templateDefaultCred.inputs.vault_id&&scheduleCredential.inputs.vault_id&&templateDefaultCred.inputs.vault_id===scheduleCredential.inputs.vault_id){hasOverride=true;}}});return hasOverride;};if(resourceDefaultCredentials){resourceDefaultCredentials.forEach(function(defaultCred){if(!credentialHasOverride(defaultCred)){defaultCredsWithoutOverrides.push(defaultCred);}});}initialValues.credentials=scheduleCredentials.concat(defaultCredsWithoutOverrides);}resetForm({values:_objectSpread(_objectSpread({},initialValues),values)});}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[launchConfig,surveyConfig,isReady]);var stepWithError=steps.find(function(s){return s.contentError;});var contentError=stepWithError?stepWithError.contentError:null;return{isReady:isReady,validateStep:function validateStep(stepId){steps.find(function(s){var _s$step;return(s===null||s===void 0?void 0:(_s$step=s.step)===null||_s$step===void 0?void 0:_s$step.id)===stepId;}).validate();},steps:pfSteps,visitStep:function visitStep(prevStepId,setFieldTouched){setVisited(_objectSpread(_objectSpread({},visited),{},_defineProperty({},prevStepId,true)));steps.find(function(s){var _s$step2;return(s===null||s===void 0?void 0:(_s$step2=s.step)===null||_s$step2===void 0?void 0:_s$step2.id)===prevStepId;}).setTouched(setFieldTouched);},visitAllSteps:function visitAllSteps(setFieldTouched){setVisited({inventory:true,credentials:true,executionEnvironment:true,instanceGroups:true,other:true,survey:true,preview:true});steps.forEach(function(s){return s.setTouched(setFieldTouched);});},contentError:contentError};}","map":{"version":3,"names":["useState","useEffect","useFormikContext","useInventoryStep","useCredentialsStep","useExecutionEnvironmentStep","useInstanceGroupsStep","useOtherPromptsStep","useSurveyStep","usePreviewStep","useSchedulePromptSteps","surveyConfig","launchConfig","schedule","resource","scheduleCredentials","resourceDefaultCredentials","labels","instanceGroups","sourceOfValues","Object","keys","length","_useFormikContext","resetForm","values","_useState","_useState2","_slicedToArray","visited","setVisited","steps","hasErrors","some","step","hasError","push","i18n","_","pfSteps","map","s","filter","isReady","initialValues","reduce","acc","cur","_objectSpread","ask_credential_on_launch","defaultCredsWithoutOverrides","credentialHasOverride","templateDefaultCred","hasOverride","forEach","scheduleCredential","credential_type","inputs","vault_id","defaultCred","credentials","concat","stepWithError","find","contentError","validateStep","stepId","_s$step","id","validate","visitStep","prevStepId","setFieldTouched","_defineProperty","_s$step2","setTouched","visitAllSteps","inventory","executionEnvironment","other","survey","preview"],"sources":["/awx_devel/awx/ui/src/components/Schedule/shared/useSchedulePromptSteps.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useFormikContext } from 'formik';\nimport { t } from '@lingui/macro';\nimport useInventoryStep from '../../LaunchPrompt/steps/useInventoryStep';\nimport useCredentialsStep from '../../LaunchPrompt/steps/useCredentialsStep';\nimport useExecutionEnvironmentStep from '../../LaunchPrompt/steps/useExecutionEnvironmentStep';\nimport useInstanceGroupsStep from '../../LaunchPrompt/steps/useInstanceGroupsStep';\nimport useOtherPromptsStep from '../../LaunchPrompt/steps/useOtherPromptsStep';\nimport useSurveyStep from '../../LaunchPrompt/steps/useSurveyStep';\nimport usePreviewStep from '../../LaunchPrompt/steps/usePreviewStep';\n\nexport default function useSchedulePromptSteps(\n  surveyConfig,\n  launchConfig,\n  schedule,\n  resource,\n  scheduleCredentials,\n  resourceDefaultCredentials,\n  labels,\n  instanceGroups\n) {\n  const sourceOfValues =\n    (Object.keys(schedule).length > 0 && schedule) || resource;\n  const { resetForm, values } = useFormikContext();\n  const [visited, setVisited] = useState({});\n\n  const steps = [\n    useInventoryStep(launchConfig, sourceOfValues, visited),\n    useCredentialsStep(\n      launchConfig,\n      sourceOfValues,\n      resourceDefaultCredentials\n    ),\n    useExecutionEnvironmentStep(launchConfig, resource),\n    useInstanceGroupsStep(launchConfig, resource, instanceGroups),\n    useOtherPromptsStep(launchConfig, sourceOfValues, labels),\n    useSurveyStep(launchConfig, surveyConfig, sourceOfValues, visited),\n  ];\n\n  const hasErrors = steps.some((step) => step.hasError);\n\n  steps.push(\n    usePreviewStep(\n      launchConfig,\n      resource,\n      surveyConfig,\n      hasErrors,\n      true,\n      t`Save`\n    )\n  );\n\n  const pfSteps = steps.map((s) => s.step).filter((s) => s != null);\n  const isReady = !steps.some((s) => !s.isReady);\n\n  useEffect(() => {\n    if (launchConfig && surveyConfig && isReady) {\n      let initialValues = {};\n      initialValues = steps.reduce(\n        (acc, cur) => ({\n          ...acc,\n          ...cur.initialValues,\n        }),\n        {}\n      );\n\n      if (launchConfig.ask_credential_on_launch) {\n        const defaultCredsWithoutOverrides = [];\n\n        const credentialHasOverride = (templateDefaultCred) => {\n          let hasOverride = false;\n          scheduleCredentials.forEach((scheduleCredential) => {\n            if (\n              templateDefaultCred.credential_type ===\n              scheduleCredential.credential_type\n            ) {\n              if (\n                (!templateDefaultCred.inputs.vault_id &&\n                  !scheduleCredential.inputs.vault_id) ||\n                (templateDefaultCred.inputs.vault_id &&\n                  scheduleCredential.inputs.vault_id &&\n                  templateDefaultCred.inputs.vault_id ===\n                    scheduleCredential.inputs.vault_id)\n              ) {\n                hasOverride = true;\n              }\n            }\n          });\n\n          return hasOverride;\n        };\n\n        if (resourceDefaultCredentials) {\n          resourceDefaultCredentials.forEach((defaultCred) => {\n            if (!credentialHasOverride(defaultCred)) {\n              defaultCredsWithoutOverrides.push(defaultCred);\n            }\n          });\n        }\n\n        initialValues.credentials = scheduleCredentials.concat(\n          defaultCredsWithoutOverrides\n        );\n      }\n\n      resetForm({\n        values: {\n          ...initialValues,\n          ...values,\n        },\n      });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [launchConfig, surveyConfig, isReady]);\n\n  const stepWithError = steps.find((s) => s.contentError);\n  const contentError = stepWithError ? stepWithError.contentError : null;\n\n  return {\n    isReady,\n    validateStep: (stepId) => {\n      steps.find((s) => s?.step?.id === stepId).validate();\n    },\n    steps: pfSteps,\n    visitStep: (prevStepId, setFieldTouched) => {\n      setVisited({\n        ...visited,\n        [prevStepId]: true,\n      });\n      steps.find((s) => s?.step?.id === prevStepId).setTouched(setFieldTouched);\n    },\n    visitAllSteps: (setFieldTouched) => {\n      setVisited({\n        inventory: true,\n        credentials: true,\n        executionEnvironment: true,\n        instanceGroups: true,\n        other: true,\n        survey: true,\n        preview: true,\n      });\n      steps.forEach((s) => s.setTouched(setFieldTouched));\n    },\n    contentError,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}