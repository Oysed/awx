{"ast":null,"code":"import _createForOfIteratorHelper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nvar hasCompoundParentsExpanded = function hasCompoundParentsExpanded(parentId, compoundParent, rows) {\n  // max rows.length parents\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  var _iterator = _createForOfIteratorHelper(rows),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var i = _step.value;\n      if (rows[parentId].hasOwnProperty('parent')) {\n        parentId = rows[parentId].parent;\n      } else {\n        return rows[parentId].cells[compoundParent].props.isOpen;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return false;\n};\nvar hasParentsExpanded = function hasParentsExpanded(parentId, rows) {\n  // max rows.length parents\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  var _iterator2 = _createForOfIteratorHelper(rows),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var i = _step2.value;\n      if (rows[parentId].hasOwnProperty('parent')) {\n        parentId = rows[parentId].parent;\n      } else {\n        return rows[parentId].isOpen;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return false;\n};\nexport var isRowExpanded = function isRowExpanded(row, rows) {\n  if (row.parent !== undefined) {\n    if (row.hasOwnProperty('compoundParent')) {\n      return hasCompoundParentsExpanded(row.parent, row.compoundParent, rows);\n    }\n    return hasParentsExpanded(row.parent, rows) && rows[row.parent].isOpen;\n  }\n  return undefined;\n};\nexport var getErrorTextByValidator = function getErrorTextByValidator(validatorName, validators) {\n  var result = validators.filter(function (validator) {\n    return validator.name === validatorName;\n  });\n  return result[0].errorText;\n};\nexport var cancelCellEdits = function cancelCellEdits(row) {\n  row.cells.forEach(function (cell) {\n    delete cell.props.errorText;\n    delete cell.props.editableValue;\n    cell.props.isValid = true;\n    // for editable selects, revert the selected property to its original value\n    if (cell.props.selected) {\n      cell.props.selected = cell.props.value;\n    }\n  });\n  row.isEditable = !row.isEditable;\n  row.isValid = true;\n  return row;\n};\nexport var validateCellEdits = function validateCellEdits(row, type, validationErrors) {\n  var missingPropErrorTxt = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'Validation requires unique name property for row cells';\n  row.isValid = Object.keys(validationErrors).length ? false : true;\n  row.cells.forEach(function (cell) {\n    delete cell.props.errorText;\n    var hasValue = cell.props.value !== undefined && cell.props.value !== null;\n    var hasEditableValue = cell.props.editableValue !== undefined && cell.props.editableValue !== null;\n    if (cell.props && hasValue && hasEditableValue) {\n      if (type === 'save') {\n        var errorMsg = Object.keys(validationErrors).filter(function (validatorName) {\n          return validationErrors[validatorName].includes(cell.props.name);\n        }).map(function (validatorName) {\n          return getErrorTextByValidator(validatorName, row.rowEditValidationRules);\n        });\n        if (errorMsg.length) {\n          cell.props.errorText = cell.props.name ? errorMsg.join(', ') : missingPropErrorTxt;\n          if (cell.props.name === undefined) {\n            // eslint-disable-next-line no-console\n            console.warn('Row edit validation reporting requires cell definitions to have a unique name property.');\n          }\n        } else {\n          delete cell.props.errorText;\n          cell.props.isValid = true;\n        }\n      }\n    }\n  });\n  return row;\n};\nexport var applyCellEdits = function applyCellEdits(row, type) {\n  row.cells.forEach(function (cell) {\n    delete cell.props.errorText;\n    var hasValue = cell.props.value !== undefined && cell.props.value !== null;\n    var hasEditableValue = cell.props.editableValue !== undefined && cell.props.editableValue !== null;\n    // sync for validation\n    if (hasValue && !hasEditableValue) {\n      cell.props.editableValue = cell.props.value;\n    }\n    if (cell.props && hasValue && hasEditableValue) {\n      if (type === 'save') {\n        cell.props.value = cell.props.editableValue;\n        cell.props.isValid = true;\n        delete cell.props.errorText;\n      }\n      delete cell.props.editableValue;\n    }\n  });\n  row.isEditable = !row.isEditable;\n  row.isValid = true;\n  return row;\n};\nvar camelize = function camelize(s) {\n  return s.toUpperCase().replace('-', '').replace('_', '');\n};\nexport var toCamel = function toCamel(s) {\n  return s.replace(/([-_][a-z])/gi, camelize);\n};\n/**\n * @param {string} input - String to capitalize\n */\nexport function capitalize(input) {\n  return input[0].toUpperCase() + input.substring(1);\n}","map":{"version":3,"names":["hasCompoundParentsExpanded","parentId","compoundParent","rows","_iterator","_createForOfIteratorHelper","_step","s","n","done","i","value","hasOwnProperty","parent","cells","props","isOpen","err","e","f","hasParentsExpanded","_iterator2","_step2","isRowExpanded","row","undefined","getErrorTextByValidator","validatorName","validators","result","filter","validator","name","errorText","cancelCellEdits","forEach","cell","editableValue","isValid","selected","isEditable","validateCellEdits","type","validationErrors","missingPropErrorTxt","arguments","length","Object","keys","hasValue","hasEditableValue","errorMsg","includes","map","rowEditValidationRules","join","console","warn","applyCellEdits","camelize","toUpperCase","replace","toCamel","capitalize","input","substring"],"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/utils/utils.tsx"],"sourcesContent":["import { IRow, IRowCell, IValidatorDef, RowEditType, RowErrors } from '../TableTypes';\n\nconst hasCompoundParentsExpanded = (parentId: number, compoundParent: number, rows: IRow[]) => {\n  // max rows.length parents\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  for (const i of rows) {\n    if (rows[parentId].hasOwnProperty('parent')) {\n      parentId = rows[parentId].parent;\n    } else {\n      return (rows[parentId].cells[compoundParent] as IRowCell).props.isOpen;\n    }\n  }\n  return false;\n};\n\nconst hasParentsExpanded = (parentId: number, rows: IRow[]) => {\n  // max rows.length parents\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  for (const i of rows) {\n    if (rows[parentId].hasOwnProperty('parent')) {\n      parentId = rows[parentId].parent;\n    } else {\n      return rows[parentId].isOpen;\n    }\n  }\n  return false;\n};\n\nexport const isRowExpanded = (row: IRow, rows: IRow[]) => {\n  if (row.parent !== undefined) {\n    if (row.hasOwnProperty('compoundParent')) {\n      return hasCompoundParentsExpanded(row.parent, row.compoundParent, rows);\n    }\n    return hasParentsExpanded(row.parent, rows) && rows[row.parent].isOpen;\n  }\n  return undefined;\n};\n\nexport const getErrorTextByValidator = (validatorName: string, validators: IValidatorDef[]) => {\n  const result = validators.filter(validator => validator.name === validatorName);\n  return result[0].errorText;\n};\n\nexport const cancelCellEdits = (row: IRow) => {\n  (row.cells as IRowCell[]).forEach(cell => {\n    delete cell.props.errorText;\n    delete cell.props.editableValue;\n    cell.props.isValid = true;\n    // for editable selects, revert the selected property to its original value\n    if (cell.props.selected) {\n      cell.props.selected = cell.props.value;\n    }\n  });\n\n  row.isEditable = !row.isEditable;\n  row.isValid = true;\n  return row;\n};\n\nexport const validateCellEdits = (\n  row: IRow,\n  type: RowEditType,\n  validationErrors: RowErrors,\n  missingPropErrorTxt = 'Validation requires unique name property for row cells'\n) => {\n  row.isValid = Object.keys(validationErrors).length ? false : true;\n\n  (row.cells as IRowCell[]).forEach(cell => {\n    delete cell.props.errorText;\n\n    const hasValue = cell.props.value !== undefined && cell.props.value !== null;\n    const hasEditableValue = cell.props.editableValue !== undefined && cell.props.editableValue !== null;\n\n    if (cell.props && hasValue && hasEditableValue) {\n      if (type === 'save') {\n        const errorMsg = Object.keys(validationErrors)\n          .filter(validatorName => validationErrors[validatorName].includes(cell.props.name))\n          .map(validatorName => getErrorTextByValidator(validatorName, row.rowEditValidationRules));\n\n        if (errorMsg.length) {\n          cell.props.errorText = cell.props.name ? errorMsg.join(', ') : missingPropErrorTxt;\n          if (cell.props.name === undefined) {\n            // eslint-disable-next-line no-console\n            console.warn('Row edit validation reporting requires cell definitions to have a unique name property.');\n          }\n        } else {\n          delete cell.props.errorText;\n          cell.props.isValid = true;\n        }\n      }\n    }\n  });\n  return row;\n};\n\nexport const applyCellEdits = (row: IRow, type: RowEditType) => {\n  (row.cells as IRowCell[]).forEach(cell => {\n    delete cell.props.errorText;\n    const hasValue = cell.props.value !== undefined && cell.props.value !== null;\n    const hasEditableValue = cell.props.editableValue !== undefined && cell.props.editableValue !== null;\n\n    // sync for validation\n    if (hasValue && !hasEditableValue) {\n      cell.props.editableValue = cell.props.value;\n    }\n\n    if (cell.props && hasValue && hasEditableValue) {\n      if (type === 'save') {\n        cell.props.value = cell.props.editableValue;\n        cell.props.isValid = true;\n        delete cell.props.errorText;\n      }\n      delete cell.props.editableValue;\n    }\n  });\n\n  row.isEditable = !row.isEditable;\n  row.isValid = true;\n  return row;\n};\n\nconst camelize = (s: string) =>\n  s\n    .toUpperCase()\n    .replace('-', '')\n    .replace('_', '');\nexport const toCamel = (s: string) => s.replace(/([-_][a-z])/gi, camelize);\n\n/**\n * @param {string} input - String to capitalize\n */\nexport function capitalize(input: string) {\n  return input[0].toUpperCase() + input.substring(1);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}