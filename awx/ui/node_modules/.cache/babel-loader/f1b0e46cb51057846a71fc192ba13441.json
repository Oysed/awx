{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Dropdown, KebabToggle } from '@patternfly/react-core/dist/esm/components/Dropdown';\nimport { DropdownItem } from '@patternfly/react-core/dist/esm/components/Dropdown';\nimport { DropdownSeparator } from '@patternfly/react-core/dist/esm/components/Dropdown';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\nimport { DropdownDirection, DropdownPosition } from '@patternfly/react-core/dist/esm/components/Dropdown';\nexport var ActionsColumn = /*#__PURE__*/function (_React$Component) {\n  _inherits(ActionsColumn, _React$Component);\n  var _super = _createSuper(ActionsColumn);\n  function ActionsColumn(props) {\n    var _this;\n    _classCallCheck(this, ActionsColumn);\n    _this = _super.call(this, props);\n    _this.toggleRef = React.createRef();\n    _this.onToggle = function (isOpen) {\n      _this.setState({\n        isOpen: isOpen\n      });\n    };\n    _this.onClick = function (event, onClick) {\n      var _this$props = _this.props,\n        rowData = _this$props.rowData,\n        extraData = _this$props.extraData;\n      // Only prevent default if onClick is provided.  This allows href support.\n      if (onClick) {\n        event.preventDefault();\n        // tslint:disable-next-line:no-unused-expression\n        onClick(event, extraData && extraData.rowIndex, rowData, extraData);\n      }\n    };\n    _this.state = {\n      isOpen: false\n    };\n    return _this;\n  }\n  _createClass(ActionsColumn, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var isOpen = this.state.isOpen;\n      var _this$props2 = this.props,\n        items = _this$props2.items,\n        children = _this$props2.children,\n        dropdownPosition = _this$props2.dropdownPosition,\n        dropdownDirection = _this$props2.dropdownDirection,\n        menuAppendTo = _this$props2.menuAppendTo,\n        isDisabled = _this$props2.isDisabled,\n        rowData = _this$props2.rowData,\n        actionsToggle = _this$props2.actionsToggle;\n      var actionsToggleClone = actionsToggle ? actionsToggle({\n        onToggle: this.onToggle,\n        isOpen: isOpen,\n        isDisabled: isDisabled\n      }) : React.createElement(KebabToggle, {\n        isDisabled: isDisabled,\n        onToggle: this.onToggle\n      });\n      return React.createElement(React.Fragment, null, items.filter(function (item) {\n        return item.isOutsideDropdown;\n      })\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      .map(function (_a, key) {\n        var title = _a.title,\n          itemKey = _a.itemKey,\n          _onClick = _a.onClick,\n          isOutsideDropdown = _a.isOutsideDropdown,\n          props = __rest(_a, [\"title\", \"itemKey\", \"onClick\", \"isOutsideDropdown\"]);\n        return typeof title === 'string' ? React.createElement(Button, Object.assign({\n          onClick: function onClick(event) {\n            return _this2.onClick(event, _onClick);\n          }\n        }, props, {\n          isDisabled: isDisabled,\n          key: itemKey || \"outside_dropdown_\".concat(key),\n          \"data-key\": itemKey || \"outside_dropdown_\".concat(key)\n        }), title) : React.cloneElement(title, Object.assign({\n          onClick: _onClick,\n          isDisabled: isDisabled\n        }, props));\n      }), React.createElement(Dropdown, Object.assign({\n        toggle: actionsToggleClone,\n        position: dropdownPosition,\n        direction: dropdownDirection,\n        menuAppendTo: menuAppendTo,\n        isOpen: isOpen,\n        dropdownItems: items.filter(function (item) {\n          return !item.isOutsideDropdown;\n        }).map(function (_a, key) {\n          var title = _a.title,\n            itemKey = _a.itemKey,\n            _onClick2 = _a.onClick,\n            isSeparator = _a.isSeparator,\n            props = __rest(_a, [\"title\", \"itemKey\", \"onClick\", \"isSeparator\"]);\n          return isSeparator ? React.createElement(DropdownSeparator, Object.assign({}, props, {\n            key: itemKey || key,\n            \"data-key\": itemKey || key\n          })) : React.createElement(DropdownItem, Object.assign({\n            component: \"button\",\n            onClick: function onClick(event) {\n              _this2.onClick(event, _onClick2);\n              _this2.onToggle(!isOpen);\n            }\n          }, props, {\n            key: itemKey || key,\n            \"data-key\": itemKey || key\n          }), title);\n        }),\n        isPlain: true\n      }, rowData && rowData.actionProps)), children);\n    }\n  }]);\n  return ActionsColumn;\n}(React.Component);\nActionsColumn.displayName = 'ActionsColumn';\nActionsColumn.defaultProps = {\n  children: null,\n  items: [],\n  dropdownPosition: DropdownPosition.right,\n  dropdownDirection: DropdownDirection.down,\n  menuAppendTo: 'inline',\n  rowData: {},\n  extraData: {}\n};","map":{"version":3,"names":["React","Dropdown","KebabToggle","DropdownItem","DropdownSeparator","Button","DropdownDirection","DropdownPosition","ActionsColumn","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","toggleRef","createRef","onToggle","isOpen","setState","onClick","event","_this$props","rowData","extraData","preventDefault","rowIndex","state","_createClass","key","value","render","_this2","_this$props2","items","children","dropdownPosition","dropdownDirection","menuAppendTo","isDisabled","actionsToggle","actionsToggleClone","createElement","Fragment","filter","item","isOutsideDropdown","map","_a","title","itemKey","__rest","Object","assign","concat","cloneElement","toggle","position","direction","dropdownItems","isSeparator","component","isPlain","actionProps","Component","displayName","defaultProps","right","down"],"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/ActionsColumn.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Dropdown, KebabToggle } from '@patternfly/react-core/dist/esm/components/Dropdown';\nimport { DropdownItem } from '@patternfly/react-core/dist/esm/components/Dropdown';\nimport { DropdownSeparator } from '@patternfly/react-core/dist/esm/components/Dropdown';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\n\nimport { DropdownDirection, DropdownPosition } from '@patternfly/react-core/dist/esm/components/Dropdown';\n\nimport { IAction, IExtraData, IRowData } from './TableTypes';\n\nexport interface CustomActionsToggleProps {\n  onToggle: (isOpen: boolean) => void;\n  isOpen: boolean;\n  isDisabled: boolean;\n}\n\nexport interface ActionsColumnProps {\n  children?: React.ReactNode;\n  items: IAction[];\n  isDisabled?: boolean;\n  menuAppendTo?: HTMLElement | (() => HTMLElement) | 'inline' | 'parent';\n  dropdownPosition?: DropdownPosition;\n  dropdownDirection?: DropdownDirection;\n  rowData?: IRowData;\n  extraData?: IExtraData;\n  actionsToggle?: (props: CustomActionsToggleProps) => React.ReactNode;\n}\n\nexport interface ActionsColumnState {\n  isOpen: boolean;\n}\n\nexport class ActionsColumn extends React.Component<ActionsColumnProps, ActionsColumnState> {\n  static displayName = 'ActionsColumn';\n  private toggleRef = React.createRef<HTMLButtonElement>();\n  static defaultProps = {\n    children: null as React.ReactNode,\n    items: [] as IAction[],\n    dropdownPosition: DropdownPosition.right,\n    dropdownDirection: DropdownDirection.down,\n    menuAppendTo: 'inline',\n    rowData: {} as IRowData,\n    extraData: {} as IExtraData\n  };\n  constructor(props: ActionsColumnProps) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  onToggle = (isOpen: boolean): void => {\n    this.setState({\n      isOpen\n    });\n  };\n\n  onClick = (\n    event: React.MouseEvent<any> | React.KeyboardEvent | MouseEvent,\n    onClick:\n      | ((event: React.MouseEvent, rowIndex: number | undefined, rowData: IRowData, extraData: IExtraData) => void)\n      | undefined\n  ): void => {\n    const { rowData, extraData } = this.props;\n    // Only prevent default if onClick is provided.  This allows href support.\n    if (onClick) {\n      event.preventDefault();\n      // tslint:disable-next-line:no-unused-expression\n      onClick(event as React.MouseEvent, extraData && extraData.rowIndex, rowData, extraData);\n    }\n  };\n\n  render() {\n    const { isOpen } = this.state;\n    const {\n      items,\n      children,\n      dropdownPosition,\n      dropdownDirection,\n      menuAppendTo,\n      isDisabled,\n      rowData,\n      actionsToggle\n    } = this.props;\n\n    const actionsToggleClone = actionsToggle ? (\n      actionsToggle({ onToggle: this.onToggle, isOpen, isDisabled })\n    ) : (\n      <KebabToggle isDisabled={isDisabled} onToggle={this.onToggle} />\n    );\n\n    return (\n      <React.Fragment>\n        {items\n          .filter(item => item.isOutsideDropdown)\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          .map(({ title, itemKey, onClick, isOutsideDropdown, ...props }, key) =>\n            typeof title === 'string' ? (\n              <Button\n                onClick={event => this.onClick(event, onClick)}\n                {...(props as any)}\n                isDisabled={isDisabled}\n                key={itemKey || `outside_dropdown_${key}`}\n                data-key={itemKey || `outside_dropdown_${key}`}\n              >\n                {title}\n              </Button>\n            ) : (\n              React.cloneElement(title as React.ReactElement, { onClick, isDisabled, ...props })\n            )\n          )}\n        <Dropdown\n          toggle={actionsToggleClone}\n          position={dropdownPosition}\n          direction={dropdownDirection}\n          menuAppendTo={menuAppendTo}\n          isOpen={isOpen}\n          dropdownItems={items\n            .filter(item => !item.isOutsideDropdown)\n            .map(({ title, itemKey, onClick, isSeparator, ...props }, key) =>\n              isSeparator ? (\n                <DropdownSeparator {...props} key={itemKey || key} data-key={itemKey || key} />\n              ) : (\n                <DropdownItem\n                  component=\"button\"\n                  onClick={event => {\n                    this.onClick(event, onClick);\n                    this.onToggle(!isOpen);\n                  }}\n                  {...props}\n                  key={itemKey || key}\n                  data-key={itemKey || key}\n                >\n                  {title}\n                </DropdownItem>\n              )\n            )}\n          isPlain\n          {...(rowData && rowData.actionProps)}\n        />\n        {children}\n      </React.Fragment>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}