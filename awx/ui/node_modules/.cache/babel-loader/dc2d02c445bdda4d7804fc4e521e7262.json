{"ast":null,"code":"import{i18n}from\"@lingui/core\";import React from'react';import{FormGroup,Title}from'@patternfly/react-core';import{FormCheckboxLayout,FormColumnLayout,FormFullWidthLayout,SubFormLayout}from'components/FormLayout';import{CheckboxField}from'components/FormField';import{CredentialType}from'types';import{CredentialField,GceFileUploadField}from'./CredentialFormFields';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TypeInputsSubForm(_ref){var credentialType=_ref.credentialType;var stringFields=credentialType.inputs.fields.filter(function(fieldOptions){return fieldOptions.type==='string'||fieldOptions.choices;});var booleanFields=credentialType.inputs.fields.filter(function(fieldOptions){return fieldOptions.type==='boolean';});return/*#__PURE__*/_jsxs(SubFormLayout,{children:[/*#__PURE__*/_jsx(Title,{size:\"md\",headingLevel:\"h4\",children:/*i18n*/i18n._(\"Type Details\")}),/*#__PURE__*/_jsxs(FormColumnLayout,{children:[credentialType.namespace==='gce'&&/*#__PURE__*/_jsx(GceFileUploadField,{}),stringFields.map(function(fieldOptions){return fieldOptions.multiline?/*#__PURE__*/_jsx(FormFullWidthLayout,{children:/*#__PURE__*/_jsx(CredentialField,{credentialType:credentialType,fieldOptions:fieldOptions})},fieldOptions.id):/*#__PURE__*/_jsx(CredentialField,{credentialType:credentialType,fieldOptions:fieldOptions},fieldOptions.id);}),booleanFields.length>0&&/*#__PURE__*/_jsx(FormFullWidthLayout,{children:/*#__PURE__*/_jsx(FormGroup,{fieldId:\"credential-checkboxes\",label:/*i18n*/i18n._(\"Options\"),children:/*#__PURE__*/_jsx(FormCheckboxLayout,{children:booleanFields.map(function(fieldOptions){return/*#__PURE__*/_jsx(CheckboxField,{id:\"credential-\".concat(fieldOptions.id),name:\"inputs.\".concat(fieldOptions.id),label:fieldOptions.label,tooltip:fieldOptions.help_text},fieldOptions.id);})})})})]})]});}TypeInputsSubForm.defaultProps={};export default TypeInputsSubForm;","map":{"version":3,"names":["React","FormGroup","Title","FormCheckboxLayout","FormColumnLayout","FormFullWidthLayout","SubFormLayout","CheckboxField","CredentialType","CredentialField","GceFileUploadField","jsx","_jsx","jsxs","_jsxs","TypeInputsSubForm","_ref","credentialType","stringFields","inputs","fields","filter","fieldOptions","type","choices","booleanFields","children","size","headingLevel","i18n","_","namespace","map","multiline","id","length","fieldId","label","concat","name","tooltip","help_text","defaultProps"],"sources":["/awx_devel/awx/ui/src/screens/Credential/shared/TypeInputsSubForm.js"],"sourcesContent":["import React from 'react';\n\nimport { t } from '@lingui/macro';\nimport { FormGroup, Title } from '@patternfly/react-core';\nimport {\n  FormCheckboxLayout,\n  FormColumnLayout,\n  FormFullWidthLayout,\n  SubFormLayout,\n} from 'components/FormLayout';\nimport { CheckboxField } from 'components/FormField';\nimport { CredentialType } from 'types';\nimport { CredentialField, GceFileUploadField } from './CredentialFormFields';\n\nfunction TypeInputsSubForm({ credentialType }) {\n  const stringFields = credentialType.inputs.fields.filter(\n    (fieldOptions) => fieldOptions.type === 'string' || fieldOptions.choices\n  );\n  const booleanFields = credentialType.inputs.fields.filter(\n    (fieldOptions) => fieldOptions.type === 'boolean'\n  );\n  return (\n    <SubFormLayout>\n      <Title size=\"md\" headingLevel=\"h4\">\n        {t`Type Details`}\n      </Title>\n      <FormColumnLayout>\n        {credentialType.namespace === 'gce' && <GceFileUploadField />}\n        {stringFields.map((fieldOptions) =>\n          fieldOptions.multiline ? (\n            <FormFullWidthLayout key={fieldOptions.id}>\n              <CredentialField\n                credentialType={credentialType}\n                fieldOptions={fieldOptions}\n              />\n            </FormFullWidthLayout>\n          ) : (\n            <CredentialField\n              key={fieldOptions.id}\n              credentialType={credentialType}\n              fieldOptions={fieldOptions}\n            />\n          )\n        )}\n        {booleanFields.length > 0 && (\n          <FormFullWidthLayout>\n            <FormGroup fieldId=\"credential-checkboxes\" label={t`Options`}>\n              <FormCheckboxLayout>\n                {booleanFields.map((fieldOptions) => (\n                  <CheckboxField\n                    id={`credential-${fieldOptions.id}`}\n                    key={fieldOptions.id}\n                    name={`inputs.${fieldOptions.id}`}\n                    label={fieldOptions.label}\n                    tooltip={fieldOptions.help_text}\n                  />\n                ))}\n              </FormCheckboxLayout>\n            </FormGroup>\n          </FormFullWidthLayout>\n        )}\n      </FormColumnLayout>\n    </SubFormLayout>\n  );\n}\n\nTypeInputsSubForm.propTypes = {\n  credentialType: CredentialType.isRequired,\n};\n\nTypeInputsSubForm.defaultProps = {};\n\nexport default TypeInputsSubForm;\n"],"mappings":"+BAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAGzB,OAASC,SAAS,CAAEC,KAAK,KAAQ,wBAAwB,CACzD,OACEC,kBAAkB,CAClBC,gBAAgB,CAChBC,mBAAmB,CACnBC,aAAa,KACR,uBAAuB,CAC9B,OAASC,aAAa,KAAQ,sBAAsB,CACpD,OAASC,cAAc,KAAQ,OAAO,CACtC,OAASC,eAAe,CAAEC,kBAAkB,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE7E,QAAS,CAAAC,iBAAiBA,CAAAC,IAAA,CAAqB,IAAlB,CAAAC,cAAc,CAAAD,IAAA,CAAdC,cAAc,CACzC,GAAM,CAAAC,YAAY,CAAGD,cAAc,CAACE,MAAM,CAACC,MAAM,CAACC,MAAM,CACtD,SAACC,YAAY,QAAK,CAAAA,YAAY,CAACC,IAAI,GAAK,QAAQ,EAAID,YAAY,CAACE,OAAO,EAC1E,CAAC,CACD,GAAM,CAAAC,aAAa,CAAGR,cAAc,CAACE,MAAM,CAACC,MAAM,CAACC,MAAM,CACvD,SAACC,YAAY,QAAK,CAAAA,YAAY,CAACC,IAAI,GAAK,SAAS,EACnD,CAAC,CACD,mBACET,KAAA,CAACR,aAAa,EAAAoB,QAAA,eACZd,IAAA,CAACV,KAAK,EAACyB,IAAI,CAAC,IAAI,CAACC,YAAY,CAAC,IAAI,CAAAF,QAAA,SAC/BG,IAAA,CAAAC,CAAA,eAAc,CAAC,CACX,CAAC,cACRhB,KAAA,CAACV,gBAAgB,EAAAsB,QAAA,EACdT,cAAc,CAACc,SAAS,GAAK,KAAK,eAAInB,IAAA,CAACF,kBAAkB,GAAE,CAAC,CAC5DQ,YAAY,CAACc,GAAG,CAAC,SAACV,YAAY,QAC7B,CAAAA,YAAY,CAACW,SAAS,cACpBrB,IAAA,CAACP,mBAAmB,EAAAqB,QAAA,cAClBd,IAAA,CAACH,eAAe,EACdQ,cAAc,CAAEA,cAAe,CAC/BK,YAAY,CAAEA,YAAa,CAC5B,CAAC,EAJsBA,YAAY,CAACY,EAKlB,CAAC,cAEtBtB,IAAA,CAACH,eAAe,EAEdQ,cAAc,CAAEA,cAAe,CAC/BK,YAAY,CAAEA,YAAa,EAFtBA,YAAY,CAACY,EAGnB,CACF,EACH,CAAC,CACAT,aAAa,CAACU,MAAM,CAAG,CAAC,eACvBvB,IAAA,CAACP,mBAAmB,EAAAqB,QAAA,cAClBd,IAAA,CAACX,SAAS,EAACmC,OAAO,CAAC,uBAAuB,CAACC,KAAK,SAAER,IAAA,CAAAC,CAAA,UAAS,CAAE,CAAAJ,QAAA,cAC3Dd,IAAA,CAACT,kBAAkB,EAAAuB,QAAA,CAChBD,aAAa,CAACO,GAAG,CAAC,SAACV,YAAY,qBAC9BV,IAAA,CAACL,aAAa,EACZ2B,EAAE,eAAAI,MAAA,CAAgBhB,YAAY,CAACY,EAAE,CAAG,CAEpCK,IAAI,WAAAD,MAAA,CAAYhB,YAAY,CAACY,EAAE,CAAG,CAClCG,KAAK,CAAEf,YAAY,CAACe,KAAM,CAC1BG,OAAO,CAAElB,YAAY,CAACmB,SAAU,EAH3BnB,YAAY,CAACY,EAInB,CAAC,EACH,CAAC,CACgB,CAAC,CACZ,CAAC,CACO,CACtB,EACe,CAAC,EACN,CAAC,CAEpB,CAMAnB,iBAAiB,CAAC2B,YAAY,CAAG,CAAC,CAAC,CAEnC,cAAe,CAAA3B,iBAAiB"},"metadata":{},"sourceType":"module"}