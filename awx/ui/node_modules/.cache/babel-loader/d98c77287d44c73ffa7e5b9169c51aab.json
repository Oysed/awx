{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\n/**\n * header.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport * as React from 'react';\nimport { ProviderContext } from './provider';\nimport { HeaderRow } from './header-row';\nvar BaseHeader = /*#__PURE__*/function (_React$Component) {\n  _inherits(BaseHeader, _React$Component);\n  var _super = _createSuper(BaseHeader);\n  function BaseHeader() {\n    _classCallCheck(this, BaseHeader);\n    return _super.apply(this, arguments);\n  }\n  _createClass(BaseHeader, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n        children = _a.children,\n        headerRows = _a.headerRows,\n        onRow = _a.onRow,\n        renderers = _a.renderers,\n        columns = _a.columns,\n        props = __rest(_a, [\"children\", \"headerRows\", \"onRow\", \"renderers\", \"columns\"]);\n      // If headerRows aren't passed, default to bodyColumns as header rows\n      return React.createElement(renderers.header.wrapper, props, [(headerRows || [columns]).map(function (rowData, rowIndex) {\n        return React.createElement(HeaderRow, {\n          key: \"\".concat(rowIndex, \"-header-row\"),\n          renderers: renderers.header,\n          onRow: onRow,\n          rowData: rowData,\n          rowIndex: rowIndex\n        });\n      })].concat(children));\n    }\n  }]);\n  return BaseHeader;\n}(React.Component);\nexport var Header = function Header(props) {\n  return React.createElement(ProviderContext.Consumer, null, function (_ref) {\n    var columns = _ref.columns,\n      renderers = _ref.renderers;\n    return React.createElement(BaseHeader, Object.assign({\n      columns: columns,\n      renderers: renderers\n    }, props));\n  });\n};","map":{"version":3,"names":["React","ProviderContext","HeaderRow","BaseHeader","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","render","_a","props","children","headerRows","onRow","renderers","columns","__rest","createElement","header","wrapper","map","rowData","rowIndex","concat","Component","Header","Consumer","_ref","Object","assign"],"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/base/header.tsx"],"sourcesContent":["/**\n * header.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport * as React from 'react';\nimport { createElementType, RowsType, ColumnsType, RenderersTypes } from './types';\nimport { ProviderContext } from './provider';\nimport { HeaderRow } from './header-row';\n\nexport interface HeaderProps {\n  headerRows?: RowsType[] | ColumnsType; // array of rows arrays\n  children?: React.ReactNode;\n  columns?: ColumnsType;\n  renderers?: RenderersTypes['renderers'];\n  onRow?: Function;\n  className?: string;\n}\n\nclass BaseHeader extends React.Component<HeaderProps, {}> {\n  render() {\n    const { children, headerRows, onRow, renderers, columns, ...props } = this.props;\n\n    // If headerRows aren't passed, default to bodyColumns as header rows\n    return React.createElement(\n      renderers.header.wrapper as createElementType,\n      props,\n      [\n        (headerRows || ([columns] as ColumnsType)).map((rowData, rowIndex) =>\n          React.createElement(HeaderRow, {\n            key: `${rowIndex}-header-row`,\n            renderers: renderers.header,\n            onRow,\n            rowData,\n            rowIndex\n          })\n        )\n      ].concat(children as any)\n    );\n  }\n}\n\nexport const Header = (props: HeaderProps) => (\n  <ProviderContext.Consumer>\n    {({ columns, renderers }) => <BaseHeader columns={columns} renderers={renderers} {...props} />}\n  </ProviderContext.Consumer>\n);\n"],"mappings":";;;;;AAAA;;;;;;AAMA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,eAAe,QAAQ,YAAY;AAC5C,SAASC,SAAS,QAAQ,cAAc;AAAC,IAWnCC,UAAW,0BAAAC,gBAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EAAA,SAAAA,WAAA;IAAAK,eAAA,OAAAL,UAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,UAAA;IAAAS,GAAA;IAAAC,KAAA,EACf,SAAAC,OAAA,EAAM;MACE,IAAAC,EAAA,GAAgE,IAAI,CAACC,KAAK;QAAxEC,QAAQ,GAAuCF,EAAyB,CAAxEE,QAAQ;QAAEC,UAAU,GAA2BH,EAAyB,CAA9DG,UAAU;QAAEC,KAAK,GAAoBJ,EAAyB,CAAlDI,KAAK;QAAEC,SAAS,GAASL,EAAyB,CAA3CK,SAAS;QAAEC,OAAO,GAAAN,EAAyB,CAAhCM,OAAO;QAAKL,KAAK,GAAAM,MAAA,CAAAP,EAAA,EAA3D,2DAA6D,CAAa;MAEhF;MACA,OAAOf,KAAK,CAACuB,aAAa,CACxBH,SAAS,CAACI,MAAM,CAACC,OAA4B,EAC7CT,KAAK,EACL,CACE,CAACE,UAAU,IAAK,CAACG,OAAO,CAAiB,EAAEK,GAAG,CAAC,UAACC,OAAO,EAAEC,QAAQ;QAAA,OAC/D5B,KAAK,CAACuB,aAAa,CAACrB,SAAS,EAAE;UAC7BU,GAAG,KAAAiB,MAAA,CAAKD,QAAQ,gBAAa;UAC7BR,SAAS,EAAEA,SAAS,CAACI,MAAM;UAC3BL,KAAK,EAALA,KAAK;UACLQ,OAAO,EAAPA,OAAO;UACPC,QAAQ,EAARA;SACD,CAAC;MAAA,EACH,CACF,CAACC,MAAM,CAACZ,QAAe,CAAC,CAC1B;IACH;EAAC;EAAA,OAAAd,UAAA;AAAA,EApBsBH,KAAK,CAAC8B,SAA0B;AAuBzD,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAIf,KAAkB;EAAA,OACvChB,KAAA,CAAAuB,aAAA,CAACtB,eAAe,CAAC+B,QAAQ,QACtB,UAAAC,IAAA;IAAA,IAAGZ,OAAO,GAAAY,IAAA,CAAPZ,OAAO;MAAED,SAAS,GAAAa,IAAA,CAATb,SAAS;IAAA,OAAOpB,KAAA,CAAAuB,aAAA,CAACpB,UAAU,EAAA+B,MAAA,CAAAC,MAAA;MAACd,OAAO,EAAEA,OAAO;MAAED,SAAS,EAAEA;IAAS,GAAMJ,KAAK,EAAI;EAAA,EACrE;AAAA,CAC5B"},"metadata":{},"sourceType":"module"}