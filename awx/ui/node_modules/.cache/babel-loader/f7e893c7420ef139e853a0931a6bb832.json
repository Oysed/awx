{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{useField}from'formik';import{FormGroup,InputGroup}from'@patternfly/react-core';import Popover from'../Popover';import PasswordInput from'./PasswordInput';import{jsx as _jsx}from\"react/jsx-runtime\";function PasswordField(props){var id=props.id,name=props.name,label=props.label,validate=props.validate,isRequired=props.isRequired,helperText=props.helperText;var _useField=useField({name:name,validate:validate}),_useField2=_slicedToArray(_useField,2),meta=_useField2[1];var isValid=!(meta.touched&&meta.error);return/*#__PURE__*/_jsx(FormGroup,{fieldId:id,helperTextInvalid:meta.error,isRequired:isRequired,validated:isValid?'default':'error',label:label,labelIcon:helperText&&/*#__PURE__*/_jsx(Popover,{content:helperText}),children:/*#__PURE__*/_jsx(InputGroup,{children:/*#__PURE__*/_jsx(PasswordInput,_objectSpread({},props))})});}PasswordField.defaultProps={validate:function validate(){},isRequired:false,isDisabled:false};export default PasswordField;","map":{"version":3,"names":["React","useField","FormGroup","InputGroup","Popover","PasswordInput","jsx","_jsx","PasswordField","props","id","name","label","validate","isRequired","helperText","_useField","_useField2","_slicedToArray","meta","isValid","touched","error","fieldId","helperTextInvalid","validated","labelIcon","content","children","_objectSpread","defaultProps","isDisabled"],"sources":["/awx_devel/awx/ui/src/components/FormField/PasswordField.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from 'formik';\nimport { FormGroup, InputGroup } from '@patternfly/react-core';\nimport Popover from '../Popover';\nimport PasswordInput from './PasswordInput';\n\nfunction PasswordField(props) {\n  const { id, name, label, validate, isRequired, helperText } = props;\n  const [, meta] = useField({ name, validate });\n  const isValid = !(meta.touched && meta.error);\n\n  return (\n    <FormGroup\n      fieldId={id}\n      helperTextInvalid={meta.error}\n      isRequired={isRequired}\n      validated={isValid ? 'default' : 'error'}\n      label={label}\n      labelIcon={helperText && <Popover content={helperText} />}\n    >\n      <InputGroup>\n        <PasswordInput {...props} />\n      </InputGroup>\n    </FormGroup>\n  );\n}\n\nPasswordField.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  validate: PropTypes.func,\n  isRequired: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n};\n\nPasswordField.defaultProps = {\n  validate: () => {},\n  isRequired: false,\n  isDisabled: false,\n};\n\nexport default PasswordField;\n"],"mappings":"6MAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,OAASC,QAAQ,KAAQ,QAAQ,CACjC,OAASC,SAAS,CAAEC,UAAU,KAAQ,wBAAwB,CAC9D,MAAO,CAAAC,OAAO,KAAM,YAAY,CAChC,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5C,QAAS,CAAAC,aAAaA,CAACC,KAAK,CAAE,CAC5B,GAAQ,CAAAC,EAAE,CAAoDD,KAAK,CAA3DC,EAAE,CAAEC,IAAI,CAA8CF,KAAK,CAAvDE,IAAI,CAAEC,KAAK,CAAuCH,KAAK,CAAjDG,KAAK,CAAEC,QAAQ,CAA6BJ,KAAK,CAA1CI,QAAQ,CAAEC,UAAU,CAAiBL,KAAK,CAAhCK,UAAU,CAAEC,UAAU,CAAKN,KAAK,CAApBM,UAAU,CACzD,IAAAC,SAAA,CAAiBf,QAAQ,CAAC,CAAEU,IAAI,CAAJA,IAAI,CAAEE,QAAQ,CAARA,QAAS,CAAC,CAAC,CAAAI,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAApCG,IAAI,CAAAF,UAAA,IACb,GAAM,CAAAG,OAAO,CAAG,EAAED,IAAI,CAACE,OAAO,EAAIF,IAAI,CAACG,KAAK,CAAC,CAE7C,mBACEf,IAAA,CAACL,SAAS,EACRqB,OAAO,CAAEb,EAAG,CACZc,iBAAiB,CAAEL,IAAI,CAACG,KAAM,CAC9BR,UAAU,CAAEA,UAAW,CACvBW,SAAS,CAAEL,OAAO,CAAG,SAAS,CAAG,OAAQ,CACzCR,KAAK,CAAEA,KAAM,CACbc,SAAS,CAAEX,UAAU,eAAIR,IAAA,CAACH,OAAO,EAACuB,OAAO,CAAEZ,UAAW,CAAE,CAAE,CAAAa,QAAA,cAE1DrB,IAAA,CAACJ,UAAU,EAAAyB,QAAA,cACTrB,IAAA,CAACF,aAAa,CAAAwB,aAAA,IAAKpB,KAAK,CAAG,CAAC,CAClB,CAAC,CACJ,CAAC,CAEhB,CAWAD,aAAa,CAACsB,YAAY,CAAG,CAC3BjB,QAAQ,CAAE,SAAAA,SAAA,CAAM,CAAC,CAAC,CAClBC,UAAU,CAAE,KAAK,CACjBiB,UAAU,CAAE,KACd,CAAC,CAED,cAAe,CAAAvB,aAAa"},"metadata":{},"sourceType":"module"}