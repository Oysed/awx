{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleDownIcon from '@patternfly/react-icons/dist/esm/icons/angle-down-icon';\nimport { css } from '@patternfly/react-styles';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nexport var CollapseColumn = function CollapseColumn(_a) {\n  var _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$children = _a.children,\n    children = _a$children === void 0 ? null : _a$children,\n    isOpen = _a.isOpen,\n    onToggle = _a.onToggle,\n    props = __rest(_a, [\"className\", \"children\", \"isOpen\", \"onToggle\"]);\n  return React.createElement(React.Fragment, null, isOpen !== undefined && React.createElement(Button, Object.assign({\n    className: css(className, isOpen && styles.modifiers.expanded)\n  }, props, {\n    variant: \"plain\",\n    \"aria-label\": props['aria-label'] || 'Details',\n    onClick: onToggle,\n    \"aria-expanded\": isOpen\n  }), React.createElement(\"div\", {\n    className: css(styles.tableToggleIcon)\n  }, React.createElement(AngleDownIcon, null))), children);\n};\nCollapseColumn.displayName = 'CollapseColumn';","map":{"version":3,"names":["React","AngleDownIcon","css","Button","styles","CollapseColumn","_a","className","_a$className","_a$children","children","isOpen","onToggle","props","__rest","createElement","Fragment","undefined","Object","assign","modifiers","expanded","variant","onClick","tableToggleIcon","displayName"],"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/CollapseColumn.tsx"],"sourcesContent":["import * as React from 'react';\nimport AngleDownIcon from '@patternfly/react-icons/dist/esm/icons/angle-down-icon';\nimport { css } from '@patternfly/react-styles';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\n\nexport interface CollapseColumnProps {\n  id?: string;\n  className?: string;\n  children?: React.ReactNode;\n  onToggle?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  isOpen?: boolean;\n  'aria-label'?: string;\n}\n\nexport const CollapseColumn: React.FunctionComponent<CollapseColumnProps> = ({\n  className = '' as string,\n  children = null as React.ReactNode,\n  isOpen,\n  onToggle,\n  ...props\n}: CollapseColumnProps) => (\n  <React.Fragment>\n    {isOpen !== undefined && (\n      <Button\n        className={css(className, isOpen && styles.modifiers.expanded)}\n        {...props}\n        variant=\"plain\"\n        aria-label={props['aria-label'] || 'Details'}\n        onClick={onToggle}\n        aria-expanded={isOpen}\n      >\n        <div className={css(styles.tableToggleIcon)}>\n          <AngleDownIcon />\n        </div>\n      </Button>\n    )}\n    {children}\n  </React.Fragment>\n);\nCollapseColumn.displayName = 'CollapseColumn';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,aAAa,MAAM,wDAAwD;AAClF,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,SAASC,MAAM,QAAQ,mDAAmD;AAC1E,OAAOC,MAAM,MAAM,qDAAqD;AAWxE,OAAO,IAAMC,cAAc,GAAiD,SAA/DA,cAAcA,CAAkDC,EAMvD,EAAI;qBAFhBA,EAEY,CALpBC,SAAS;IAATA,SAAS,GAAAC,YAAA,cAAG,EAAY,GAAAA,YAAA;IAAAC,WAAA,GAGhBH,EAEY,CAJpBI,QAAQ;IAARA,QAAQ,GAAAD,WAAA,cAAG,IAAuB,GAAAA,WAAA;IAClCE,MAAM,GACEL,EAEY,CAHpBK,MAAM;IACNC,QAAQ,GAAAN,EAEY,CAFpBM,QAAQ;IACLC,KAAK,GAAAC,MAAA,CAAAR,EAAA,EALmE,+CAM5E,CADS;EACiB,OACzBN,KAAA,CAAAe,aAAA,CAACf,KAAK,CAACgB,QAAQ,QACZL,MAAM,KAAKM,SAAS,IACnBjB,KAAA,CAAAe,aAAA,CAACZ,MAAM,EAAAe,MAAA,CAAAC,MAAA;IACLZ,SAAS,EAAEL,GAAG,CAACK,SAAS,EAAEI,MAAM,IAAIP,MAAM,CAACgB,SAAS,CAACC,QAAQ;EAAC,GAC1DR,KAAK;IACTS,OAAO,EAAC,OAAO;IAAA,cACHT,KAAK,CAAC,YAAY,CAAC,IAAI,SAAS;IAC5CU,OAAO,EAAEX,QAAQ;IAAA,iBACFD;EAAM,IAErBX,KAAA,CAAAe,aAAA;IAAKR,SAAS,EAAEL,GAAG,CAACE,MAAM,CAACoB,eAAe;EAAC,GACzCxB,KAAA,CAAAe,aAAA,CAACd,aAAa,OAAG,CACb,CAET,EACAS,QAAQ,CACM;CAClB;AACDL,cAAc,CAACoB,WAAW,GAAG,gBAAgB"},"metadata":{},"sourceType":"module"}