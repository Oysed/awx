{"ast":null,"code":"import _classCallCheck from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";var NotificationsMixin=function NotificationsMixin(parent){return/*#__PURE__*/function(_parent){_inherits(_class,_parent);var _super=_createSuper(_class);function _class(){_classCallCheck(this,_class);return _super.apply(this,arguments);}_createClass(_class,[{key:\"readOptionsNotificationTemplates\",value:function readOptionsNotificationTemplates(id){return this.http.options(\"\".concat(this.baseUrl).concat(id,\"/notification_templates/\"));}},{key:\"readNotificationTemplates\",value:function readNotificationTemplates(id,params){return this.http.get(\"\".concat(this.baseUrl).concat(id,\"/notification_templates/\"),params);}},{key:\"readNotificationTemplatesStarted\",value:function readNotificationTemplatesStarted(id,params){return this.http.get(\"\".concat(this.baseUrl).concat(id,\"/notification_templates_started/\"),{params:params});}},{key:\"readNotificationTemplatesSuccess\",value:function readNotificationTemplatesSuccess(id,params){return this.http.get(\"\".concat(this.baseUrl).concat(id,\"/notification_templates_success/\"),{params:params});}},{key:\"readNotificationTemplatesError\",value:function readNotificationTemplatesError(id,params){return this.http.get(\"\".concat(this.baseUrl).concat(id,\"/notification_templates_error/\"),{params:params});}},{key:\"associateNotificationTemplatesStarted\",value:function associateNotificationTemplatesStarted(resourceId,notificationId){return this.http.post(\"\".concat(this.baseUrl).concat(resourceId,\"/notification_templates_started/\"),{id:notificationId});}},{key:\"disassociateNotificationTemplatesStarted\",value:function disassociateNotificationTemplatesStarted(resourceId,notificationId){return this.http.post(\"\".concat(this.baseUrl).concat(resourceId,\"/notification_templates_started/\"),{id:notificationId,disassociate:true});}},{key:\"associateNotificationTemplatesSuccess\",value:function associateNotificationTemplatesSuccess(resourceId,notificationId){return this.http.post(\"\".concat(this.baseUrl).concat(resourceId,\"/notification_templates_success/\"),{id:notificationId});}},{key:\"disassociateNotificationTemplatesSuccess\",value:function disassociateNotificationTemplatesSuccess(resourceId,notificationId){return this.http.post(\"\".concat(this.baseUrl).concat(resourceId,\"/notification_templates_success/\"),{id:notificationId,disassociate:true});}},{key:\"associateNotificationTemplatesError\",value:function associateNotificationTemplatesError(resourceId,notificationId){return this.http.post(\"\".concat(this.baseUrl).concat(resourceId,\"/notification_templates_error/\"),{id:notificationId});}},{key:\"disassociateNotificationTemplatesError\",value:function disassociateNotificationTemplatesError(resourceId,notificationId){return this.http.post(\"\".concat(this.baseUrl).concat(resourceId,\"/notification_templates_error/\"),{id:notificationId,disassociate:true});}/**\n     * This is a helper method meant to simplify setting the \"on\" status of\n     * a related notification.\n     *\n     * @param[resourceId] - id of the base resource\n     * @param[notificationId] - id of the notification\n     * @param[notificationType] - the type of notification, options are \"success\" and \"error\"\n     */},{key:\"associateNotificationTemplate\",value:function associateNotificationTemplate(resourceId,notificationId,notificationType){if(notificationType==='approvals'){return this.associateNotificationTemplatesApprovals(resourceId,notificationId);}if(notificationType==='started'){return this.associateNotificationTemplatesStarted(resourceId,notificationId);}if(notificationType==='success'){return this.associateNotificationTemplatesSuccess(resourceId,notificationId);}if(notificationType==='error'){return this.associateNotificationTemplatesError(resourceId,notificationId);}throw new Error(\"Unsupported notificationType for association: \".concat(notificationType));}/**\n     * This is a helper method meant to simplify setting the \"off\" status of\n     * a related notification.\n     *\n     * @param[resourceId] - id of the base resource\n     * @param[notificationId] - id of the notification\n     * @param[notificationType] - the type of notification, options are \"success\" and \"error\"\n     */},{key:\"disassociateNotificationTemplate\",value:function disassociateNotificationTemplate(resourceId,notificationId,notificationType){if(notificationType==='approvals'){return this.disassociateNotificationTemplatesApprovals(resourceId,notificationId);}if(notificationType==='started'){return this.disassociateNotificationTemplatesStarted(resourceId,notificationId);}if(notificationType==='success'){return this.disassociateNotificationTemplatesSuccess(resourceId,notificationId);}if(notificationType==='error'){return this.disassociateNotificationTemplatesError(resourceId,notificationId);}throw new Error(\"Unsupported notificationType for disassociation: \".concat(notificationType));}}]);return _class;}(parent);};export default NotificationsMixin;","map":{"version":3,"names":["NotificationsMixin","parent","_parent","_inherits","_class","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","readOptionsNotificationTemplates","id","http","options","concat","baseUrl","readNotificationTemplates","params","get","readNotificationTemplatesStarted","readNotificationTemplatesSuccess","readNotificationTemplatesError","associateNotificationTemplatesStarted","resourceId","notificationId","post","disassociateNotificationTemplatesStarted","disassociate","associateNotificationTemplatesSuccess","disassociateNotificationTemplatesSuccess","associateNotificationTemplatesError","disassociateNotificationTemplatesError","associateNotificationTemplate","notificationType","associateNotificationTemplatesApprovals","Error","disassociateNotificationTemplate","disassociateNotificationTemplatesApprovals"],"sources":["/awx_devel/awx/ui/src/api/mixins/Notifications.mixin.js"],"sourcesContent":["const NotificationsMixin = (parent) =>\n  class extends parent {\n    readOptionsNotificationTemplates(id) {\n      return this.http.options(`${this.baseUrl}${id}/notification_templates/`);\n    }\n\n    readNotificationTemplates(id, params) {\n      return this.http.get(\n        `${this.baseUrl}${id}/notification_templates/`,\n        params\n      );\n    }\n\n    readNotificationTemplatesStarted(id, params) {\n      return this.http.get(\n        `${this.baseUrl}${id}/notification_templates_started/`,\n        { params }\n      );\n    }\n\n    readNotificationTemplatesSuccess(id, params) {\n      return this.http.get(\n        `${this.baseUrl}${id}/notification_templates_success/`,\n        { params }\n      );\n    }\n\n    readNotificationTemplatesError(id, params) {\n      return this.http.get(\n        `${this.baseUrl}${id}/notification_templates_error/`,\n        { params }\n      );\n    }\n\n    associateNotificationTemplatesStarted(resourceId, notificationId) {\n      return this.http.post(\n        `${this.baseUrl}${resourceId}/notification_templates_started/`,\n        { id: notificationId }\n      );\n    }\n\n    disassociateNotificationTemplatesStarted(resourceId, notificationId) {\n      return this.http.post(\n        `${this.baseUrl}${resourceId}/notification_templates_started/`,\n        { id: notificationId, disassociate: true }\n      );\n    }\n\n    associateNotificationTemplatesSuccess(resourceId, notificationId) {\n      return this.http.post(\n        `${this.baseUrl}${resourceId}/notification_templates_success/`,\n        { id: notificationId }\n      );\n    }\n\n    disassociateNotificationTemplatesSuccess(resourceId, notificationId) {\n      return this.http.post(\n        `${this.baseUrl}${resourceId}/notification_templates_success/`,\n        { id: notificationId, disassociate: true }\n      );\n    }\n\n    associateNotificationTemplatesError(resourceId, notificationId) {\n      return this.http.post(\n        `${this.baseUrl}${resourceId}/notification_templates_error/`,\n        { id: notificationId }\n      );\n    }\n\n    disassociateNotificationTemplatesError(resourceId, notificationId) {\n      return this.http.post(\n        `${this.baseUrl}${resourceId}/notification_templates_error/`,\n        { id: notificationId, disassociate: true }\n      );\n    }\n\n    /**\n     * This is a helper method meant to simplify setting the \"on\" status of\n     * a related notification.\n     *\n     * @param[resourceId] - id of the base resource\n     * @param[notificationId] - id of the notification\n     * @param[notificationType] - the type of notification, options are \"success\" and \"error\"\n     */\n    associateNotificationTemplate(\n      resourceId,\n      notificationId,\n      notificationType\n    ) {\n      if (notificationType === 'approvals') {\n        return this.associateNotificationTemplatesApprovals(\n          resourceId,\n          notificationId\n        );\n      }\n\n      if (notificationType === 'started') {\n        return this.associateNotificationTemplatesStarted(\n          resourceId,\n          notificationId\n        );\n      }\n\n      if (notificationType === 'success') {\n        return this.associateNotificationTemplatesSuccess(\n          resourceId,\n          notificationId\n        );\n      }\n\n      if (notificationType === 'error') {\n        return this.associateNotificationTemplatesError(\n          resourceId,\n          notificationId\n        );\n      }\n\n      throw new Error(\n        `Unsupported notificationType for association: ${notificationType}`\n      );\n    }\n\n    /**\n     * This is a helper method meant to simplify setting the \"off\" status of\n     * a related notification.\n     *\n     * @param[resourceId] - id of the base resource\n     * @param[notificationId] - id of the notification\n     * @param[notificationType] - the type of notification, options are \"success\" and \"error\"\n     */\n    disassociateNotificationTemplate(\n      resourceId,\n      notificationId,\n      notificationType\n    ) {\n      if (notificationType === 'approvals') {\n        return this.disassociateNotificationTemplatesApprovals(\n          resourceId,\n          notificationId\n        );\n      }\n\n      if (notificationType === 'started') {\n        return this.disassociateNotificationTemplatesStarted(\n          resourceId,\n          notificationId\n        );\n      }\n\n      if (notificationType === 'success') {\n        return this.disassociateNotificationTemplatesSuccess(\n          resourceId,\n          notificationId\n        );\n      }\n\n      if (notificationType === 'error') {\n        return this.disassociateNotificationTemplatesError(\n          resourceId,\n          notificationId\n        );\n      }\n\n      throw new Error(\n        `Unsupported notificationType for disassociation: ${notificationType}`\n      );\n    }\n  };\n\nexport default NotificationsMixin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}