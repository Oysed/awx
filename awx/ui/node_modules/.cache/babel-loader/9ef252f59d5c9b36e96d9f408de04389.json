{"ast":null,"code":"import * as React from 'react';\nimport { HeaderCellInfoWrapper } from '../../HeaderCellInfoWrapper';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nexport var info = function info(_ref) {\n  var tooltip = _ref.tooltip,\n    tooltipProps = _ref.tooltipProps,\n    popover = _ref.popover,\n    popoverProps = _ref.popoverProps,\n    className = _ref.className,\n    ariaLabel = _ref.ariaLabel;\n  var infoObj = function infoObj(value) {\n    return {\n      className: styles.modifiers.help,\n      children: tooltip ? React.createElement(HeaderCellInfoWrapper, {\n        variant: \"tooltip\",\n        info: tooltip,\n        tooltipProps: tooltipProps,\n        ariaLabel: ariaLabel,\n        className: className\n      }, value) : React.createElement(HeaderCellInfoWrapper, {\n        variant: \"popover\",\n        info: popover,\n        popoverProps: popoverProps,\n        ariaLabel: ariaLabel,\n        className: className\n      }, value)\n    };\n  };\n  return infoObj;\n};","map":{"version":3,"names":["React","HeaderCellInfoWrapper","styles","info","_ref","tooltip","tooltipProps","popover","popoverProps","className","ariaLabel","infoObj","value","modifiers","help","children","createElement","variant"],"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/utils/decorators/info.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ThInfoType } from '../../base/types';\nimport { HeaderCellInfoWrapper } from '../../HeaderCellInfoWrapper';\nimport { IFormatterValueType, ITransform } from '../../TableTypes';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\n\nexport const info = ({ tooltip, tooltipProps, popover, popoverProps, className, ariaLabel }: ThInfoType) => {\n  const infoObj: ITransform = (value: IFormatterValueType) => ({\n    className: styles.modifiers.help,\n    children: tooltip ? (\n      <HeaderCellInfoWrapper\n        variant=\"tooltip\"\n        info={tooltip}\n        tooltipProps={tooltipProps}\n        ariaLabel={ariaLabel}\n        className={className}\n      >\n        {value as React.ReactNode}\n      </HeaderCellInfoWrapper>\n    ) : (\n      <HeaderCellInfoWrapper\n        variant=\"popover\"\n        info={popover}\n        popoverProps={popoverProps}\n        ariaLabel={ariaLabel}\n        className={className}\n      >\n        {value as React.ReactNode}\n      </HeaderCellInfoWrapper>\n    )\n  });\n\n  return infoObj;\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,qBAAqB,QAAQ,6BAA6B;AAEnE,OAAOC,MAAM,MAAM,qDAAqD;AAExE,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAAC,IAAA,EAA0F;EAAA,IAApFC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,YAAY,GAAAF,IAAA,CAAZE,YAAY;IAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;IAAEC,YAAY,GAAAJ,IAAA,CAAZI,YAAY;IAAEC,SAAS,GAAAL,IAAA,CAATK,SAAS;IAAEC,SAAS,GAAAN,IAAA,CAATM,SAAS;EACvF,IAAMC,OAAO,GAAe,SAAtBA,OAAOA,CAAgBC,KAA0B;IAAA,OAAM;MAC3DH,SAAS,EAAEP,MAAM,CAACW,SAAS,CAACC,IAAI;MAChCC,QAAQ,EAAEV,OAAO,GACfL,KAAA,CAAAgB,aAAA,CAACf,qBAAqB;QACpBgB,OAAO,EAAC,SAAS;QACjBd,IAAI,EAAEE,OAAO;QACbC,YAAY,EAAEA,YAAY;QAC1BI,SAAS,EAAEA,SAAS;QACpBD,SAAS,EAAEA;MAAS,GAEnBG,KAAwB,CACH,GAExBZ,KAAA,CAAAgB,aAAA,CAACf,qBAAqB;QACpBgB,OAAO,EAAC,SAAS;QACjBd,IAAI,EAAEI,OAAO;QACbC,YAAY,EAAEA,YAAY;QAC1BE,SAAS,EAAEA,SAAS;QACpBD,SAAS,EAAEA;MAAS,GAEnBG,KAAwB;KAG9B;EAAA,CAAC;EAEF,OAAOD,OAAO;AAChB,CAAC"},"metadata":{},"sourceType":"module"}