{"ast":null,"code":"import _classCallCheck from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\n/**\n * body.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport * as React from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { resolveRowKey } from './resolve-row-key';\nimport { BodyRow } from './body-row';\nimport { ProviderContext } from './provider';\nvar BaseBody = /*#__PURE__*/function (_React$Component) {\n  _inherits(BaseBody, _React$Component);\n  var _super = _createSuper(BaseBody);\n  function BaseBody() {\n    var _this;\n    _classCallCheck(this, BaseBody);\n    _this = _super.apply(this, arguments);\n    _this.omitOnRow = function (props) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var onRow = props.onRow,\n        ret = __rest(props, [\"onRow\"]);\n      return ret;\n    };\n    return _this;\n  }\n  _createClass(BaseBody, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      // Skip checking props against `onRow` since that can be bound at render().\n      // That's not particularly good practice but you never know how the users\n      // prefer to define the handler.\n      // Check for wrapper based override.\n      var renderers = nextProps.renderers;\n      if (renderers && renderers.body && renderers.body.wrapper && renderers.body.wrapper.shouldComponentUpdate) {\n        if (typeof renderers.body.wrapper.shouldComponentUpdate === 'function') {\n          return renderers.body.wrapper.shouldComponentUpdate.call(this, nextProps, {}, {});\n        }\n        return true;\n      }\n      return !isEqual(this.omitOnRow(this.props), this.omitOnRow(nextProps));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n        onRow = _a.onRow,\n        rows = _a.rows,\n        rowKey = _a.rowKey,\n        columns = _a.columns,\n        renderers = _a.renderers,\n        props = __rest(_a, [\"onRow\", \"rows\", \"rowKey\", \"columns\", \"renderers\"]);\n      var children = rows.map(function (rowData, index) {\n        var key = resolveRowKey({\n          rowData: rowData,\n          rowIndex: index,\n          rowKey: rowKey\n        });\n        return React.createElement(BodyRow, {\n          key: key,\n          renderers: renderers.body,\n          onRow: onRow,\n          rowKey: key,\n          rowIndex: index,\n          rowData: rowData,\n          columns: columns\n        });\n      });\n      return React.createElement(renderers.body.wrapper, props, children);\n    }\n  }]);\n  return BaseBody;\n}(React.Component);\nBaseBody.defaultProps = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onRow: function onRow() {\n    return {};\n  }\n};\nexport var Body = function Body(props) {\n  return React.createElement(ProviderContext.Consumer, null, function (_ref) {\n    var columns = _ref.columns,\n      renderers = _ref.renderers;\n    return React.createElement(BaseBody, Object.assign({\n      columns: columns,\n      renderers: renderers\n    }, props));\n  });\n};","map":{"version":3,"names":["React","isEqual","resolveRowKey","BodyRow","ProviderContext","BaseBody","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","omitOnRow","props","onRow","ret","__rest","_createClass","key","value","shouldComponentUpdate","nextProps","renderers","body","wrapper","call","render","_a","rows","rowKey","columns","children","map","rowData","index","rowIndex","createElement","Component","defaultProps","Body","Consumer","_ref","Object","assign"],"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/base/body.tsx"],"sourcesContent":["/**\n * body.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport * as React from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { RowsType, RowType, RowKeyType, RenderersTypes, createElementType, ColumnsType } from './types';\nimport { resolveRowKey } from './resolve-row-key';\nimport { BodyRow } from './body-row';\nimport { ProviderContext } from './provider';\n\nexport interface BodyProps {\n  onRow?: Function;\n  rows: RowsType;\n  rowKey?: RowKeyType;\n  columns?: ColumnsType;\n  renderers?: RenderersTypes['renderers'];\n  mappedRows?: any;\n  className?: string;\n}\n\nclass BaseBody extends React.Component<BodyProps, {}> {\n  static defaultProps = {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onRow: (...args: any) => ({})\n  };\n\n  shouldComponentUpdate(nextProps: BodyProps) {\n    // Skip checking props against `onRow` since that can be bound at render().\n    // That's not particularly good practice but you never know how the users\n    // prefer to define the handler.\n    // Check for wrapper based override.\n    const { renderers } = nextProps;\n\n    if (\n      renderers &&\n      renderers.body &&\n      renderers.body.wrapper &&\n      (renderers.body.wrapper as React.Component).shouldComponentUpdate\n    ) {\n      if (typeof (renderers.body.wrapper as React.Component).shouldComponentUpdate === 'function') {\n        return (renderers.body.wrapper as React.Component).shouldComponentUpdate.call(this, nextProps, {}, {});\n      }\n      return true;\n    }\n\n    return !isEqual(this.omitOnRow(this.props), this.omitOnRow(nextProps));\n  }\n\n  omitOnRow = (props: BodyProps) => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { onRow, ...ret } = props;\n    return ret;\n  };\n\n  render() {\n    const { onRow, rows, rowKey, columns, renderers, ...props } = this.props;\n    const children = (rows as []).map((rowData: RowType, index: number) => {\n      const key = resolveRowKey({ rowData, rowIndex: index, rowKey });\n      return React.createElement(BodyRow, {\n        key,\n        renderers: renderers.body,\n        onRow,\n        rowKey: key,\n        rowIndex: index,\n        rowData,\n        columns\n      });\n    });\n\n    return React.createElement(renderers.body.wrapper as createElementType, props, children);\n  }\n}\n\nexport const Body = (props: BodyProps) => (\n  <ProviderContext.Consumer>\n    {({ columns, renderers }) => <BaseBody columns={columns} renderers={renderers} {...props} />}\n  </ProviderContext.Consumer>\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}