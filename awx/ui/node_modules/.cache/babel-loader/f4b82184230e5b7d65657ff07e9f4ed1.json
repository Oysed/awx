{"ast":null,"code":"import{i18n}from\"@lingui/core\";import{isValidDate}from'@patternfly/react-core';export function required(message){var errorMessage=message||/*i18n*/i18n._(\"This field must not be blank\");return function(value){if(typeof value==='string'&&!value.trim()){return errorMessage;}if(typeof value==='number'&&!Number.isNaN(value)){return undefined;}if(!value){return errorMessage;}return undefined;};}export function validateTime(){return function(value){var timeRegex=new RegExp(\"^\\\\s*(\\\\d\\\\d?):([0-5])(\\\\d)\\\\s*([AaPp][Mm])?\\\\s*$\");var message;var timeComponents=value.split(':');var date=new Date();date.setHours(parseInt(timeComponents[0],10));date.setMinutes(parseInt(timeComponents[1],10));if(!isValidDate(date)||!timeRegex.test(value)){message=/*i18n*/i18n._(\"Invalid time format\");}return message;};}export function maxLength(max){return function(value){if(value.trim().length>max){return(/*i18n*/i18n._(\"This field must not exceed {max} characters\",{max:max}));}return undefined;};}export function minLength(min){return function(value){if(value.trim().length<min){return(/*i18n*/i18n._(\"This field must be at least {min} characters\",{min:min}));}return undefined;};}export function minMaxValue(min,max){return function(value){if(!Number.isFinite(min)&&value>max){return(/*i18n*/i18n._(\"This field must be a number and have a value less than {max}\",{max:max}));}if(!Number.isFinite(max)&&value<min){return(/*i18n*/i18n._(\"This field must be a number and have a value greater than {min}\",{min:min}));}if(value<min||value>max){return(/*i18n*/i18n._(\"This field must be a number and have a value between {min} and {max}\",{min:min,max:max}));}return undefined;};}export function requiredEmail(){return function(value){if(!value){return(/*i18n*/i18n._(\"This field must not be blank\"));}// This isn't a perfect validator. It's likely to let a few\n// invalid (though unlikely) email addresses through.\n// This is ok, because the server will always do strict validation for us.\nvar splitVals=value.split('@');if(splitVals.length>=2){if(splitVals[0]&&splitVals[1]){// We get here if the string has an '@' that is enclosed by\n// non-empty substrings\nreturn undefined;}}return(/*i18n*/i18n._(\"Invalid email address\"));};}export function noWhiteSpace(){return function(value){if(/\\s/.test(value)){return(/*i18n*/i18n._(\"This field must not contain spaces\"));}return undefined;};}export function integer(){return function(value){var str=String(value);if(!Number.isInteger(value)&&/[^0-9]/.test(str)){return(/*i18n*/i18n._(\"This field must be an integer\"));}return undefined;};}export function number(){return function(value){var str=String(value);if(/^-?[0-9]*(\\.[0-9]*)?$/.test(str)){return undefined;}// large number scientific notation (e.g. '1e+21')\nif(/^-?[0-9]*e[+-][0-9]*$/.test(str)){return undefined;}return(/*i18n*/i18n._(\"This field must be a number\"));};}export function twilioPhoneNumber(){return function(value){var phoneNumbers=Array.isArray(value)?value:[value];var error;if(!error){phoneNumbers.forEach(function(v){if(!/^\\s*(?:\\+?(\\d{1,3}))?[. (]*(\\d{7,12})$/.test(v)){error=/*i18n*/i18n._(\"{0, plural, one {Please enter a valid phone number.} other {Please enter valid phone numbers.}}\",{0:phoneNumbers.length});}});}return error;};}export function url(){return function(value){if(!value){return undefined;}// URL regex from https://urlregex.com/\nif(// eslint-disable-next-line max-len\n!/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w\\-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)/.test(value)){return(/*i18n*/i18n._(\"Please enter a valid URL\"));}return undefined;};}export function combine(validators){return function(value){for(var i=0;i<validators.length;i++){var validate=validators[i];var error=validate?validate(value):null;if(error){return error;}}return undefined;};}export function regExp(){return function(value){try{RegExp(value);}catch(_unused){return(/*i18n*/i18n._(\"This field must be a regular expression\"));}return undefined;};}export function requiredPositiveInteger(){return function(value){if(typeof value==='number'){if(!Number.isInteger(value)){return(/*i18n*/i18n._(\"This field must be an integer\"));}if(value<1){return(/*i18n*/i18n._(\"This field must be greater than 0\"));}}if(!value){return(/*i18n*/i18n._(\"Select a value for this field\"));}return undefined;};}","map":{"version":3,"names":["isValidDate","required","message","errorMessage","i18n","_","value","trim","Number","isNaN","undefined","validateTime","timeRegex","RegExp","timeComponents","split","date","Date","setHours","parseInt","setMinutes","test","maxLength","max","length","minLength","min","minMaxValue","isFinite","requiredEmail","splitVals","noWhiteSpace","integer","str","String","isInteger","number","twilioPhoneNumber","phoneNumbers","Array","isArray","error","forEach","v","0","url","combine","validators","i","validate","regExp","_unused","requiredPositiveInteger"],"sources":["/awx_devel/awx/ui/src/util/validators.js"],"sourcesContent":["import { plural, t } from '@lingui/macro';\nimport { isValidDate } from '@patternfly/react-core';\n\nexport function required(message) {\n  const errorMessage = message || t`This field must not be blank`;\n  return (value) => {\n    if (typeof value === 'string' && !value.trim()) {\n      return errorMessage;\n    }\n    if (typeof value === 'number' && !Number.isNaN(value)) {\n      return undefined;\n    }\n    if (!value) {\n      return errorMessage;\n    }\n    return undefined;\n  };\n}\n\nexport function validateTime() {\n  return (value) => {\n    const timeRegex = new RegExp(\n      `^\\\\s*(\\\\d\\\\d?):([0-5])(\\\\d)\\\\s*([AaPp][Mm])?\\\\s*$`\n    );\n    let message;\n    const timeComponents = value.split(':');\n\n    const date = new Date();\n    date.setHours(parseInt(timeComponents[0], 10));\n    date.setMinutes(parseInt(timeComponents[1], 10));\n\n    if (!isValidDate(date) || !timeRegex.test(value)) {\n      message = t`Invalid time format`;\n    }\n\n    return message;\n  };\n}\n\nexport function maxLength(max) {\n  return (value) => {\n    if (value.trim().length > max) {\n      return t`This field must not exceed ${max} characters`;\n    }\n    return undefined;\n  };\n}\n\nexport function minLength(min) {\n  return (value) => {\n    if (value.trim().length < min) {\n      return t`This field must be at least ${min} characters`;\n    }\n    return undefined;\n  };\n}\n\nexport function minMaxValue(min, max) {\n  return (value) => {\n    if (!Number.isFinite(min) && value > max) {\n      return t`This field must be a number and have a value less than ${max}`;\n    }\n    if (!Number.isFinite(max) && value < min) {\n      return t`This field must be a number and have a value greater than ${min}`;\n    }\n    if (value < min || value > max) {\n      return t`This field must be a number and have a value between ${min} and ${max}`;\n    }\n    return undefined;\n  };\n}\n\nexport function requiredEmail() {\n  return (value) => {\n    if (!value) {\n      return t`This field must not be blank`;\n    }\n\n    // This isn't a perfect validator. It's likely to let a few\n    // invalid (though unlikely) email addresses through.\n\n    // This is ok, because the server will always do strict validation for us.\n\n    const splitVals = value.split('@');\n\n    if (splitVals.length >= 2) {\n      if (splitVals[0] && splitVals[1]) {\n        // We get here if the string has an '@' that is enclosed by\n        // non-empty substrings\n        return undefined;\n      }\n    }\n\n    return t`Invalid email address`;\n  };\n}\n\nexport function noWhiteSpace() {\n  return (value) => {\n    if (/\\s/.test(value)) {\n      return t`This field must not contain spaces`;\n    }\n    return undefined;\n  };\n}\n\nexport function integer() {\n  return (value) => {\n    const str = String(value);\n    if (!Number.isInteger(value) && /[^0-9]/.test(str)) {\n      return t`This field must be an integer`;\n    }\n    return undefined;\n  };\n}\n\nexport function number() {\n  return (value) => {\n    const str = String(value);\n    if (/^-?[0-9]*(\\.[0-9]*)?$/.test(str)) {\n      return undefined;\n    }\n    // large number scientific notation (e.g. '1e+21')\n    if (/^-?[0-9]*e[+-][0-9]*$/.test(str)) {\n      return undefined;\n    }\n    return t`This field must be a number`;\n  };\n}\n\nexport function twilioPhoneNumber() {\n  return (value) => {\n    const phoneNumbers = Array.isArray(value) ? value : [value];\n    let error;\n    if (!error) {\n      phoneNumbers.forEach((v) => {\n        if (!/^\\s*(?:\\+?(\\d{1,3}))?[. (]*(\\d{7,12})$/.test(v)) {\n          error = plural(phoneNumbers.length, {\n            one: 'Please enter a valid phone number.',\n            other: 'Please enter valid phone numbers.',\n          });\n        }\n      });\n    }\n    return error;\n  };\n}\nexport function url() {\n  return (value) => {\n    if (!value) {\n      return undefined;\n    }\n    // URL regex from https://urlregex.com/\n    if (\n      // eslint-disable-next-line max-len\n      !/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w\\-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)/.test(\n        value\n      )\n    ) {\n      return t`Please enter a valid URL`;\n    }\n    return undefined;\n  };\n}\n\nexport function combine(validators) {\n  return (value) => {\n    for (let i = 0; i < validators.length; i++) {\n      const validate = validators[i];\n      const error = validate ? validate(value) : null;\n      if (error) {\n        return error;\n      }\n    }\n    return undefined;\n  };\n}\n\nexport function regExp() {\n  return (value) => {\n    try {\n      RegExp(value);\n    } catch {\n      return t`This field must be a regular expression`;\n    }\n    return undefined;\n  };\n}\n\nexport function requiredPositiveInteger() {\n  return (value) => {\n    if (typeof value === 'number') {\n      if (!Number.isInteger(value)) {\n        return t`This field must be an integer`;\n      }\n      if (value < 1) {\n        return t`This field must be greater than 0`;\n      }\n    }\n    if (!value) {\n      return t`Select a value for this field`;\n    }\n    return undefined;\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}