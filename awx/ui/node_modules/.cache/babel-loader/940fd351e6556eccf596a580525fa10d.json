{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React,{useState}from'react';import{useField}from'formik';import{Button,ButtonVariant,TextInput,Tooltip}from'@patternfly/react-core';import{EyeIcon,EyeSlashIcon}from'@patternfly/react-icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function PasswordInput(props){var autocomplete=props.autocomplete,id=props.id,name=props.name,validate=props.validate,isFieldGroupValid=props.isFieldGroupValid,isRequired=props.isRequired,isDisabled=props.isDisabled;var _useState=useState('password'),_useState2=_slicedToArray(_useState,2),inputType=_useState2[0],setInputType=_useState2[1];var _useField=useField({name:name,validate:validate}),_useField2=_slicedToArray(_useField,2),field=_useField2[0],meta=_useField2[1];var isValid=!(meta.touched&&meta.error);var handlePasswordToggle=function handlePasswordToggle(){setInputType(inputType==='text'?'password':'text');};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Tooltip,{content:inputType==='password'?/*i18n*/i18n._(\"Show\"):/*i18n*/i18n._(\"Hide\"),children:/*#__PURE__*/_jsxs(Button,{ouiaId:\"\".concat(id,\"-toggle\"),variant:ButtonVariant.control,\"aria-label\":/*i18n*/i18n._(\"Toggle Password\"),onClick:handlePasswordToggle,isDisabled:isDisabled,children:[inputType==='password'&&/*#__PURE__*/_jsx(EyeSlashIcon,{}),inputType==='text'&&/*#__PURE__*/_jsx(EyeIcon,{})]})}),/*#__PURE__*/_jsx(TextInput,_objectSpread(_objectSpread({autoComplete:autocomplete,id:id,placeholder:field.value==='$encrypted$'?'ENCRYPTED':undefined},field),{},{value:field.value==='$encrypted$'?'':field.value,isDisabled:isDisabled,isRequired:isRequired,validated:isValid||isFieldGroupValid?'default':'error',type:inputType,onChange:function onChange(_,event){field.onChange(event);}}))]});}PasswordInput.defaultProps={autocomplete:'new-password',validate:function validate(){},isRequired:false,isDisabled:false};export default PasswordInput;","map":{"version":3,"names":["React","useState","useField","Button","ButtonVariant","TextInput","Tooltip","EyeIcon","EyeSlashIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PasswordInput","props","autocomplete","id","name","validate","isFieldGroupValid","isRequired","isDisabled","_useState","_useState2","_slicedToArray","inputType","setInputType","_useField","_useField2","field","meta","isValid","touched","error","handlePasswordToggle","children","content","i18n","_","ouiaId","concat","variant","control","onClick","_objectSpread","autoComplete","placeholder","value","undefined","validated","type","onChange","event","defaultProps"],"sources":["/awx_devel/awx/ui/src/components/FormField/PasswordInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { t } from '@lingui/macro';\nimport { useField } from 'formik';\nimport {\n  Button,\n  ButtonVariant,\n  TextInput,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { EyeIcon, EyeSlashIcon } from '@patternfly/react-icons';\n\nfunction PasswordInput(props) {\n  const {\n    autocomplete,\n    id,\n    name,\n    validate,\n    isFieldGroupValid,\n    isRequired,\n    isDisabled,\n  } = props;\n  const [inputType, setInputType] = useState('password');\n  const [field, meta] = useField({ name, validate });\n\n  const isValid = !(meta.touched && meta.error);\n\n  const handlePasswordToggle = () => {\n    setInputType(inputType === 'text' ? 'password' : 'text');\n  };\n\n  return (\n    <>\n      <Tooltip content={inputType === 'password' ? t`Show` : t`Hide`}>\n        <Button\n          ouiaId={`${id}-toggle`}\n          variant={ButtonVariant.control}\n          aria-label={t`Toggle Password`}\n          onClick={handlePasswordToggle}\n          isDisabled={isDisabled}\n        >\n          {inputType === 'password' && <EyeSlashIcon />}\n          {inputType === 'text' && <EyeIcon />}\n        </Button>\n      </Tooltip>\n      <TextInput\n        autoComplete={autocomplete}\n        id={id}\n        placeholder={field.value === '$encrypted$' ? 'ENCRYPTED' : undefined}\n        {...field}\n        value={field.value === '$encrypted$' ? '' : field.value}\n        isDisabled={isDisabled}\n        isRequired={isRequired}\n        validated={isValid || isFieldGroupValid ? 'default' : 'error'}\n        type={inputType}\n        onChange={(_, event) => {\n          field.onChange(event);\n        }}\n      />\n    </>\n  );\n}\n\nPasswordInput.propTypes = {\n  autocomplete: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  validate: PropTypes.func,\n  isRequired: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n};\n\nPasswordInput.defaultProps = {\n  autocomplete: 'new-password',\n  validate: () => {},\n  isRequired: false,\n  isDisabled: false,\n};\n\nexport default PasswordInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}