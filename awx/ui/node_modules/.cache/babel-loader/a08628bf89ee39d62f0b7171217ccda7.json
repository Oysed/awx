{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";import React,{useCallback,useEffect}from'react';import{Host}from'types';import{CardBody}from'components/Card';import{DetailList}from'components/DetailList';import{VariablesDetail}from'components/CodeEditor';import ContentError from'components/ContentError';import ContentLoading from'components/ContentLoading';import useRequest from'hooks/useRequest';import{HostsAPI}from'api';import{jsx as _jsx}from\"react/jsx-runtime\";function HostFacts(_ref){var host=_ref.host;var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$Promise$all,_yield$Promise$all2,factsObj;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Promise.all([HostsAPI.readFacts(host.id)]);case 2:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,1);factsObj=_yield$Promise$all2[0].data;return _context.abrupt(\"return\",JSON.stringify(factsObj,null,4));case 6:case\"end\":return _context.stop();}}},_callee);})),[host]),'{}'),facts=_useRequest.result,isLoading=_useRequest.isLoading,error=_useRequest.error,fetchFacts=_useRequest.request;useEffect(function(){fetchFacts();},[fetchFacts]);if(isLoading){return/*#__PURE__*/_jsx(ContentLoading,{});}if(error){return/*#__PURE__*/_jsx(ContentError,{error:error});}return/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(DetailList,{gutter:\"sm\",children:/*#__PURE__*/_jsx(VariablesDetail,{label:/*i18n*/i18n._(\"Facts\"),rows:\"auto\",value:facts,name:\"facts\",dataCy:\"host-facts-detail\"})})});}export default HostFacts;","map":{"version":3,"names":["React","useCallback","useEffect","Host","CardBody","DetailList","VariablesDetail","ContentError","ContentLoading","useRequest","HostsAPI","jsx","_jsx","HostFacts","_ref","host","_useRequest","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$Promise$all","_yield$Promise$all2","factsObj","wrap","_callee$","_context","prev","next","Promise","all","readFacts","id","sent","_slicedToArray","data","abrupt","JSON","stringify","stop","facts","result","isLoading","error","fetchFacts","request","children","gutter","label","i18n","_","rows","value","name","dataCy"],"sources":["/awx_devel/awx/ui/src/screens/Host/HostFacts/HostFacts.js"],"sourcesContent":["import React, { useCallback, useEffect } from 'react';\n\nimport { t } from '@lingui/macro';\nimport { Host } from 'types';\nimport { CardBody } from 'components/Card';\nimport { DetailList } from 'components/DetailList';\nimport { VariablesDetail } from 'components/CodeEditor';\nimport ContentError from 'components/ContentError';\nimport ContentLoading from 'components/ContentLoading';\nimport useRequest from 'hooks/useRequest';\nimport { HostsAPI } from 'api';\n\nfunction HostFacts({ host }) {\n  const {\n    result: facts,\n    isLoading,\n    error,\n    request: fetchFacts,\n  } = useRequest(\n    useCallback(async () => {\n      const [{ data: factsObj }] = await Promise.all([\n        HostsAPI.readFacts(host.id),\n      ]);\n      return JSON.stringify(factsObj, null, 4);\n    }, [host]),\n    '{}'\n  );\n\n  useEffect(() => {\n    fetchFacts();\n  }, [fetchFacts]);\n\n  if (isLoading) {\n    return <ContentLoading />;\n  }\n\n  if (error) {\n    return <ContentError error={error} />;\n  }\n\n  return (\n    <CardBody>\n      <DetailList gutter=\"sm\">\n        <VariablesDetail\n          label={t`Facts`}\n          rows=\"auto\"\n          value={facts}\n          name=\"facts\"\n          dataCy=\"host-facts-detail\"\n        />\n      </DetailList>\n    </CardBody>\n  );\n}\n\nHostFacts.propTypes = {\n  host: Host.isRequired,\n};\n\nexport default HostFacts;\n"],"mappings":"uVAAA,MAAO,CAAAA,KAAK,EAAIC,WAAW,CAAEC,SAAS,KAAQ,OAAO,CAGrD,OAASC,IAAI,KAAQ,OAAO,CAC5B,OAASC,QAAQ,KAAQ,iBAAiB,CAC1C,OAASC,UAAU,KAAQ,uBAAuB,CAClD,OAASC,eAAe,KAAQ,uBAAuB,CACvD,MAAO,CAAAC,YAAY,KAAM,yBAAyB,CAClD,MAAO,CAAAC,cAAc,KAAM,2BAA2B,CACtD,MAAO,CAAAC,UAAU,KAAM,kBAAkB,CACzC,OAASC,QAAQ,KAAQ,KAAK,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE/B,QAAS,CAAAC,SAASA,CAAAC,IAAA,CAAW,IAAR,CAAAC,IAAI,CAAAD,IAAA,CAAJC,IAAI,CACvB,IAAAC,WAAA,CAKIP,UAAU,CACZR,WAAW,cAAAgB,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,CAAC,SAAAC,QAAA,MAAAC,kBAAA,CAAAC,mBAAA,CAAAC,QAAA,QAAAL,mBAAA,CAAAM,IAAA,UAAAC,SAAAC,QAAA,kBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SACyB,CAAAC,OAAO,CAACC,GAAG,CAAC,CAC7CpB,QAAQ,CAACqB,SAAS,CAAChB,IAAI,CAACiB,EAAE,CAAC,CAC5B,CAAC,QAAAX,kBAAA,CAAAK,QAAA,CAAAO,IAAA,CAAAX,mBAAA,CAAAY,cAAA,CAAAb,kBAAA,IAFaE,QAAQ,CAAAD,mBAAA,IAAda,IAAI,QAAAT,QAAA,CAAAU,MAAA,UAGNC,IAAI,CAACC,SAAS,CAACf,QAAQ,CAAE,IAAI,CAAE,CAAC,CAAC,0BAAAG,QAAA,CAAAa,IAAA,OAAAnB,OAAA,GACzC,GAAE,CAACL,IAAI,CAAC,CAAC,CACV,IACF,CAAC,CAZSyB,KAAK,CAAAxB,WAAA,CAAbyB,MAAM,CACNC,SAAS,CAAA1B,WAAA,CAAT0B,SAAS,CACTC,KAAK,CAAA3B,WAAA,CAAL2B,KAAK,CACIC,UAAU,CAAA5B,WAAA,CAAnB6B,OAAO,CAWT3C,SAAS,CAAC,UAAM,CACd0C,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,CAACA,UAAU,CAAC,CAAC,CAEhB,GAAIF,SAAS,CAAE,CACb,mBAAO9B,IAAA,CAACJ,cAAc,GAAE,CAAC,CAC3B,CAEA,GAAImC,KAAK,CAAE,CACT,mBAAO/B,IAAA,CAACL,YAAY,EAACoC,KAAK,CAAEA,KAAM,CAAE,CAAC,CACvC,CAEA,mBACE/B,IAAA,CAACR,QAAQ,EAAA0C,QAAA,cACPlC,IAAA,CAACP,UAAU,EAAC0C,MAAM,CAAC,IAAI,CAAAD,QAAA,cACrBlC,IAAA,CAACN,eAAe,EACd0C,KAAK,SAAEC,IAAA,CAAAC,CAAA,QAAO,CAAE,CAChBC,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEZ,KAAM,CACba,IAAI,CAAC,OAAO,CACZC,MAAM,CAAC,mBAAmB,CAC3B,CAAC,CACQ,CAAC,CACL,CAAC,CAEf,CAMA,cAAe,CAAAzC,SAAS"},"metadata":{},"sourceType":"module"}