{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import{RRule}from'rrule';import{DateTime}from'luxon';import{getRRuleDayConstants}from'util/dates';window.RRule=RRule;window.DateTime=DateTime;var parseTime=function parseTime(time){return[DateTime.fromFormat(time,'h:mm a').hour,DateTime.fromFormat(time,'h:mm a').minute];};export function buildDtStartObj(values){// Dates are formatted like \"YYYY-MM-DD\"\nvar _values$startDate$spl=values.startDate.split('-'),_values$startDate$spl2=_slicedToArray(_values$startDate$spl,3),startYear=_values$startDate$spl2[0],startMonth=_values$startDate$spl2[1],startDay=_values$startDate$spl2[2];// Times are formatted like \"HH:MM:SS\" or \"HH:MM\" if no seconds\n// have been specified\nvar _parseTime=parseTime(values.startTime),_parseTime2=_slicedToArray(_parseTime,2),startHour=_parseTime2[0],startMinute=_parseTime2[1];var dateString=\"\".concat(startYear).concat(pad(startMonth)).concat(pad(startDay),\"T\").concat(pad(startHour)).concat(pad(startMinute),\"00\");var rruleString=values.timezone?\"DTSTART;TZID=\".concat(values.timezone,\":\").concat(dateString):\"DTSTART:\".concat(dateString,\"Z\");var rule=RRule.fromString(rruleString);return rule;}function pad(num){if(typeof num==='string'){return num;}return num<10?\"0\".concat(num):num;}export default function buildRuleObj(values,includeStart){var ruleObj={interval:values.interval};if(includeStart){ruleObj.dtstart=buildDateTime(values.startDate,values.startTime,values.timezone);}switch(values.frequency){case'none':ruleObj.count=1;ruleObj.freq=RRule.MINUTELY;break;case'minute':ruleObj.freq=RRule.MINUTELY;break;case'hour':ruleObj.freq=RRule.HOURLY;break;case'day':ruleObj.freq=RRule.DAILY;break;case'week':ruleObj.freq=RRule.WEEKLY;ruleObj.byweekday=values.daysOfWeek;break;case'month':ruleObj.freq=RRule.MONTHLY;if(values.runOn==='day'){ruleObj.bymonthday=values.runOnDayNumber;}else if(values.runOn==='the'){ruleObj.bysetpos=parseInt(values.runOnTheOccurrence,10);ruleObj.byweekday=getRRuleDayConstants(values.runOnTheDay);}break;case'year':ruleObj.freq=RRule.YEARLY;if(values.runOn==='day'){ruleObj.bymonth=parseInt(values.runOnDayMonth,10);ruleObj.bymonthday=values.runOnDayNumber;}else if(values.runOn==='the'){ruleObj.bysetpos=parseInt(values.runOnTheOccurrence,10);ruleObj.byweekday=getRRuleDayConstants(values.runOnTheDay);ruleObj.bymonth=parseInt(values.runOnTheMonth,10);}break;default:throw new Error(/*i18n*/i18n._(\"Frequency did not match an expected value\"));}if(values.frequency!=='none'){switch(values.end){case'never':break;case'after':ruleObj.count=values.occurrences;break;case'onDate':{ruleObj.until=buildDateTime(values.endDate,values.endTime,values.timezone);break;}default:throw new Error(/*i18n*/i18n._(\"End did not match an expected value ({0})\",{0:values.end}));}}return ruleObj;}function buildDateTime(dateString,timeString,timezone){var localDate=DateTime.fromISO(\"\".concat(dateString,\"T000000\"),{zone:timezone});var _parseTime3=parseTime(timeString),_parseTime4=_slicedToArray(_parseTime3,2),hour=_parseTime4[0],minute=_parseTime4[1];var localTime=localDate.set({hour:hour,minute:minute,second:0});return localTime.toJSDate();}","map":{"version":3,"names":["RRule","DateTime","getRRuleDayConstants","window","parseTime","time","fromFormat","hour","minute","buildDtStartObj","values","_values$startDate$spl","startDate","split","_values$startDate$spl2","_slicedToArray","startYear","startMonth","startDay","_parseTime","startTime","_parseTime2","startHour","startMinute","dateString","concat","pad","rruleString","timezone","rule","fromString","num","buildRuleObj","includeStart","ruleObj","interval","dtstart","buildDateTime","frequency","count","freq","MINUTELY","HOURLY","DAILY","WEEKLY","byweekday","daysOfWeek","MONTHLY","runOn","bymonthday","runOnDayNumber","bysetpos","parseInt","runOnTheOccurrence","runOnTheDay","YEARLY","bymonth","runOnDayMonth","runOnTheMonth","Error","i18n","_","end","occurrences","until","endDate","endTime","0","timeString","localDate","fromISO","zone","_parseTime3","_parseTime4","localTime","set","second","toJSDate"],"sources":["/awx_devel/awx/ui/src/components/Schedule/shared/buildRuleObj.js"],"sourcesContent":["import { t } from '@lingui/macro';\nimport { RRule } from 'rrule';\nimport { DateTime } from 'luxon';\nimport { getRRuleDayConstants } from 'util/dates';\n\nwindow.RRule = RRule;\nwindow.DateTime = DateTime;\n\nconst parseTime = (time) => [\n  DateTime.fromFormat(time, 'h:mm a').hour,\n  DateTime.fromFormat(time, 'h:mm a').minute,\n];\n\nexport function buildDtStartObj(values) {\n  // Dates are formatted like \"YYYY-MM-DD\"\n  const [startYear, startMonth, startDay] = values.startDate.split('-');\n  // Times are formatted like \"HH:MM:SS\" or \"HH:MM\" if no seconds\n  // have been specified\n  const [startHour, startMinute] = parseTime(values.startTime);\n\n  const dateString = `${startYear}${pad(startMonth)}${pad(startDay)}T${pad(\n    startHour\n  )}${pad(startMinute)}00`;\n  const rruleString = values.timezone\n    ? `DTSTART;TZID=${values.timezone}:${dateString}`\n    : `DTSTART:${dateString}Z`;\n  const rule = RRule.fromString(rruleString);\n\n  return rule;\n}\n\nfunction pad(num) {\n  if (typeof num === 'string') {\n    return num;\n  }\n  return num < 10 ? `0${num}` : num;\n}\n\nexport default function buildRuleObj(values, includeStart) {\n  const ruleObj = {\n    interval: values.interval,\n  };\n\n  if (includeStart) {\n    ruleObj.dtstart = buildDateTime(\n      values.startDate,\n      values.startTime,\n      values.timezone\n    );\n  }\n\n  switch (values.frequency) {\n    case 'none':\n      ruleObj.count = 1;\n      ruleObj.freq = RRule.MINUTELY;\n      break;\n    case 'minute':\n      ruleObj.freq = RRule.MINUTELY;\n      break;\n    case 'hour':\n      ruleObj.freq = RRule.HOURLY;\n      break;\n    case 'day':\n      ruleObj.freq = RRule.DAILY;\n      break;\n    case 'week':\n      ruleObj.freq = RRule.WEEKLY;\n      ruleObj.byweekday = values.daysOfWeek;\n      break;\n    case 'month':\n      ruleObj.freq = RRule.MONTHLY;\n      if (values.runOn === 'day') {\n        ruleObj.bymonthday = values.runOnDayNumber;\n      } else if (values.runOn === 'the') {\n        ruleObj.bysetpos = parseInt(values.runOnTheOccurrence, 10);\n        ruleObj.byweekday = getRRuleDayConstants(values.runOnTheDay);\n      }\n      break;\n    case 'year':\n      ruleObj.freq = RRule.YEARLY;\n      if (values.runOn === 'day') {\n        ruleObj.bymonth = parseInt(values.runOnDayMonth, 10);\n        ruleObj.bymonthday = values.runOnDayNumber;\n      } else if (values.runOn === 'the') {\n        ruleObj.bysetpos = parseInt(values.runOnTheOccurrence, 10);\n        ruleObj.byweekday = getRRuleDayConstants(values.runOnTheDay);\n        ruleObj.bymonth = parseInt(values.runOnTheMonth, 10);\n      }\n      break;\n    default:\n      throw new Error(t`Frequency did not match an expected value`);\n  }\n\n  if (values.frequency !== 'none') {\n    switch (values.end) {\n      case 'never':\n        break;\n      case 'after':\n        ruleObj.count = values.occurrences;\n        break;\n      case 'onDate': {\n        ruleObj.until = buildDateTime(\n          values.endDate,\n          values.endTime,\n          values.timezone\n        );\n        break;\n      }\n      default:\n        throw new Error(t`End did not match an expected value (${values.end})`);\n    }\n  }\n\n  return ruleObj;\n}\n\nfunction buildDateTime(dateString, timeString, timezone) {\n  const localDate = DateTime.fromISO(`${dateString}T000000`, {\n    zone: timezone,\n  });\n  const [hour, minute] = parseTime(timeString);\n  const localTime = localDate.set({\n    hour,\n    minute,\n    second: 0,\n  });\n  return localTime.toJSDate();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}