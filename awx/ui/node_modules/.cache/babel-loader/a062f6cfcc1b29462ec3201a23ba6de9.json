{"ast":null,"code":"import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";function filterDefaultParams(paramsArr,config){var defaultParamsKeys=Object.keys(config.defaultParams||{});return paramsArr.filter(function(key){return defaultParamsKeys.indexOf(key)===-1;});}function getLabelFromValue(columns,value,colKey){var _currentSearchColumn$;var label=value;var currentSearchColumn=columns.find(function(_ref){var key=_ref.key;return key===colKey;});if(currentSearchColumn!==null&&currentSearchColumn!==void 0&&(_currentSearchColumn$=currentSearchColumn.options)!==null&&_currentSearchColumn$!==void 0&&_currentSearchColumn$.length){var _currentSearchColumn$2=currentSearchColumn.options.find(function(_ref2){var _ref3=_slicedToArray(_ref2,1),optVal=_ref3[0];return optVal===value;});var _currentSearchColumn$3=_slicedToArray(_currentSearchColumn$2,2);label=_currentSearchColumn$3[1];}else if(currentSearchColumn!==null&&currentSearchColumn!==void 0&&currentSearchColumn.booleanLabels){label=currentSearchColumn.booleanLabels[value];}return(label||colKey).toString();}export default function getChipsByKey(queryParams,columns,qsConfig){var queryParamsByKey={};columns.forEach(function(_ref4){var name=_ref4.name,key=_ref4.key;queryParamsByKey[key]={key:key,label:\"\".concat(name,\" (\").concat(key,\")\"),chips:[]};});var nonDefaultParams=filterDefaultParams(Object.keys(queryParams||{}),qsConfig);nonDefaultParams.forEach(function(key){var columnKey=key;var label=columns.filter(function(_ref5){var keyToCheck=_ref5.key;return columnKey===keyToCheck;}).length?\"\".concat(columns.find(function(_ref6){var keyToCheck=_ref6.key;return columnKey===keyToCheck;}).name,\" (\").concat(key,\")\"):columnKey;queryParamsByKey[columnKey]={key:key,label:label,chips:[]};if(Array.isArray(queryParams[key])){queryParams[key].forEach(function(val){return queryParamsByKey[columnKey].chips.push({key:\"\".concat(key,\":\").concat(val),node:getLabelFromValue(columns,val,columnKey)});});}else{queryParamsByKey[columnKey].chips.push({key:\"\".concat(key,\":\").concat(queryParams[key]),node:getLabelFromValue(columns,queryParams[key],columnKey)});}});return queryParamsByKey;}","map":{"version":3,"names":["filterDefaultParams","paramsArr","config","defaultParamsKeys","Object","keys","defaultParams","filter","key","indexOf","getLabelFromValue","columns","value","colKey","_currentSearchColumn$","label","currentSearchColumn","find","_ref","options","length","_currentSearchColumn$2","_ref2","_ref3","_slicedToArray","optVal","_currentSearchColumn$3","booleanLabels","toString","getChipsByKey","queryParams","qsConfig","queryParamsByKey","forEach","_ref4","name","concat","chips","nonDefaultParams","columnKey","_ref5","keyToCheck","_ref6","Array","isArray","val","push","node"],"sources":["/awx_devel/awx/ui/src/components/Search/getChipsByKey.js"],"sourcesContent":["function filterDefaultParams(paramsArr, config) {\n  const defaultParamsKeys = Object.keys(config.defaultParams || {});\n  return paramsArr.filter((key) => defaultParamsKeys.indexOf(key) === -1);\n}\n\nfunction getLabelFromValue(columns, value, colKey) {\n  let label = value;\n  const currentSearchColumn = columns.find(({ key }) => key === colKey);\n  if (currentSearchColumn?.options?.length) {\n    [, label] = currentSearchColumn.options.find(\n      ([optVal]) => optVal === value\n    );\n  } else if (currentSearchColumn?.booleanLabels) {\n    label = currentSearchColumn.booleanLabels[value];\n  }\n  return (label || colKey).toString();\n}\n\nexport default function getChipsByKey(queryParams, columns, qsConfig) {\n  const queryParamsByKey = {};\n  columns.forEach(({ name, key }) => {\n    queryParamsByKey[key] = { key, label: `${name} (${key})`, chips: [] };\n  });\n  const nonDefaultParams = filterDefaultParams(\n    Object.keys(queryParams || {}),\n    qsConfig\n  );\n\n  nonDefaultParams.forEach((key) => {\n    const columnKey = key;\n    const label = columns.filter(\n      ({ key: keyToCheck }) => columnKey === keyToCheck\n    ).length\n      ? `${\n          columns.find(({ key: keyToCheck }) => columnKey === keyToCheck).name\n        } (${key})`\n      : columnKey;\n\n    queryParamsByKey[columnKey] = { key, label, chips: [] };\n\n    if (Array.isArray(queryParams[key])) {\n      queryParams[key].forEach((val) =>\n        queryParamsByKey[columnKey].chips.push({\n          key: `${key}:${val}`,\n          node: getLabelFromValue(columns, val, columnKey),\n        })\n      );\n    } else {\n      queryParamsByKey[columnKey].chips.push({\n        key: `${key}:${queryParams[key]}`,\n        node: getLabelFromValue(columns, queryParams[key], columnKey),\n      });\n    }\n  });\n  return queryParamsByKey;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}