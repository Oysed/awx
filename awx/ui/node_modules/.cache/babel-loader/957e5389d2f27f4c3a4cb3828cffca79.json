{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{LabelsAPI,OrganizationsAPI}from'../api';function createNewLabels(){return _createNewLabels.apply(this,arguments);}function _createNewLabels(){_createNewLabels=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var labels,organization,error,labelIds,newLabels,labelRequests,organizationId,_yield$OrganizationsA,results,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:labels=_args.length>0&&_args[0]!==undefined?_args[0]:[];organization=_args.length>1&&_args[1]!==undefined?_args[1]:null;error=null;labelIds=[];_context.prev=4;newLabels=[];labelRequests=[];organizationId=organization;if(labels){labels.forEach(function(label){if(typeof label.id!=='number'){newLabels.push(label);}else{labelIds.push(label.id);}});}if(!(newLabels.length>0)){_context.next=22;break;}if(organizationId){_context.next=22;break;}_context.prev=11;_context.next=14;return OrganizationsAPI.read();case 14:_yield$OrganizationsA=_context.sent;results=_yield$OrganizationsA.data.results;organizationId=results[0].id;_context.next=22;break;case 19:_context.prev=19;_context.t0=_context[\"catch\"](11);throw _context.t0;case 22:newLabels.forEach(function(label){labelRequests.push(LabelsAPI.create({name:label.name,organization:organizationId}).then(function(_ref){var data=_ref.data;labelIds.push(data.id);}));});_context.next=25;return Promise.all(labelRequests);case 25:_context.next=30;break;case 27:_context.prev=27;_context.t1=_context[\"catch\"](4);error=_context.t1;case 30:return _context.abrupt(\"return\",{labelIds:labelIds,error:error});case 31:case\"end\":return _context.stop();}}},_callee,null,[[4,27],[11,19]]);}));return _createNewLabels.apply(this,arguments);}export default createNewLabels;","map":{"version":3,"names":["LabelsAPI","OrganizationsAPI","createNewLabels","_createNewLabels","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","labels","organization","error","labelIds","newLabels","labelRequests","organizationId","_yield$OrganizationsA","results","_args","wrap","_callee$","_context","prev","next","length","undefined","forEach","label","id","push","read","sent","data","t0","create","name","then","_ref","Promise","all","t1","abrupt","stop"],"sources":["/awx_devel/awx/ui/src/util/labels.js"],"sourcesContent":["import { LabelsAPI, OrganizationsAPI } from '../api';\n\nasync function createNewLabels(labels = [], organization = null) {\n  let error = null;\n  const labelIds = [];\n\n  try {\n    const newLabels = [];\n    const labelRequests = [];\n    let organizationId = organization;\n    if (labels) {\n      labels.forEach((label) => {\n        if (typeof label.id !== 'number') {\n          newLabels.push(label);\n        } else {\n          labelIds.push(label.id);\n        }\n      });\n    }\n\n    if (newLabels.length > 0) {\n      if (!organizationId) {\n        // eslint-disable-next-line no-useless-catch\n        try {\n          const {\n            data: { results },\n          } = await OrganizationsAPI.read();\n          organizationId = results[0].id;\n        } catch (err) {\n          throw err;\n        }\n      }\n    }\n\n    newLabels.forEach((label) => {\n      labelRequests.push(\n        LabelsAPI.create({\n          name: label.name,\n          organization: organizationId,\n        }).then(({ data }) => {\n          labelIds.push(data.id);\n        })\n      );\n    });\n\n    await Promise.all(labelRequests);\n  } catch (err) {\n    error = err;\n  }\n\n  return {\n    labelIds,\n    error,\n  };\n}\n\nexport default createNewLabels;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}