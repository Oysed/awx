{"ast":null,"code":"import{i18n}from\"@lingui/core\";import React from'react';import{useFormikContext}from'formik';import SurveyStep from'./SurveyStep';import StepName from'./StepName';import{jsx as _jsx}from\"react/jsx-runtime\";var STEP_ID='survey';export default function useSurveyStep(launchConfig,surveyConfig,resource,visitedSteps){var _useFormikContext=useFormikContext(),setFieldError=_useFormikContext.setFieldError,values=_useFormikContext.values;var hasError=Object.keys(visitedSteps).includes(STEP_ID)&&checkForError(launchConfig,surveyConfig,values);return{step:launchConfig.survey_enabled?{id:STEP_ID,name:/*#__PURE__*/_jsx(StepName,{hasErrors:hasError,id:\"survey-step\",children:/*i18n*/i18n._(\"Survey\")}),component:/*#__PURE__*/_jsx(SurveyStep,{surveyConfig:surveyConfig}),enableNext:true}:null,initialValues:getInitialValues(launchConfig,surveyConfig,resource),surveyConfig:surveyConfig,isReady:true,contentError:null,hasError:hasError,setTouched:function setTouched(setFieldTouched){if(!(surveyConfig!==null&&surveyConfig!==void 0&&surveyConfig.spec)){return;}surveyConfig.spec.forEach(function(question){setFieldTouched(\"survey_\".concat(question.variable),true,false);});},validate:function validate(){if(launchConfig.survey_enabled&&surveyConfig.spec){surveyConfig.spec.forEach(function(question){var errMessage=validateSurveyField(question,values[\"survey_\".concat(question.variable)]);if(errMessage){setFieldError(\"survey_\".concat(question.variable),errMessage);}});}}};}function getInitialValues(launchConfig,surveyConfig,resource){if(!launchConfig.survey_enabled||!surveyConfig){return{};}var values={};if(surveyConfig!==null&&surveyConfig!==void 0&&surveyConfig.spec){surveyConfig.spec.forEach(function(question){if(resource!==null&&resource!==void 0&&resource.extra_data&&resource!==null&&resource!==void 0&&resource.extra_data[question.variable]){values[\"survey_\".concat(question.variable)]=resource.extra_data[question.variable];}else if(question.type==='multiselect'){values[\"survey_\".concat(question.variable)]=question.default?question.default.split('\\n'):[];}else{var _question$default;values[\"survey_\".concat(question.variable)]=(_question$default=question.default)!==null&&_question$default!==void 0?_question$default:'';}});}return values;}function validateSurveyField(question,value){var isTextField=['text','textarea'].includes(question.type);var isNumeric=['integer','float'].includes(question.type);if(isTextField&&(value||value===0)){if(question.min&&value.length<question.min){return(/*i18n*/i18n._(\"This field must be at least {0} characters\",{0:question.min}));}if(question.max&&value.length>question.max){return(/*i18n*/i18n._(\"This field must not exceed {0} characters\",{0:question.max}));}}if(isNumeric&&(value||value===0)){if(value<question.min||value>question.max){return(/*i18n*/i18n._(\"This field must be a number and have a value between {0} and {1}\",{0:question.min,1:question.max}));}}if(question.required&&!value&&value!==0){return(/*i18n*/i18n._(\"This field must not be blank\"));}return null;}function checkForError(launchConfig,surveyConfig,values){var hasError=false;if(launchConfig.survey_enabled&&surveyConfig.spec){surveyConfig.spec.forEach(function(question){var value=values[\"survey_\".concat(question.variable)];var isTextField=['text','textarea'].includes(question.type);var isNumeric=['integer','float'].includes(question.type);if(isTextField&&(value||value===0)){if(question.min&&value.length<question.min||question.max&&value.length>question.max){hasError=true;}}if(isNumeric){if((value<question.min||value>question.max||value==='')&&question.required){hasError=true;}}if(question.required&&(!value||value.length===0)&&!isNumeric){hasError=true;}});}return hasError;}","map":{"version":3,"names":["React","useFormikContext","SurveyStep","StepName","jsx","_jsx","STEP_ID","useSurveyStep","launchConfig","surveyConfig","resource","visitedSteps","_useFormikContext","setFieldError","values","hasError","Object","keys","includes","checkForError","step","survey_enabled","id","name","hasErrors","children","i18n","_","component","enableNext","initialValues","getInitialValues","isReady","contentError","setTouched","setFieldTouched","spec","forEach","question","concat","variable","validate","errMessage","validateSurveyField","extra_data","type","default","split","_question$default","value","isTextField","isNumeric","min","length","0","max","1","required"],"sources":["/awx_devel/awx/ui/src/components/LaunchPrompt/steps/useSurveyStep.js"],"sourcesContent":["import React from 'react';\nimport { t } from '@lingui/macro';\nimport { useFormikContext } from 'formik';\nimport SurveyStep from './SurveyStep';\nimport StepName from './StepName';\n\nconst STEP_ID = 'survey';\n\nexport default function useSurveyStep(\n  launchConfig,\n  surveyConfig,\n  resource,\n  visitedSteps\n) {\n  const { setFieldError, values } = useFormikContext();\n  const hasError =\n    Object.keys(visitedSteps).includes(STEP_ID) &&\n    checkForError(launchConfig, surveyConfig, values);\n\n  return {\n    step: launchConfig.survey_enabled\n      ? {\n          id: STEP_ID,\n          name: (\n            <StepName hasErrors={hasError} id=\"survey-step\">\n              {t`Survey`}\n            </StepName>\n          ),\n          component: <SurveyStep surveyConfig={surveyConfig} />,\n          enableNext: true,\n        }\n      : null,\n    initialValues: getInitialValues(launchConfig, surveyConfig, resource),\n    surveyConfig,\n    isReady: true,\n    contentError: null,\n    hasError,\n    setTouched: (setFieldTouched) => {\n      if (!surveyConfig?.spec) {\n        return;\n      }\n      surveyConfig.spec.forEach((question) => {\n        setFieldTouched(`survey_${question.variable}`, true, false);\n      });\n    },\n    validate: () => {\n      if (launchConfig.survey_enabled && surveyConfig.spec) {\n        surveyConfig.spec.forEach((question) => {\n          const errMessage = validateSurveyField(\n            question,\n            values[`survey_${question.variable}`]\n          );\n          if (errMessage) {\n            setFieldError(`survey_${question.variable}`, errMessage);\n          }\n        });\n      }\n    },\n  };\n}\n\nfunction getInitialValues(launchConfig, surveyConfig, resource) {\n  if (!launchConfig.survey_enabled || !surveyConfig) {\n    return {};\n  }\n\n  const values = {};\n  if (surveyConfig?.spec) {\n    surveyConfig.spec.forEach((question) => {\n      if (resource?.extra_data && resource?.extra_data[question.variable]) {\n        values[`survey_${question.variable}`] =\n          resource.extra_data[question.variable];\n      } else if (question.type === 'multiselect') {\n        values[`survey_${question.variable}`] = question.default\n          ? question.default.split('\\n')\n          : [];\n      } else {\n        values[`survey_${question.variable}`] = question.default ?? '';\n      }\n    });\n  }\n  return values;\n}\n\nfunction validateSurveyField(question, value) {\n  const isTextField = ['text', 'textarea'].includes(question.type);\n  const isNumeric = ['integer', 'float'].includes(question.type);\n  if (isTextField && (value || value === 0)) {\n    if (question.min && value.length < question.min) {\n      return t`This field must be at least ${question.min} characters`;\n    }\n    if (question.max && value.length > question.max) {\n      return t`This field must not exceed ${question.max} characters`;\n    }\n  }\n  if (isNumeric && (value || value === 0)) {\n    if (value < question.min || value > question.max) {\n      return t`This field must be a number and have a value between ${question.min} and ${question.max}`;\n    }\n  }\n  if (question.required && !value && value !== 0) {\n    return t`This field must not be blank`;\n  }\n  return null;\n}\n\nfunction checkForError(launchConfig, surveyConfig, values) {\n  let hasError = false;\n  if (launchConfig.survey_enabled && surveyConfig.spec) {\n    surveyConfig.spec.forEach((question) => {\n      const value = values[`survey_${question.variable}`];\n      const isTextField = ['text', 'textarea'].includes(question.type);\n      const isNumeric = ['integer', 'float'].includes(question.type);\n      if (isTextField && (value || value === 0)) {\n        if (\n          (question.min && value.length < question.min) ||\n          (question.max && value.length > question.max)\n        ) {\n          hasError = true;\n        }\n      }\n      if (isNumeric) {\n        if (\n          (value < question.min || value > question.max || value === '') &&\n          question.required\n        ) {\n          hasError = true;\n        }\n      }\n      if (question.required && (!value || value.length === 0) && !isNumeric) {\n        hasError = true;\n      }\n    });\n  }\n\n  return hasError;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}