{"ast":null,"code":"import _toConsumableArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from'@lingui/core';import{en,fr,es,ko,nl,ja,zh,zu}from'make-plural/plurals';export var locales={en:'English',ja:'Japanese',zu:'Zulu',fr:'French',es:'Spanish',ko:'Korean',zh:'Chinese',nl:'Dutch'};i18n.loadLocaleData({en:{plurals:en},fr:{plurals:fr},es:{plurals:es},ko:{plurals:ko},nl:{plurals:nl},ja:{plurals:ja},zh:{plurals:zh},zu:{plurals:zu}});/**\n * We do a dynamic import of just the catalog that we need\n * @param locale any locale string\n */export function dynamicActivate(_x){return _dynamicActivate.apply(this,arguments);}function _dynamicActivate(){_dynamicActivate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(locale){var pseudolocalization,_yield$import,messages,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:pseudolocalization=_args.length>1&&_args[1]!==undefined?_args[1]:false;_context.next=3;return import(\"./locales/\".concat(locale,\"/messages\"));case 3:_yield$import=_context.sent;messages=_yield$import.messages;if(pseudolocalization){Object.keys(messages).forEach(function(key){if(Array.isArray(messages[key])){// t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>\", \"Foo \", ['param'], \"<<\"]\nmessages[key]=['»'].concat(_toConsumableArray(messages[key]),['«']);}else{// simple string\nmessages[key]=\"\\xBB\".concat(messages[key],\"\\xAB\");}});}i18n.load(locale,messages);i18n.activate(locale);case 8:case\"end\":return _context.stop();}}},_callee);}));return _dynamicActivate.apply(this,arguments);}","map":{"version":3,"names":["i18n","en","fr","es","ko","nl","ja","zh","zu","locales","loadLocaleData","plurals","dynamicActivate","_x","_dynamicActivate","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","locale","pseudolocalization","_yield$import","messages","_args","wrap","_callee$","_context","prev","next","length","undefined","concat","sent","Object","keys","forEach","key","Array","isArray","_toConsumableArray","load","activate","stop"],"sources":["/awx_devel/awx/ui/src/i18nLoader.js"],"sourcesContent":["import { i18n } from '@lingui/core';\nimport { en, fr, es, ko, nl, ja, zh, zu } from 'make-plural/plurals';\n\nexport const locales = {\n  en: 'English',\n  ja: 'Japanese',\n  zu: 'Zulu',\n  fr: 'French',\n  es: 'Spanish',\n  ko: 'Korean',\n  zh: 'Chinese',\n  nl: 'Dutch',\n};\n\ni18n.loadLocaleData({\n  en: { plurals: en },\n  fr: { plurals: fr },\n  es: { plurals: es },\n  ko: { plurals: ko },\n  nl: { plurals: nl },\n  ja: { plurals: ja },\n  zh: { plurals: zh },\n  zu: { plurals: zu },\n});\n\n/**\n * We do a dynamic import of just the catalog that we need\n * @param locale any locale string\n */\nexport async function dynamicActivate(locale, pseudolocalization = false) {\n  const { messages } = await import(`./locales/${locale}/messages`);\n\n  if (pseudolocalization) {\n    Object.keys(messages).forEach((key) => {\n      if (Array.isArray(messages[key])) {\n        // t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>\", \"Foo \", ['param'], \"<<\"]\n        messages[key] = ['»', ...messages[key], '«'];\n      } else {\n        // simple string\n        messages[key] = `»${messages[key]}«`;\n      }\n    });\n  }\n\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n}\n"],"mappings":"gUAAA,OAASA,IAAI,KAAQ,cAAc,CACnC,OAASC,EAAE,CAAEC,EAAE,CAAEC,EAAE,CAAEC,EAAE,CAAEC,EAAE,CAAEC,EAAE,CAAEC,EAAE,CAAEC,EAAE,KAAQ,qBAAqB,CAEpE,MAAO,IAAM,CAAAC,OAAO,CAAG,CACrBR,EAAE,CAAE,SAAS,CACbK,EAAE,CAAE,UAAU,CACdE,EAAE,CAAE,MAAM,CACVN,EAAE,CAAE,QAAQ,CACZC,EAAE,CAAE,SAAS,CACbC,EAAE,CAAE,QAAQ,CACZG,EAAE,CAAE,SAAS,CACbF,EAAE,CAAE,OACN,CAAC,CAEDL,IAAI,CAACU,cAAc,CAAC,CAClBT,EAAE,CAAE,CAAEU,OAAO,CAAEV,EAAG,CAAC,CACnBC,EAAE,CAAE,CAAES,OAAO,CAAET,EAAG,CAAC,CACnBC,EAAE,CAAE,CAAEQ,OAAO,CAAER,EAAG,CAAC,CACnBC,EAAE,CAAE,CAAEO,OAAO,CAAEP,EAAG,CAAC,CACnBC,EAAE,CAAE,CAAEM,OAAO,CAAEN,EAAG,CAAC,CACnBC,EAAE,CAAE,CAAEK,OAAO,CAAEL,EAAG,CAAC,CACnBC,EAAE,CAAE,CAAEI,OAAO,CAAEJ,EAAG,CAAC,CACnBC,EAAE,CAAE,CAAEG,OAAO,CAAEH,EAAG,CACpB,CAAC,CAAC,CAEF;AACA;AACA;AACA,GACA,eAAsB,CAAAI,eAAeA,CAAAC,EAAA,SAAAC,gBAAA,CAAAC,KAAA,MAAAC,SAAA,GAiBpC,SAAAF,iBAAA,EAAAA,gBAAA,CAAAG,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,CAjBM,SAAAC,QAA+BC,MAAM,MAAAC,kBAAA,CAAAC,aAAA,CAAAC,QAAA,CAAAC,KAAA,CAAAT,SAAA,QAAAE,mBAAA,CAAAQ,IAAA,UAAAC,SAAAC,QAAA,kBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAER,kBAAkB,CAAAG,KAAA,CAAAM,MAAA,IAAAN,KAAA,MAAAO,SAAA,CAAAP,KAAA,IAAG,KAAK,CAAAG,QAAA,CAAAE,IAAA,SAC3C,OAAM,cAAAG,MAAA,CAAcZ,MAAM,aAAW,CAAC,QAAAE,aAAA,CAAAK,QAAA,CAAAM,IAAA,CAAzDV,QAAQ,CAAAD,aAAA,CAARC,QAAQ,CAEhB,GAAIF,kBAAkB,CAAE,CACtBa,MAAM,CAACC,IAAI,CAACZ,QAAQ,CAAC,CAACa,OAAO,CAAC,SAACC,GAAG,CAAK,CACrC,GAAIC,KAAK,CAACC,OAAO,CAAChB,QAAQ,CAACc,GAAG,CAAC,CAAC,CAAE,CAChC;AACAd,QAAQ,CAACc,GAAG,CAAC,EAAI,GAAG,EAAAL,MAAA,CAAAQ,kBAAA,CAAKjB,QAAQ,CAACc,GAAG,CAAC,GAAE,GAAG,EAAC,CAC9C,CAAC,IAAM,CACL;AACAd,QAAQ,CAACc,GAAG,CAAC,QAAAL,MAAA,CAAOT,QAAQ,CAACc,GAAG,CAAC,QAAG,CACtC,CACF,CAAC,CAAC,CACJ,CAEAtC,IAAI,CAAC0C,IAAI,CAACrB,MAAM,CAAEG,QAAQ,CAAC,CAC3BxB,IAAI,CAAC2C,QAAQ,CAACtB,MAAM,CAAC,CAAC,wBAAAO,QAAA,CAAAgB,IAAA,OAAAxB,OAAA,GACvB,UAAAN,gBAAA,CAAAC,KAAA,MAAAC,SAAA"},"metadata":{},"sourceType":"module"}