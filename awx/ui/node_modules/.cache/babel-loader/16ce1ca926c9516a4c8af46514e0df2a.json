{"ast":null,"code":"/**\n * resolve-row-key.ts\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\n/**\n * @param {{rowData: RowType, rowIndex: number, rowKey: RowKeyType}} rowData - row data\n */\nexport function resolveRowKey(_ref) {\n  var rowData = _ref.rowData,\n    rowIndex = _ref.rowIndex,\n    rowKey = _ref.rowKey;\n  if (typeof rowKey === 'function') {\n    return \"\".concat(rowKey({\n      rowData: rowData,\n      rowIndex: rowIndex\n    }), \"-row\");\n  } else if (process.env.NODE_ENV !== 'production') {\n    // Arrays cannot have rowKeys by definition so we have to go by index there.\n    if (!Array.isArray(rowData) && rowData[rowKey] === undefined) {\n      // eslint-disable-next-line no-console\n      console.warn('Table.Body - Missing valid rowKey!', rowData, rowKey);\n    }\n  }\n  if (rowData[rowKey] === 0) {\n    return \"\".concat(rowData[rowKey], \"-row\");\n  }\n  return \"\".concat(rowData[rowKey] || rowIndex, \"-row\");\n}","map":{"version":3,"names":["resolveRowKey","_ref","rowData","rowIndex","rowKey","concat","process","env","NODE_ENV","Array","isArray","undefined","console","warn"],"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/base/resolve-row-key.ts"],"sourcesContent":["/**\n * resolve-row-key.ts\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\n\nimport { RowType, RowKeyType } from './types';\n\n/**\n * @param {{rowData: RowType, rowIndex: number, rowKey: RowKeyType}} rowData - row data\n */\nexport function resolveRowKey({\n  rowData,\n  rowIndex,\n  rowKey\n}: {\n  rowData: RowType;\n  rowIndex: number;\n  rowKey: RowKeyType;\n}) {\n  if (typeof rowKey === 'function') {\n    return `${rowKey({ rowData, rowIndex })}-row`;\n  } else if (process.env.NODE_ENV !== 'production') {\n    // Arrays cannot have rowKeys by definition so we have to go by index there.\n    if (!Array.isArray(rowData) && (rowData as any)[rowKey] === undefined) {\n      // eslint-disable-next-line no-console\n      console.warn('Table.Body - Missing valid rowKey!', rowData, rowKey);\n    }\n  }\n\n  if ((rowData as any)[rowKey] === 0) {\n    return `${(rowData as any)[rowKey] as string}-row`;\n  }\n\n  return `${((rowData as any)[rowKey] as string) || rowIndex}-row`;\n}\n"],"mappings":"AAAA;;;;;;AASA;;;AAGA,OAAM,SAAUA,aAAaA,CAAAC,IAAA,EAQ5B;EAAA,IAPCC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IACPC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IACRC,MAAM,GAAAH,IAAA,CAANG,MAAM;EAMN,IAAI,OAAOA,MAAM,KAAK,UAAU,EAAE;IAChC,UAAAC,MAAA,CAAUD,MAAM,CAAC;MAAEF,OAAO,EAAPA,OAAO;MAAEC,QAAQ,EAARA;IAAQ,CAAE,CAAC;GACxC,MAAM,IAAIG,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IAChD;IACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACR,OAAO,CAAC,IAAKA,OAAe,CAACE,MAAM,CAAC,KAAKO,SAAS,EAAE;MACrE;MACAC,OAAO,CAACC,IAAI,CAAC,oCAAoC,EAAEX,OAAO,EAAEE,MAAM,CAAC;;;EAIvE,IAAKF,OAAe,CAACE,MAAM,CAAC,KAAK,CAAC,EAAE;IAClC,UAAAC,MAAA,CAAWH,OAAe,CAACE,MAAM,CAAW;;EAG9C,UAAAC,MAAA,CAAYH,OAAe,CAACE,MAAM,CAAY,IAAID,QAAQ;AAC5D"},"metadata":{},"sourceType":"module"}