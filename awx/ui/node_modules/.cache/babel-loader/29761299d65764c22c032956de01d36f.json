{"ast":null,"code":"import{Trans}from\"@lingui/react\";import{i18n}from\"@lingui/core\";/* eslint-disable react/destructuring-assignment */import React from'react';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ansibleDocUrls={ec2:'https://docs.ansible.com/ansible/latest/collections/amazon/aws/aws_ec2_inventory.html',azure_rm:'https://docs.ansible.com/ansible/latest/collections/azure/azcollection/azure_rm_inventory.html',controller:'https://docs.ansible.com/ansible/latest/collections/awx/awx/tower_inventory.html',gce:'https://docs.ansible.com/ansible/latest/collections/google/cloud/gcp_compute_inventory.html',insights:'https://docs.ansible.com/ansible/latest/collections/redhatinsights/insights/insights_inventory.html',openstack:'https://docs.ansible.com/ansible/latest/collections/openstack/cloud/openstack_inventory.html',satellite6:'https://docs.ansible.com/ansible/latest/collections/theforeman/foreman/foreman_inventory.html',rhv:'https://docs.ansible.com/ansible/latest/collections/ovirt/ovirt/ovirt_inventory.html',vmware:'https://docs.ansible.com/ansible/latest/collections/community/vmware/vmware_vm_inventory_inventory.html',constructed:'https://docs.ansible.com/ansible/latest/collections/ansible/builtin/constructed_inventory.html',terraform:'https://github.com/ansible-collections/cloud.terraform/blob/main/docs/cloud.terraform.terraform_state_inventory.rst',openshift_virtualization:'https://kubevirt.io/kubevirt.core/latest/plugins/kubevirt.html'};var getInventoryHelpTextStrings=function getInventoryHelpTextStrings(){return{labels:/*i18n*/i18n._(\"Optional labels that describe this inventory,\\nsuch as 'dev' or 'test'. Labels can be used to group and filter\\ninventories and completed jobs.\"),variables:function variables(){var jsonExample=\"\\n      {\\n        \\\"somevar\\\": \\\"somevalue\\\"\\n        \\\"somepassword\\\": \\\"Magic\\\"\\n      }\\n    \";var yamlExample=\"\\n      ---\\n      somevar: somevalue\\n      somepassword: magic\\n    \";return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Trans,{id:\"Variables must be in JSON or YAML syntax. Use the radio button to toggle between the two.\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Trans,{id:\"JSON:\"}),/*#__PURE__*/_jsx(\"pre\",{children:jsonExample}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Trans,{id:\"YAML:\"}),/*#__PURE__*/_jsx(\"pre\",{children:yamlExample}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Trans,{id:\"View JSON examples at <0>www.json.org</0>\",components:{0:/*#__PURE__*/_jsx(\"a\",{href:\"http://www.json.org\",target:\"_blank\",rel:\"noopener noreferrer\"})}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Trans,{id:\"View YAML examples at <0>docs.ansible.com</0>\",components:{0:/*#__PURE__*/_jsx(\"a\",{href:\"http://docs.ansible.com/YAMLSyntax.html\",target:\"_blank\",rel:\"noopener noreferrer\"})}})]});},subFormVerbosityFields:/*i18n*/i18n._(\"Control the level of output Ansible\\nwill produce for inventory source update jobs.\"),subFormOptions:{overwrite:/*#__PURE__*/_jsxs(_Fragment,{children:[/*i18n*/i18n._(\"If checked, any hosts and groups that were\\npreviously present on the external source but are now removed\\nwill be removed from the inventory. Hosts and groups\\nthat were not managed by the inventory source will be promoted\\nto the next manually created group or if there is no manually\\ncreated group to promote them into, they will be left in the \\\"all\\\"\\ndefault group for the inventory.\"),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*i18n*/i18n._(\"When not checked, local child\\nhosts and groups not found on the external source will remain\\nuntouched by the inventory update process.\")]}),overwriteVariables:/*#__PURE__*/_jsxs(_Fragment,{children:[/*i18n*/i18n._(\"If checked, all variables for child groups\\nand hosts will be removed and replaced by those found\\non the external source.\"),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*i18n*/i18n._(\"When not checked, a merge will be performed,\\ncombining local variables with those found on the\\nexternal source.\")]}),updateOnLaunch:function updateOnLaunch(_ref){var value=_ref.value;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:/*i18n*/i18n._(\"Each time a job runs using this inventory,\\nrefresh the inventory from the selected source before\\nexecuting job tasks.\")}),/*#__PURE__*/_jsx(\"br\",{}),value&&/*#__PURE__*/_jsxs(\"div\",{children:[/*i18n*/i18n._(\"If you want the Inventory Source to update on launch , click on Update on Launch,\\nand also go to\"),/*#__PURE__*/_jsxs(Link,{to:\"/projects/\".concat(value.id,\"/details\"),children:[\" \",value.name,\" \"]}),/*i18n*/i18n._(\"and click on Update Revision on Launch.\")]})]});},updateOnProjectUpdate:function updateOnProjectUpdate(_ref2){var value=_ref2.value;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:/*i18n*/i18n._(\"After every project update where the SCM revision\\nchanges, refresh the inventory from the selected source\\nbefore executing job tasks. This is intended for static content,\\nlike the Ansible inventory .ini file format.\")}),/*#__PURE__*/_jsx(\"br\",{}),value&&/*#__PURE__*/_jsxs(\"div\",{children:[/*i18n*/i18n._(\"If you want the Inventory Source to update on launch , click on Update on Launch,\\nand also go to\"),/*#__PURE__*/_jsxs(Link,{to:\"/projects/\".concat(value.id,\"/details\"),children:[\" \",value.name,\" \"]}),/*i18n*/i18n._(\"and click on Update Revision on Launch\")]})]});},cachedTimeOut:/*i18n*/i18n._(\"Time in seconds to consider an inventory sync\\nto be current. During job runs and callbacks the task system will\\nevaluate the timestamp of the latest sync. If it is older than\\nCache Timeout, it is not considered current, and a new\\ninventory sync will be performed.\")},enabledVariableField:/*i18n*/i18n._(\"Retrieve the enabled state from the given dict of host variables.\\nThe enabled variable may be specified using dot notation, e.g: 'foo.bar'\"),sourceControlBranch:/*i18n*/i18n._(\"Branch to use on inventory sync. Project default used if blank. Only allowed if project allow_override field is set to true.\"),enabledValue:/*i18n*/i18n._(\"This field is ignored unless an Enabled Variable is set. If the enabled variable matches this value, the host will be enabled on import.\"),hostFilter:/*i18n*/i18n._(\"Regular expression where only matching host names will be imported. The filter is applied as a post-processing step after any inventory plugin filters are applied.\"),sourceVars:function sourceVars(docsBaseUrl,source){var docsUrl=\"\".concat(docsBaseUrl,\"/html/userguide/inventories.html#inventory-plugins\");var sourceType='';if(source&&source!=='scm'){var type=ansibleDocUrls[source].split(/[/,.]/);sourceType=type[type.length-2];}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Trans,{id:\"Variables used to configure the inventory source. For a detailed description of how to configure this plugin, see <0>Inventory Plugins</0> in the documentation and the <1>{sourceType}</1> plugin configuration guide.\",values:{sourceType:sourceType},components:{0:/*#__PURE__*/_jsx(\"a\",{href:docsBaseUrl?docsUrl:'',target:\"_blank\",rel:\"noopener noreferrer\"}),1:/*#__PURE__*/_jsx(\"a\",{href:ansibleDocUrls[source],target:\"_blank\",rel:\"noopener noreferrer\"})}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{})]});},constructedInventorySourceVars:function constructedInventorySourceVars(){var yamlExample=\"\\n      ---\\n      plugin: constructed\\n      strict: true\\n      use_vars_plugins: true\\n    \";return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Trans,{id:\"Variables used to configure the constructed inventory plugin. For a detailed description of how to configure this plugin, see <0>constructed inventory</0> plugin configuration guide.\",components:{0:/*#__PURE__*/_jsx(\"a\",{href:ansibleDocUrls.constructed,target:\"_blank\",rel:\"noopener noreferrer\"})}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Trans,{id:\"Variables must be in JSON or YAML syntax. Use the radio button to toggle between the two.\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Trans,{id:\"YAML:\"}),/*#__PURE__*/_jsx(\"pre\",{children:yamlExample})]});},sourcePath:/*i18n*/i18n._(\"The inventory file\\nto be synced by this source. You can select from\\nthe dropdown or enter a file within the input.\"),preventInstanceGroupFallback:/*i18n*/i18n._(\"If enabled, the inventory will prevent adding any organization instance groups to the list of preferred instances groups to run associated job templates on.\\nNote: If this setting is enabled and you provided an empty list, the global instance groups will be applied.\"),enabledOptions:/*#__PURE__*/_jsx(\"p\",{children:/*i18n*/i18n._(\"Prevent Instance Group Fallback: If enabled, the inventory will prevent adding any organization instance groups to the list of preferred instances groups to run associated job templates on.\")})};};export default getInventoryHelpTextStrings;","map":{"version":3,"names":["React","Link","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ansibleDocUrls","ec2","azure_rm","controller","gce","insights","openstack","satellite6","rhv","vmware","constructed","terraform","openshift_virtualization","getInventoryHelpTextStrings","labels","i18n","_","variables","jsonExample","yamlExample","children","Trans","id","components","0","href","target","rel","subFormVerbosityFields","subFormOptions","overwrite","overwriteVariables","updateOnLaunch","_ref","value","to","concat","name","updateOnProjectUpdate","_ref2","cachedTimeOut","enabledVariableField","sourceControlBranch","enabledValue","hostFilter","sourceVars","docsBaseUrl","source","docsUrl","sourceType","type","split","length","values","1","constructedInventorySourceVars","sourcePath","preventInstanceGroupFallback","enabledOptions"],"sources":["/awx_devel/awx/ui/src/screens/Inventory/shared/Inventory.helptext.js"],"sourcesContent":["/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport { Link } from 'react-router-dom';\n\nconst ansibleDocUrls = {\n  ec2: 'https://docs.ansible.com/ansible/latest/collections/amazon/aws/aws_ec2_inventory.html',\n  azure_rm:\n    'https://docs.ansible.com/ansible/latest/collections/azure/azcollection/azure_rm_inventory.html',\n  controller:\n    'https://docs.ansible.com/ansible/latest/collections/awx/awx/tower_inventory.html',\n  gce: 'https://docs.ansible.com/ansible/latest/collections/google/cloud/gcp_compute_inventory.html',\n  insights:\n    'https://docs.ansible.com/ansible/latest/collections/redhatinsights/insights/insights_inventory.html',\n  openstack:\n    'https://docs.ansible.com/ansible/latest/collections/openstack/cloud/openstack_inventory.html',\n  satellite6:\n    'https://docs.ansible.com/ansible/latest/collections/theforeman/foreman/foreman_inventory.html',\n  rhv: 'https://docs.ansible.com/ansible/latest/collections/ovirt/ovirt/ovirt_inventory.html',\n  vmware:\n    'https://docs.ansible.com/ansible/latest/collections/community/vmware/vmware_vm_inventory_inventory.html',\n  constructed:\n    'https://docs.ansible.com/ansible/latest/collections/ansible/builtin/constructed_inventory.html',\n  terraform:\n    'https://github.com/ansible-collections/cloud.terraform/blob/main/docs/cloud.terraform.terraform_state_inventory.rst',\n  openshift_virtualization:\n    'https://kubevirt.io/kubevirt.core/latest/plugins/kubevirt.html',\n};\n\nconst getInventoryHelpTextStrings = () => ({\n  labels: t`Optional labels that describe this inventory,\n          such as 'dev' or 'test'. Labels can be used to group and filter\n          inventories and completed jobs.`,\n  variables: () => {\n    const jsonExample = `\n      {\n        \"somevar\": \"somevalue\"\n        \"somepassword\": \"Magic\"\n      }\n    `;\n    const yamlExample = `\n      ---\n      somevar: somevalue\n      somepassword: magic\n    `;\n\n    return (\n      <>\n        <Trans>\n          Variables must be in JSON or YAML syntax. Use the radio button to\n          toggle between the two.\n        </Trans>\n        <br />\n        <br />\n        <Trans>JSON:</Trans>\n        <pre>{jsonExample}</pre>\n        <br />\n        <Trans>YAML:</Trans>\n        <pre>{yamlExample}</pre>\n        <br />\n        <Trans>\n          View JSON examples at{' '}\n          <a\n            href=\"http://www.json.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            www.json.org\n          </a>\n        </Trans>\n        <br />\n        <Trans>\n          View YAML examples at{' '}\n          <a\n            href=\"http://docs.ansible.com/YAMLSyntax.html\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            docs.ansible.com\n          </a>\n        </Trans>\n      </>\n    );\n  },\n  subFormVerbosityFields: t`Control the level of output Ansible\n        will produce for inventory source update jobs.`,\n  subFormOptions: {\n    overwrite: (\n      <>\n        {t`If checked, any hosts and groups that were\n                  previously present on the external source but are now removed\n                  will be removed from the inventory. Hosts and groups\n                  that were not managed by the inventory source will be promoted\n                  to the next manually created group or if there is no manually\n                  created group to promote them into, they will be left in the \"all\"\n                  default group for the inventory.`}\n        <br />\n        <br />\n        {t`When not checked, local child\n                  hosts and groups not found on the external source will remain\n                  untouched by the inventory update process.`}\n      </>\n    ),\n    overwriteVariables: (\n      <>\n        {t`If checked, all variables for child groups\n                  and hosts will be removed and replaced by those found\n                  on the external source.`}\n        <br />\n        <br />\n        {t`When not checked, a merge will be performed,\n                  combining local variables with those found on the\n                  external source.`}\n      </>\n    ),\n    updateOnLaunch: ({ value }) => (\n      <>\n        <div>\n          {t`Each time a job runs using this inventory,\n            refresh the inventory from the selected source before\n            executing job tasks.`}\n        </div>\n        <br />\n        {value && (\n          <div>\n            {t`If you want the Inventory Source to update on launch , click on Update on Launch,\n            and also go to `}\n            <Link to={`/projects/${value.id}/details`}> {value.name} </Link>\n            {t`and click on Update Revision on Launch.`}\n          </div>\n        )}\n      </>\n    ),\n    updateOnProjectUpdate: ({ value }) => (\n      <>\n        <div>\n          {t`After every project update where the SCM revision\n              changes, refresh the inventory from the selected source\n              before executing job tasks. This is intended for static content,\n              like the Ansible inventory .ini file format.`}\n        </div>\n        <br />\n        {value && (\n          <div>\n            {t`If you want the Inventory Source to update on launch , click on Update on Launch,\n            and also go to `}\n            <Link to={`/projects/${value.id}/details`}> {value.name} </Link>\n            {t`and click on Update Revision on Launch`}\n          </div>\n        )}\n      </>\n    ),\n    cachedTimeOut: t`Time in seconds to consider an inventory sync\n              to be current. During job runs and callbacks the task system will\n              evaluate the timestamp of the latest sync. If it is older than\n              Cache Timeout, it is not considered current, and a new\n              inventory sync will be performed.`,\n  },\n  enabledVariableField: t`Retrieve the enabled state from the given dict of host variables.\n        The enabled variable may be specified using dot notation, e.g: 'foo.bar'`,\n  sourceControlBranch: t`Branch to use on inventory sync. Project default used if blank. Only allowed if project allow_override field is set to true.`,\n  enabledValue: t`This field is ignored unless an Enabled Variable is set. If the enabled variable matches this value, the host will be enabled on import.`,\n  hostFilter: t`Regular expression where only matching host names will be imported. The filter is applied as a post-processing step after any inventory plugin filters are applied.`,\n  sourceVars: (docsBaseUrl, source) => {\n    const docsUrl = `${docsBaseUrl}/html/userguide/inventories.html#inventory-plugins`;\n    let sourceType = '';\n    if (source && source !== 'scm') {\n      const type = ansibleDocUrls[source].split(/[/,.]/);\n      sourceType = type[type.length - 2];\n    }\n    return (\n      <>\n        <Trans>\n          Variables used to configure the inventory source. For a detailed\n          description of how to configure this plugin, see{' '}\n          <a\n            href={docsBaseUrl ? docsUrl : ''}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Inventory Plugins\n          </a>{' '}\n          in the documentation and the{' '}\n          <a\n            href={ansibleDocUrls[source]}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {sourceType}\n          </a>{' '}\n          plugin configuration guide.\n        </Trans>\n        <br />\n        <br />\n      </>\n    );\n  },\n  constructedInventorySourceVars: () => {\n    const yamlExample = `\n      ---\n      plugin: constructed\n      strict: true\n      use_vars_plugins: true\n    `;\n    return (\n      <>\n        <Trans>\n          Variables used to configure the constructed inventory plugin. For a\n          detailed description of how to configure this plugin, see{' '}\n          <a\n            href={ansibleDocUrls.constructed}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            constructed inventory\n          </a>{' '}\n          plugin configuration guide.\n        </Trans>\n        <br />\n        <br />\n        <hr />\n        <br />\n        <Trans>\n          Variables must be in JSON or YAML syntax. Use the radio button to\n          toggle between the two.\n        </Trans>\n        <br />\n        <br />\n        <Trans>YAML:</Trans>\n        <pre>{yamlExample}</pre>\n      </>\n    );\n  },\n  sourcePath: t`The inventory file\n          to be synced by this source. You can select from\n          the dropdown or enter a file within the input.`,\n  preventInstanceGroupFallback: t`If enabled, the inventory will prevent adding any organization instance groups to the list of preferred instances groups to run associated job templates on.\n          Note: If this setting is enabled and you provided an empty list, the global instance groups will be applied.`,\n  enabledOptions: (\n    <p>{t`Prevent Instance Group Fallback: If enabled, the inventory will prevent adding any organization instance groups to the list of preferred instances groups to run associated job templates on.`}</p>\n  ),\n});\n\nexport default getInventoryHelpTextStrings;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}