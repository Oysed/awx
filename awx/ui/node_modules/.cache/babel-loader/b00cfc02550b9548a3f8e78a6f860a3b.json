{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _taggedTemplateLiteral from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import{i18n}from\"@lingui/core\";import React from'react';import{Link as _Link}from'react-router-dom';import{Tooltip}from'@patternfly/react-core';import styled from'styled-components';import{formatDateString}from'util/dates';import{Job}from'types';import StatusIcon from'../StatusIcon';import{JOB_TYPE_URL_SEGMENTS}from'../../constants';/* eslint-disable react/jsx-pascal-case */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Link=styled(function(props){return/*#__PURE__*/_jsx(_Link,_objectSpread({},props));})(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-right: 5px;\\n\"])));var Wrapper=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: inline-flex;\\n  flex-wrap: wrap;\\n\"])));/* eslint-enable react/jsx-pascal-case */var Sparkline=function Sparkline(_ref){var jobs=_ref.jobs;var generateTooltip=function generateTooltip(job){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*i18n*/i18n._(\"JOB ID:\"),\" \",job.id]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*i18n*/i18n._(\"STATUS:\"),\" \",job.status.toUpperCase()]}),job.finished&&/*#__PURE__*/_jsxs(\"div\",{children:[/*i18n*/i18n._(\"FINISHED:\"),\" \",formatDateString(job.finished)]})]});};var statusIcons=jobs.map(function(job){return/*#__PURE__*/_jsx(Tooltip,{position:\"top\",content:generateTooltip(job),children:/*#__PURE__*/_jsx(Link,{\"aria-label\":/*i18n*/i18n._(\"View job {0}\",{0:job.id}),to:\"/jobs/\".concat(JOB_TYPE_URL_SEGMENTS[job.type],\"/\").concat(job.id),children:/*#__PURE__*/_jsx(StatusIcon,{status:job.status})})},job.id);});return/*#__PURE__*/_jsx(Wrapper,{children:statusIcons});};Sparkline.defaultProps={jobs:[]};export default Sparkline;","map":{"version":3,"names":["React","Link","_Link","Tooltip","styled","formatDateString","Job","StatusIcon","JOB_TYPE_URL_SEGMENTS","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","props","_objectSpread","_templateObject","_taggedTemplateLiteral","Wrapper","div","_templateObject2","Sparkline","_ref","jobs","generateTooltip","job","children","i18n","_","id","status","toUpperCase","finished","statusIcons","map","position","content","0","to","concat","type","defaultProps"],"sources":["/awx_devel/awx/ui/src/components/Sparkline/Sparkline.js"],"sourcesContent":["import React from 'react';\nimport { arrayOf } from 'prop-types';\n\nimport { Link as _Link } from 'react-router-dom';\nimport { Tooltip } from '@patternfly/react-core';\nimport styled from 'styled-components';\nimport { t } from '@lingui/macro';\nimport { formatDateString } from 'util/dates';\nimport { Job } from 'types';\nimport StatusIcon from '../StatusIcon';\nimport { JOB_TYPE_URL_SEGMENTS } from '../../constants';\n\n/* eslint-disable react/jsx-pascal-case */\nconst Link = styled((props) => <_Link {...props} />)`\n  margin-right: 5px;\n`;\n\nconst Wrapper = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n`;\n/* eslint-enable react/jsx-pascal-case */\n\nconst Sparkline = ({ jobs }) => {\n  const generateTooltip = (job) => (\n    <>\n      <div>\n        {t`JOB ID:`} {job.id}\n      </div>\n      <div>\n        {t`STATUS:`} {job.status.toUpperCase()}\n      </div>\n      {job.finished && (\n        <div>\n          {t`FINISHED:`} {formatDateString(job.finished)}\n        </div>\n      )}\n    </>\n  );\n\n  const statusIcons = jobs.map((job) => (\n    <Tooltip position=\"top\" content={generateTooltip(job)} key={job.id}>\n      <Link\n        aria-label={t`View job ${job.id}`}\n        to={`/jobs/${JOB_TYPE_URL_SEGMENTS[job.type]}/${job.id}`}\n      >\n        <StatusIcon status={job.status} />\n      </Link>\n    </Tooltip>\n  ));\n\n  return <Wrapper>{statusIcons}</Wrapper>;\n};\n\nSparkline.propTypes = {\n  jobs: arrayOf(Job),\n};\nSparkline.defaultProps = {\n  jobs: [],\n};\n\nexport default Sparkline;\n"],"mappings":"iSAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAGzB,OAASC,IAAI,GAAI,CAAAC,KAAK,KAAQ,kBAAkB,CAChD,OAASC,OAAO,KAAQ,wBAAwB,CAChD,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CAEtC,OAASC,gBAAgB,KAAQ,YAAY,CAC7C,OAASC,GAAG,KAAQ,OAAO,CAC3B,MAAO,CAAAC,UAAU,KAAM,eAAe,CACtC,OAASC,qBAAqB,KAAQ,iBAAiB,CAEvD,iDAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBACA,GAAM,CAAAb,IAAI,CAAGG,MAAM,CAAC,SAACW,KAAK,qBAAKL,IAAA,CAACR,KAAK,CAAAc,aAAA,IAAKD,KAAK,CAAG,CAAC,GAAC,CAAAE,eAAA,GAAAA,eAAA,CAAAC,sBAAA,gCAEnD,CAED,GAAM,CAAAC,OAAO,CAAGf,MAAM,CAACgB,GAAG,CAAAC,gBAAA,GAAAA,gBAAA,CAAAH,sBAAA,uDAGzB,CACD,yCAEA,GAAM,CAAAI,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAAC,IAAA,CAAiB,IAAX,CAAAC,IAAI,CAAAD,IAAA,CAAJC,IAAI,CACvB,GAAM,CAAAC,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAIC,GAAG,qBAC1Bd,KAAA,CAAAE,SAAA,EAAAa,QAAA,eACEf,KAAA,QAAAe,QAAA,UACGC,IAAA,CAAAC,CAAA,UAAS,CAAC,CAAC,GAAC,CAACH,GAAG,CAACI,EAAE,EACjB,CAAC,cACNlB,KAAA,QAAAe,QAAA,UACGC,IAAA,CAAAC,CAAA,UAAS,CAAC,CAAC,GAAC,CAACH,GAAG,CAACK,MAAM,CAACC,WAAW,CAAC,CAAC,EACnC,CAAC,CACLN,GAAG,CAACO,QAAQ,eACXrB,KAAA,QAAAe,QAAA,UACGC,IAAA,CAAAC,CAAA,YAAW,CAAC,CAAC,GAAC,CAACxB,gBAAgB,CAACqB,GAAG,CAACO,QAAQ,CAAC,EAC3C,CACN,EACD,CAAC,EACJ,CAED,GAAM,CAAAC,WAAW,CAAGV,IAAI,CAACW,GAAG,CAAC,SAACT,GAAG,qBAC/BhB,IAAA,CAACP,OAAO,EAACiC,QAAQ,CAAC,KAAK,CAACC,OAAO,CAAEZ,eAAe,CAACC,GAAG,CAAE,CAAAC,QAAA,cACpDjB,IAAA,CAACT,IAAI,EACH,qBAAY2B,IAAA,CAAAC,CAAA,iBAAAS,CAAA,CAAaZ,GAAG,CAACI,EAAE,CAAC,CAAE,CAClCS,EAAE,UAAAC,MAAA,CAAWhC,qBAAqB,CAACkB,GAAG,CAACe,IAAI,CAAC,MAAAD,MAAA,CAAId,GAAG,CAACI,EAAE,CAAG,CAAAH,QAAA,cAEzDjB,IAAA,CAACH,UAAU,EAACwB,MAAM,CAAEL,GAAG,CAACK,MAAO,CAAE,CAAC,CAC9B,CAAC,EANmDL,GAAG,CAACI,EAOvD,CAAC,EACX,CAAC,CAEF,mBAAOpB,IAAA,CAACS,OAAO,EAAAQ,QAAA,CAAEO,WAAW,CAAU,CAAC,CACzC,CAAC,CAKDZ,SAAS,CAACoB,YAAY,CAAG,CACvBlB,IAAI,CAAE,EACR,CAAC,CAED,cAAe,CAAAF,SAAS"},"metadata":{},"sourceType":"module"}