{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{i18n}from\"@lingui/core\";import React from'react';import{Formik,useField}from'formik';import{Form,FormGroup,CardBody}from'@patternfly/react-core';import{FormColumnLayout}from'components/FormLayout';import FormField,{FormSubmitError,CheckboxField}from'components/FormField';import FormActionGroup from'components/FormActionGroup';import AnsibleSelect from'components/AnsibleSelect';import{required}from'util/validators';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var INSTANCE_TYPES=[{id:'execution',name:/*i18n*/i18n._(\"Execution\")},{id:'hop',name:/*i18n*/i18n._(\"Hop\")}];function InstanceFormFields(_ref){var isEdit=_ref.isEdit;var _useField=useField({name:'node_type',validate:required(/*i18n*/i18n._(\"Set a value for this field\"))}),_useField2=_slicedToArray(_useField,3),instanceTypeField=_useField2[0],instanceTypeMeta=_useField2[1],instanceTypeHelpers=_useField2[2];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormField,{id:\"hostname\",label:/*i18n*/i18n._(\"Host Name\"),name:\"hostname\",type:\"text\",validate:required(null),isRequired:true,isDisabled:isEdit}),/*#__PURE__*/_jsx(FormField,{id:\"instance-description\",label:/*i18n*/i18n._(\"Description\"),name:\"description\",type:\"text\"}),/*#__PURE__*/_jsx(FormField,{id:\"instance-state\",label:/*i18n*/i18n._(\"Instance State\"),name:\"node_state\",type:\"text\",tooltip:/*i18n*/i18n._(\"Sets the current life cycle stage of this instance. Default is \\\"installed.\\\"\"),isDisabled:true}),/*#__PURE__*/_jsx(FormField,{id:\"instance-port\",label:/*i18n*/i18n._(\"Listener Port\"),name:\"listener_port\",type:\"number\",tooltip:/*i18n*/i18n._(\"Select the port that Receptor will listen on for incoming connections, e.g. 27199.\")}),/*#__PURE__*/_jsx(FormGroup,{fieldId:\"instance-type\",label:/*i18n*/i18n._(\"Instance Type\"),tooltip:/*i18n*/i18n._(\"Sets the role that this instance will play within mesh topology. Default is \\\"execution.\\\"\"),validated:!instanceTypeMeta.touched||!instanceTypeMeta.error?'default':'error',helperTextInvalid:instanceTypeMeta.error,isRequired:true,children:/*#__PURE__*/_jsx(AnsibleSelect,_objectSpread(_objectSpread({},instanceTypeField),{},{id:\"node_type\",data:INSTANCE_TYPES.map(function(type){return{key:type.id,value:type.id,label:type.name};}),onChange:function onChange(event,value){instanceTypeHelpers.setValue(value);},isDisabled:isEdit}))}),/*#__PURE__*/_jsxs(FormGroup,{fieldId:\"instance-option-checkboxes\",label:/*i18n*/i18n._(\"Options\"),children:[/*#__PURE__*/_jsx(CheckboxField,{id:\"enabled\",name:\"enabled\",label:/*i18n*/i18n._(\"Enable Instance\"),tooltip:/*i18n*/i18n._(\"Set the instance enabled or disabled. If disabled, jobs will not be assigned to this instance.\")}),/*#__PURE__*/_jsx(CheckboxField,{id:\"managed-by-policy\",name:\"managed_by_policy\",label:/*i18n*/i18n._(\"Managed by Policy\"),tooltip:/*i18n*/i18n._(\"Controls whether or not this instance is managed by policy. If enabled, the instance will be available for automatic assignment to and unassignment from instance groups based on policy rules.\")}),/*#__PURE__*/_jsx(CheckboxField,{id:\"peers_from_control_nodes\",name:\"peers_from_control_nodes\",label:/*i18n*/i18n._(\"Peers from control nodes\"),tooltip:/*i18n*/i18n._(\"If enabled, control nodes will peer to this instance automatically. If disabled, instance will be connected only to associated peers.\")})]})]});}function InstanceForm(_ref2){var _ref2$instance=_ref2.instance,instance=_ref2$instance===void 0?{}:_ref2$instance,_ref2$instance_peers=_ref2.instance_peers,instance_peers=_ref2$instance_peers===void 0?[]:_ref2$instance_peers,_ref2$isEdit=_ref2.isEdit,isEdit=_ref2$isEdit===void 0?false:_ref2$isEdit,submitError=_ref2.submitError,handleCancel=_ref2.handleCancel,handleSubmit=_ref2.handleSubmit;return/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{hostname:instance.hostname||'',description:instance.description||'',node_type:instance.node_type||'execution',node_state:instance.node_state||'installed',listener_port:instance.listener_port,enabled:instance.enabled||true,managed_by_policy:instance.managed_by_policy||true,peers_from_control_nodes:instance.peers_from_control_nodes||false,peers:instance_peers},onSubmit:function onSubmit(values){handleSubmit(_objectSpread(_objectSpread({},values),{},{listener_port:values.listener_port===''?null:values.listener_port,peers:values.peers.map(function(peer){return peer.hostname||peer;})}));},children:function children(formik){return/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsxs(FormColumnLayout,{children:[/*#__PURE__*/_jsx(InstanceFormFields,{isEdit:isEdit}),/*#__PURE__*/_jsx(FormSubmitError,{error:submitError}),/*#__PURE__*/_jsx(FormActionGroup,{onCancel:handleCancel,onSubmit:formik.handleSubmit})]})});}})});}export default InstanceForm;","map":{"version":3,"names":["React","Formik","useField","Form","FormGroup","CardBody","FormColumnLayout","FormField","FormSubmitError","CheckboxField","FormActionGroup","AnsibleSelect","required","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","INSTANCE_TYPES","id","name","i18n","_","InstanceFormFields","_ref","isEdit","_useField","validate","_useField2","_slicedToArray","instanceTypeField","instanceTypeMeta","instanceTypeHelpers","children","label","type","isRequired","isDisabled","tooltip","fieldId","validated","touched","error","helperTextInvalid","_objectSpread","data","map","key","value","onChange","event","setValue","InstanceForm","_ref2","_ref2$instance","instance","_ref2$instance_peers","instance_peers","_ref2$isEdit","submitError","handleCancel","handleSubmit","initialValues","hostname","description","node_type","node_state","listener_port","enabled","managed_by_policy","peers_from_control_nodes","peers","onSubmit","values","peer","formik","autoComplete","onCancel"],"sources":["/awx_devel/awx/ui/src/screens/Instances/Shared/InstanceForm.js"],"sourcesContent":["import React from 'react';\nimport { t } from '@lingui/macro';\nimport { Formik, useField } from 'formik';\nimport { Form, FormGroup, CardBody } from '@patternfly/react-core';\nimport { FormColumnLayout } from 'components/FormLayout';\nimport FormField, {\n  FormSubmitError,\n  CheckboxField,\n} from 'components/FormField';\nimport FormActionGroup from 'components/FormActionGroup';\nimport AnsibleSelect from 'components/AnsibleSelect';\nimport { required } from 'util/validators';\n\nconst INSTANCE_TYPES = [\n  { id: 'execution', name: t`Execution` },\n  { id: 'hop', name: t`Hop` },\n];\n\nfunction InstanceFormFields({ isEdit }) {\n  const [instanceTypeField, instanceTypeMeta, instanceTypeHelpers] = useField({\n    name: 'node_type',\n    validate: required(t`Set a value for this field`),\n  });\n\n  return (\n    <>\n      <FormField\n        id=\"hostname\"\n        label={t`Host Name`}\n        name=\"hostname\"\n        type=\"text\"\n        validate={required(null)}\n        isRequired\n        isDisabled={isEdit}\n      />\n      <FormField\n        id=\"instance-description\"\n        label={t`Description`}\n        name=\"description\"\n        type=\"text\"\n      />\n      <FormField\n        id=\"instance-state\"\n        label={t`Instance State`}\n        name=\"node_state\"\n        type=\"text\"\n        tooltip={t`Sets the current life cycle stage of this instance. Default is \"installed.\"`}\n        isDisabled\n      />\n      <FormField\n        id=\"instance-port\"\n        label={t`Listener Port`}\n        name=\"listener_port\"\n        type=\"number\"\n        tooltip={t`Select the port that Receptor will listen on for incoming connections, e.g. 27199.`}\n      />\n      <FormGroup\n        fieldId=\"instance-type\"\n        label={t`Instance Type`}\n        tooltip={t`Sets the role that this instance will play within mesh topology. Default is \"execution.\"`}\n        validated={\n          !instanceTypeMeta.touched || !instanceTypeMeta.error\n            ? 'default'\n            : 'error'\n        }\n        helperTextInvalid={instanceTypeMeta.error}\n        isRequired\n      >\n        <AnsibleSelect\n          {...instanceTypeField}\n          id=\"node_type\"\n          data={INSTANCE_TYPES.map((type) => ({\n            key: type.id,\n            value: type.id,\n            label: type.name,\n          }))}\n          onChange={(event, value) => {\n            instanceTypeHelpers.setValue(value);\n          }}\n          isDisabled={isEdit}\n        />\n      </FormGroup>\n      <FormGroup fieldId=\"instance-option-checkboxes\" label={t`Options`}>\n        <CheckboxField\n          id=\"enabled\"\n          name=\"enabled\"\n          label={t`Enable Instance`}\n          tooltip={t`Set the instance enabled or disabled. If disabled, jobs will not be assigned to this instance.`}\n        />\n        <CheckboxField\n          id=\"managed-by-policy\"\n          name=\"managed_by_policy\"\n          label={t`Managed by Policy`}\n          tooltip={t`Controls whether or not this instance is managed by policy. If enabled, the instance will be available for automatic assignment to and unassignment from instance groups based on policy rules.`}\n        />\n        <CheckboxField\n          id=\"peers_from_control_nodes\"\n          name=\"peers_from_control_nodes\"\n          label={t`Peers from control nodes`}\n          tooltip={t`If enabled, control nodes will peer to this instance automatically. If disabled, instance will be connected only to associated peers.`}\n        />\n      </FormGroup>\n    </>\n  );\n}\n\nfunction InstanceForm({\n  instance = {},\n  instance_peers = [],\n  isEdit = false,\n  submitError,\n  handleCancel,\n  handleSubmit,\n}) {\n  return (\n    <CardBody>\n      <Formik\n        initialValues={{\n          hostname: instance.hostname || '',\n          description: instance.description || '',\n          node_type: instance.node_type || 'execution',\n          node_state: instance.node_state || 'installed',\n          listener_port: instance.listener_port,\n          enabled: instance.enabled || true,\n          managed_by_policy: instance.managed_by_policy || true,\n          peers_from_control_nodes: instance.peers_from_control_nodes || false,\n          peers: instance_peers,\n        }}\n        onSubmit={(values) => {\n          handleSubmit({\n            ...values,\n            listener_port:\n              values.listener_port === '' ? null : values.listener_port,\n            peers: values.peers.map((peer) => peer.hostname || peer),\n          });\n        }}\n      >\n        {(formik) => (\n          <Form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n            <FormColumnLayout>\n              <InstanceFormFields isEdit={isEdit} />\n              <FormSubmitError error={submitError} />\n              <FormActionGroup\n                onCancel={handleCancel}\n                onSubmit={formik.handleSubmit}\n              />\n            </FormColumnLayout>\n          </Form>\n        )}\n      </Formik>\n    </CardBody>\n  );\n}\n\nexport default InstanceForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}