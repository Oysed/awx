{"ast":null,"code":"import _objectWithoutProperties from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _toConsumableArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _defineProperty from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _excluded=[\"project\",\"submitError\"];import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{i18n}from\"@lingui/core\";/* eslint no-nested-ternary: 0 */import React,{useCallback,useState,useEffect}from'react';import{Formik,useField,useFormikContext}from'formik';import{Form,FormGroup,Title}from'@patternfly/react-core';import{useConfig}from'contexts/Config';import AnsibleSelect from'components/AnsibleSelect';import ContentError from'components/ContentError';import ContentLoading from'components/ContentLoading';import CredentialLookup from'components/Lookup/CredentialLookup';import FormActionGroup from'components/FormActionGroup/FormActionGroup';import FormField,{FormSubmitError}from'components/FormField';import OrganizationLookup from'components/Lookup/OrganizationLookup';import ExecutionEnvironmentLookup from'components/Lookup/ExecutionEnvironmentLookup';import{CredentialTypesAPI,ProjectsAPI}from'api';import{required}from'util/validators';import{FormColumnLayout,SubFormLayout}from'components/FormLayout';import getProjectHelpText from'./Project.helptext';import{GitSubForm,SvnSubForm,ArchiveSubForm,InsightsSubForm,ManualSubForm}from'./ProjectSubForms';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var fetchCredentials=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(credential){var _yield$Promise$all,_yield$Promise$all2,_yield$Promise$all2$,scmCredentialType,_yield$Promise$all2$2,insightsCredentialType,_yield$Promise$all2$3,cryptographyCredentialType,credential_type_id;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Promise.all([CredentialTypesAPI.read({kind:'scm'}),CredentialTypesAPI.read({name:'Insights'}),CredentialTypesAPI.read({kind:'cryptography'})]);case 2:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,3);_yield$Promise$all2$=_slicedToArray(_yield$Promise$all2[0].data.results,1);scmCredentialType=_yield$Promise$all2$[0];_yield$Promise$all2$2=_slicedToArray(_yield$Promise$all2[1].data.results,1);insightsCredentialType=_yield$Promise$all2$2[0];_yield$Promise$all2$3=_slicedToArray(_yield$Promise$all2[2].data.results,1);cryptographyCredentialType=_yield$Promise$all2$3[0];if(credential){_context.next=12;break;}return _context.abrupt(\"return\",{scm:{typeId:scmCredentialType.id},insights:{typeId:insightsCredentialType.id},cryptography:{typeId:cryptographyCredentialType.id}});case 12:credential_type_id=credential.credential_type_id;return _context.abrupt(\"return\",{scm:{typeId:scmCredentialType.id,value:credential_type_id===scmCredentialType.id?credential:null},insights:{typeId:insightsCredentialType.id,value:credential_type_id===insightsCredentialType.id?credential:null},cryptography:{typeId:cryptographyCredentialType.id,value:credential_type_id===cryptographyCredentialType.id?credential:null}});case 14:case\"end\":return _context.stop();}}},_callee);}));return function fetchCredentials(_x){return _ref.apply(this,arguments);};}();function ProjectFormFields(_ref2){var _organizationField$va;var project=_ref2.project,project_base_dir=_ref2.project_base_dir,project_local_paths=_ref2.project_local_paths,formik=_ref2.formik,setCredentials=_ref2.setCredentials,setSignatureValidationCredentials=_ref2.setSignatureValidationCredentials,credentials=_ref2.credentials,signatureValidationCredentials=_ref2.signatureValidationCredentials,scmTypeOptions=_ref2.scmTypeOptions,setScmSubFormState=_ref2.setScmSubFormState,scmSubFormState=_ref2.scmSubFormState;var projectHelpText=getProjectHelpText();var scmFormFields={scm_url:'',scm_branch:'',scm_refspec:'',credential:'',signature_validation_credential:'',scm_clean:false,scm_delete_on_update:false,scm_track_submodules:false,scm_update_on_launch:false,allow_override:false,scm_update_cache_timeout:0};var _useFormikContext=useFormikContext(),setFieldValue=_useFormikContext.setFieldValue,setFieldTouched=_useFormikContext.setFieldTouched;var _useField=useField({name:'scm_type',validate:required(/*i18n*/i18n._(\"Set a value for this field\"))}),_useField2=_slicedToArray(_useField,3),scmTypeField=_useField2[0],scmTypeMeta=_useField2[1],scmTypeHelpers=_useField2[2];var _useField3=useField('organization'),_useField4=_slicedToArray(_useField3,3),organizationField=_useField4[0],organizationMeta=_useField4[1],organizationHelpers=_useField4[2];var _useField5=useField('default_environment'),_useField6=_slicedToArray(_useField5,3),executionEnvironmentField=_useField6[0],executionEnvironmentMeta=_useField6[1],executionEnvironmentHelpers=_useField6[2];/* Save current scm subform field values to state */var saveSubFormState=function saveSubFormState(form){var currentScmFormFields=_objectSpread({},scmFormFields);Object.keys(currentScmFormFields).forEach(function(label){currentScmFormFields[label]=form.values[label];});setScmSubFormState(currentScmFormFields);};/**\n   * If scm type is !== the initial scm type value,\n   * reset scm subform field values to defaults.\n   * If scm type is === the initial scm type value,\n   * reset scm subform field values to scmSubFormState.\n   */var resetScmTypeFields=function resetScmTypeFields(value,form){if(form.values.scm_type===form.initialValues.scm_type){saveSubFormState(formik);}Object.keys(scmFormFields).forEach(function(label){if(value===form.initialValues.scm_type){form.setFieldValue(label,scmSubFormState[label]);}else{form.setFieldValue(label,scmFormFields[label]);}form.setFieldTouched(label,false);});};var handleCredentialSelection=useCallback(function(type,value){setCredentials(_objectSpread(_objectSpread({},credentials),{},_defineProperty({},type,_objectSpread(_objectSpread({},credentials[type]),{},{value:value}))));},[credentials,setCredentials]);var handleSignatureValidationCredentialSelection=useCallback(function(type,value){setSignatureValidationCredentials(_objectSpread(_objectSpread({},signatureValidationCredentials),{},_defineProperty({},type,_objectSpread(_objectSpread({},signatureValidationCredentials[type]),{},{value:value}))));},[signatureValidationCredentials,setSignatureValidationCredentials]);var handleSignatureValidationCredentialChange=useCallback(function(value){handleSignatureValidationCredentialSelection('cryptography',value);setFieldValue('signature_validation_credential',value);setFieldTouched('signature_validation_credential',true,false);},[handleSignatureValidationCredentialSelection,setFieldValue,setFieldTouched]);var handleOrganizationUpdate=useCallback(function(value){setFieldValue('organization',value);setFieldTouched('organization',true,false);},[setFieldValue,setFieldTouched]);var handleExecutionEnvironmentUpdate=useCallback(function(value){setFieldValue('default_environment',value);setFieldTouched('default_environment',true,false);},[setFieldValue,setFieldTouched]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormField,{id:\"project-name\",label:/*i18n*/i18n._(\"Name\"),name:\"name\",type:\"text\",validate:required(null),isRequired:true}),/*#__PURE__*/_jsx(FormField,{id:\"project-description\",label:/*i18n*/i18n._(\"Description\"),name:\"description\",type:\"text\"}),/*#__PURE__*/_jsx(OrganizationLookup,{helperTextInvalid:organizationMeta.error,isValid:!organizationMeta.touched||!organizationMeta.error,onBlur:function onBlur(){return organizationHelpers.setTouched();},onChange:handleOrganizationUpdate,value:organizationField.value,required:true,autoPopulate:!(project!==null&&project!==void 0&&project.id),validate:required(/*i18n*/i18n._(\"Select a value for this field\"))}),/*#__PURE__*/_jsx(ExecutionEnvironmentLookup,{helperTextInvalid:executionEnvironmentMeta.error,isValid:!executionEnvironmentMeta.touched||!executionEnvironmentMeta.error,onBlur:function onBlur(){return executionEnvironmentHelpers.setTouched();},value:executionEnvironmentField.value,popoverContent:projectHelpText.executionEnvironment,onChange:handleExecutionEnvironmentUpdate,tooltip:/*i18n*/i18n._(\"Select an organization before editing the default execution environment.\"),globallyAvailable:true,isDisabled:!organizationField.value,organizationId:(_organizationField$va=organizationField.value)===null||_organizationField$va===void 0?void 0:_organizationField$va.id,isDefaultEnvironment:true,fieldName:\"default_environment\"}),/*#__PURE__*/_jsx(FormGroup,{fieldId:\"project-scm-type\",helperTextInvalid:scmTypeMeta.error,isRequired:true,validated:!scmTypeMeta.touched||!scmTypeMeta.error?'default':'error',label:/*i18n*/i18n._(\"Source Control Type\"),children:/*#__PURE__*/_jsx(AnsibleSelect,_objectSpread(_objectSpread({},scmTypeField),{},{id:\"scm_type\",data:[{value:'',key:'',label:/*i18n*/i18n._(\"Choose a Source Control Type\"),isDisabled:true}].concat(_toConsumableArray(scmTypeOptions.map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),value=_ref4[0],label=_ref4[1];if(value===''){value='manual';}return{label:label,value:value,key:value};}))),onChange:function onChange(event,value){scmTypeHelpers.setValue(value);resetScmTypeFields(value,formik);}}))}),/*#__PURE__*/_jsx(CredentialLookup,{credentialTypeId:signatureValidationCredentials.cryptography.typeId,label:/*i18n*/i18n._(\"Content Signature Validation Credential\"),onChange:handleSignatureValidationCredentialChange,value:signatureValidationCredentials.cryptography.value,tooltip:projectHelpText.signatureValidation}),formik.values.scm_type!==''&&/*#__PURE__*/_jsxs(SubFormLayout,{children:[/*#__PURE__*/_jsx(Title,{size:\"md\",headingLevel:\"h4\",children:/*i18n*/i18n._(\"Type Details\")}),/*#__PURE__*/_jsx(FormColumnLayout,{children:{manual:/*#__PURE__*/_jsx(ManualSubForm,{localPath:formik.initialValues.local_path,project_base_dir:project_base_dir,project_local_paths:project_local_paths}),git:/*#__PURE__*/_jsx(GitSubForm,{credential:credentials.scm,onCredentialSelection:handleCredentialSelection,scmUpdateOnLaunch:formik.values.scm_update_on_launch}),svn:/*#__PURE__*/_jsx(SvnSubForm,{credential:credentials.scm,onCredentialSelection:handleCredentialSelection,scmUpdateOnLaunch:formik.values.scm_update_on_launch}),archive:/*#__PURE__*/_jsx(ArchiveSubForm,{credential:credentials.scm,onCredentialSelection:handleCredentialSelection,scmUpdateOnLaunch:formik.values.scm_update_on_launch}),insights:/*#__PURE__*/_jsx(InsightsSubForm,{credential:credentials.insights,onCredentialSelection:handleCredentialSelection,scmUpdateOnLaunch:formik.values.scm_update_on_launch,autoPopulateCredential:!(project!==null&&project!==void 0&&project.id)||(project===null||project===void 0?void 0:project.scm_type)!=='insights'})}[formik.values.scm_type]})]})]});}function ProjectForm(_ref5){var _project$summary_fiel2,_project$summary_fiel3;var project=_ref5.project,submitError=_ref5.submitError,props=_objectWithoutProperties(_ref5,_excluded);var handleCancel=props.handleCancel,handleSubmit=props.handleSubmit;var _project$summary_fiel=project.summary_fields,summary_fields=_project$summary_fiel===void 0?{}:_project$summary_fiel;var _useConfig=useConfig(),project_base_dir=_useConfig.project_base_dir,project_local_paths=_useConfig.project_local_paths;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),contentError=_useState2[0],setContentError=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useState5=useState({scm_url:'',scm_branch:'',scm_refspec:'',credential:'',signature_validation_credential:'',scm_clean:false,scm_delete_on_update:false,scm_track_submodules:false,scm_update_on_launch:false,allow_override:false,scm_update_cache_timeout:0}),_useState6=_slicedToArray(_useState5,2),scmSubFormState=_useState6[0],setScmSubFormState=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),scmTypeOptions=_useState8[0],setScmTypeOptions=_useState8[1];var _useState9=useState({scm:{typeId:null,value:null},insights:{typeId:null,value:null},cryptography:{typeId:null,value:null}}),_useState10=_slicedToArray(_useState9,2),credentials=_useState10[0],setCredentials=_useState10[1];var _useState11=useState({scm:{typeId:null,value:null},insights:{typeId:null,value:null},cryptography:{typeId:null,value:null}}),_useState12=_slicedToArray(_useState11,2),signatureValidationCredentials=_useState12[0],setSignatureValidationCredentials=_useState12[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var credentialResponse,signatureValidationCredentialResponse,_yield$ProjectsAPI$re,choices;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;credentialResponse=fetchCredentials(summary_fields.credential);signatureValidationCredentialResponse=fetchCredentials(summary_fields.signature_validation_credential);_context2.next=5;return ProjectsAPI.readOptions();case 5:_yield$ProjectsAPI$re=_context2.sent;choices=_yield$ProjectsAPI$re.data.actions.GET.scm_type.choices;_context2.t0=setCredentials;_context2.next=10;return credentialResponse;case 10:_context2.t1=_context2.sent;(0,_context2.t0)(_context2.t1);_context2.t2=setSignatureValidationCredentials;_context2.next=15;return signatureValidationCredentialResponse;case 15:_context2.t3=_context2.sent;(0,_context2.t2)(_context2.t3);setScmTypeOptions(choices);_context2.next=23;break;case 20:_context2.prev=20;_context2.t4=_context2[\"catch\"](0);setContentError(_context2.t4);case 23:_context2.prev=23;setIsLoading(false);return _context2.finish(23);case 26:case\"end\":return _context2.stop();}}},_callee2,null,[[0,20,23,26]]);}));return _fetchData.apply(this,arguments);}fetchData();},[summary_fields.credential,summary_fields.signature_validation_credential]);if(isLoading){return/*#__PURE__*/_jsx(ContentLoading,{});}if(contentError){return/*#__PURE__*/_jsx(ContentError,{error:contentError});}return/*#__PURE__*/_jsx(Formik,{initialValues:{allow_override:project.allow_override||false,base_dir:project_base_dir||'',credential:project.credential||'',description:project.description||'',local_path:project.local_path||'',name:project.name||'',organization:((_project$summary_fiel2=project.summary_fields)===null||_project$summary_fiel2===void 0?void 0:_project$summary_fiel2.organization)||null,scm_branch:project.scm_branch||'',scm_clean:project.scm_clean||false,scm_delete_on_update:project.scm_delete_on_update||false,scm_track_submodules:project.scm_track_submodules||false,scm_refspec:project.scm_refspec||'',scm_type:project.scm_type===''?'manual':project.scm_type===undefined?'':project.scm_type,scm_update_cache_timeout:project.scm_update_cache_timeout||0,scm_update_on_launch:project.scm_update_on_launch||false,scm_url:project.scm_url||'',signature_validation_credential:project.signature_validation_credential||'',default_environment:((_project$summary_fiel3=project.summary_fields)===null||_project$summary_fiel3===void 0?void 0:_project$summary_fiel3.default_environment)||null},onSubmit:handleSubmit,children:function children(formik){return/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsxs(FormColumnLayout,{children:[/*#__PURE__*/_jsx(ProjectFormFields,{project:project,project_base_dir:project_base_dir,project_local_paths:project_local_paths,formik:formik,setCredentials:setCredentials,setSignatureValidationCredentials:setSignatureValidationCredentials,credentials:credentials,signatureValidationCredentials:signatureValidationCredentials,scmTypeOptions:scmTypeOptions,setScmSubFormState:setScmSubFormState,scmSubFormState:scmSubFormState}),/*#__PURE__*/_jsx(FormSubmitError,{error:submitError}),/*#__PURE__*/_jsx(FormActionGroup,{onCancel:handleCancel,onSubmit:formik.handleSubmit})]})});}});}ProjectForm.defaultProps={project:{},submitError:null};export default ProjectForm;","map":{"version":3,"names":["React","useCallback","useState","useEffect","Formik","useField","useFormikContext","Form","FormGroup","Title","useConfig","AnsibleSelect","ContentError","ContentLoading","CredentialLookup","FormActionGroup","FormField","FormSubmitError","OrganizationLookup","ExecutionEnvironmentLookup","CredentialTypesAPI","ProjectsAPI","required","FormColumnLayout","SubFormLayout","getProjectHelpText","GitSubForm","SvnSubForm","ArchiveSubForm","InsightsSubForm","ManualSubForm","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","fetchCredentials","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","credential","_yield$Promise$all","_yield$Promise$all2","_yield$Promise$all2$","scmCredentialType","_yield$Promise$all2$2","insightsCredentialType","_yield$Promise$all2$3","cryptographyCredentialType","credential_type_id","wrap","_callee$","_context","prev","next","Promise","all","read","kind","name","sent","_slicedToArray","data","results","abrupt","scm","typeId","id","insights","cryptography","value","stop","_x","apply","arguments","ProjectFormFields","_ref2","_organizationField$va","project","project_base_dir","project_local_paths","formik","setCredentials","setSignatureValidationCredentials","credentials","signatureValidationCredentials","scmTypeOptions","setScmSubFormState","scmSubFormState","projectHelpText","scmFormFields","scm_url","scm_branch","scm_refspec","signature_validation_credential","scm_clean","scm_delete_on_update","scm_track_submodules","scm_update_on_launch","allow_override","scm_update_cache_timeout","_useFormikContext","setFieldValue","setFieldTouched","_useField","validate","i18n","_","_useField2","scmTypeField","scmTypeMeta","scmTypeHelpers","_useField3","_useField4","organizationField","organizationMeta","organizationHelpers","_useField5","_useField6","executionEnvironmentField","executionEnvironmentMeta","executionEnvironmentHelpers","saveSubFormState","form","currentScmFormFields","_objectSpread","Object","keys","forEach","label","values","resetScmTypeFields","scm_type","initialValues","handleCredentialSelection","type","_defineProperty","handleSignatureValidationCredentialSelection","handleSignatureValidationCredentialChange","handleOrganizationUpdate","handleExecutionEnvironmentUpdate","children","isRequired","helperTextInvalid","error","isValid","touched","onBlur","setTouched","onChange","autoPopulate","popoverContent","executionEnvironment","tooltip","globallyAvailable","isDisabled","organizationId","isDefaultEnvironment","fieldName","fieldId","validated","key","concat","_toConsumableArray","map","_ref3","_ref4","event","setValue","credentialTypeId","signatureValidation","size","headingLevel","manual","localPath","local_path","git","onCredentialSelection","scmUpdateOnLaunch","svn","archive","autoPopulateCredential","ProjectForm","_ref5","_project$summary_fiel2","_project$summary_fiel3","submitError","props","_objectWithoutProperties","_excluded","handleCancel","handleSubmit","_project$summary_fiel","summary_fields","_useConfig","_useState","_useState2","contentError","setContentError","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","_useState7","_useState8","setScmTypeOptions","_useState9","_useState10","_useState11","_useState12","fetchData","_fetchData","_callee2","credentialResponse","signatureValidationCredentialResponse","_yield$ProjectsAPI$re","choices","_callee2$","_context2","readOptions","actions","GET","t0","t1","t2","t3","t4","finish","base_dir","description","organization","undefined","default_environment","onSubmit","autoComplete","onCancel","defaultProps"],"sources":["/awx_devel/awx/ui/src/screens/Project/shared/ProjectForm.js"],"sourcesContent":["/* eslint no-nested-ternary: 0 */\nimport React, { useCallback, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { t } from '@lingui/macro';\nimport { Formik, useField, useFormikContext } from 'formik';\nimport { Form, FormGroup, Title } from '@patternfly/react-core';\nimport { useConfig } from 'contexts/Config';\nimport AnsibleSelect from 'components/AnsibleSelect';\nimport ContentError from 'components/ContentError';\nimport ContentLoading from 'components/ContentLoading';\nimport CredentialLookup from 'components/Lookup/CredentialLookup';\nimport FormActionGroup from 'components/FormActionGroup/FormActionGroup';\nimport FormField, { FormSubmitError } from 'components/FormField';\nimport OrganizationLookup from 'components/Lookup/OrganizationLookup';\nimport ExecutionEnvironmentLookup from 'components/Lookup/ExecutionEnvironmentLookup';\nimport { CredentialTypesAPI, ProjectsAPI } from 'api';\nimport { required } from 'util/validators';\nimport { FormColumnLayout, SubFormLayout } from 'components/FormLayout';\nimport getProjectHelpText from './Project.helptext';\nimport {\n  GitSubForm,\n  SvnSubForm,\n  ArchiveSubForm,\n  InsightsSubForm,\n  ManualSubForm,\n} from './ProjectSubForms';\n\nconst fetchCredentials = async (credential) => {\n  const [\n    {\n      data: {\n        results: [scmCredentialType],\n      },\n    },\n    {\n      data: {\n        results: [insightsCredentialType],\n      },\n    },\n    {\n      data: {\n        results: [cryptographyCredentialType],\n      },\n    },\n  ] = await Promise.all([\n    CredentialTypesAPI.read({ kind: 'scm' }),\n    CredentialTypesAPI.read({ name: 'Insights' }),\n    CredentialTypesAPI.read({ kind: 'cryptography' }),\n  ]);\n\n  if (!credential) {\n    return {\n      scm: { typeId: scmCredentialType.id },\n      insights: { typeId: insightsCredentialType.id },\n      cryptography: { typeId: cryptographyCredentialType.id },\n    };\n  }\n\n  const { credential_type_id } = credential;\n  return {\n    scm: {\n      typeId: scmCredentialType.id,\n      value: credential_type_id === scmCredentialType.id ? credential : null,\n    },\n    insights: {\n      typeId: insightsCredentialType.id,\n      value:\n        credential_type_id === insightsCredentialType.id ? credential : null,\n    },\n    cryptography: {\n      typeId: cryptographyCredentialType.id,\n      value:\n        credential_type_id === cryptographyCredentialType.id\n          ? credential\n          : null,\n    },\n  };\n};\n\nfunction ProjectFormFields({\n  project,\n  project_base_dir,\n  project_local_paths,\n  formik,\n  setCredentials,\n  setSignatureValidationCredentials,\n  credentials,\n  signatureValidationCredentials,\n  scmTypeOptions,\n  setScmSubFormState,\n  scmSubFormState,\n}) {\n  const projectHelpText = getProjectHelpText();\n  const scmFormFields = {\n    scm_url: '',\n    scm_branch: '',\n    scm_refspec: '',\n    credential: '',\n    signature_validation_credential: '',\n    scm_clean: false,\n    scm_delete_on_update: false,\n    scm_track_submodules: false,\n    scm_update_on_launch: false,\n    allow_override: false,\n    scm_update_cache_timeout: 0,\n  };\n  const { setFieldValue, setFieldTouched } = useFormikContext();\n\n  const [scmTypeField, scmTypeMeta, scmTypeHelpers] = useField({\n    name: 'scm_type',\n    validate: required(t`Set a value for this field`),\n  });\n  const [organizationField, organizationMeta, organizationHelpers] =\n    useField('organization');\n\n  const [\n    executionEnvironmentField,\n    executionEnvironmentMeta,\n    executionEnvironmentHelpers,\n  ] = useField('default_environment');\n\n  /* Save current scm subform field values to state */\n  const saveSubFormState = (form) => {\n    const currentScmFormFields = { ...scmFormFields };\n\n    Object.keys(currentScmFormFields).forEach((label) => {\n      currentScmFormFields[label] = form.values[label];\n    });\n\n    setScmSubFormState(currentScmFormFields);\n  };\n\n  /**\n   * If scm type is !== the initial scm type value,\n   * reset scm subform field values to defaults.\n   * If scm type is === the initial scm type value,\n   * reset scm subform field values to scmSubFormState.\n   */\n  const resetScmTypeFields = (value, form) => {\n    if (form.values.scm_type === form.initialValues.scm_type) {\n      saveSubFormState(formik);\n    }\n\n    Object.keys(scmFormFields).forEach((label) => {\n      if (value === form.initialValues.scm_type) {\n        form.setFieldValue(label, scmSubFormState[label]);\n      } else {\n        form.setFieldValue(label, scmFormFields[label]);\n      }\n      form.setFieldTouched(label, false);\n    });\n  };\n\n  const handleCredentialSelection = useCallback(\n    (type, value) => {\n      setCredentials({\n        ...credentials,\n        [type]: {\n          ...credentials[type],\n          value,\n        },\n      });\n    },\n    [credentials, setCredentials]\n  );\n\n  const handleSignatureValidationCredentialSelection = useCallback(\n    (type, value) => {\n      setSignatureValidationCredentials({\n        ...signatureValidationCredentials,\n        [type]: {\n          ...signatureValidationCredentials[type],\n          value,\n        },\n      });\n    },\n    [signatureValidationCredentials, setSignatureValidationCredentials]\n  );\n\n  const handleSignatureValidationCredentialChange = useCallback(\n    (value) => {\n      handleSignatureValidationCredentialSelection('cryptography', value);\n      setFieldValue('signature_validation_credential', value);\n      setFieldTouched('signature_validation_credential', true, false);\n    },\n    [\n      handleSignatureValidationCredentialSelection,\n      setFieldValue,\n      setFieldTouched,\n    ]\n  );\n\n  const handleOrganizationUpdate = useCallback(\n    (value) => {\n      setFieldValue('organization', value);\n      setFieldTouched('organization', true, false);\n    },\n    [setFieldValue, setFieldTouched]\n  );\n\n  const handleExecutionEnvironmentUpdate = useCallback(\n    (value) => {\n      setFieldValue('default_environment', value);\n      setFieldTouched('default_environment', true, false);\n    },\n    [setFieldValue, setFieldTouched]\n  );\n\n  return (\n    <>\n      <FormField\n        id=\"project-name\"\n        label={t`Name`}\n        name=\"name\"\n        type=\"text\"\n        validate={required(null)}\n        isRequired\n      />\n      <FormField\n        id=\"project-description\"\n        label={t`Description`}\n        name=\"description\"\n        type=\"text\"\n      />\n      <OrganizationLookup\n        helperTextInvalid={organizationMeta.error}\n        isValid={!organizationMeta.touched || !organizationMeta.error}\n        onBlur={() => organizationHelpers.setTouched()}\n        onChange={handleOrganizationUpdate}\n        value={organizationField.value}\n        required\n        autoPopulate={!project?.id}\n        validate={required(t`Select a value for this field`)}\n      />\n      <ExecutionEnvironmentLookup\n        helperTextInvalid={executionEnvironmentMeta.error}\n        isValid={\n          !executionEnvironmentMeta.touched || !executionEnvironmentMeta.error\n        }\n        onBlur={() => executionEnvironmentHelpers.setTouched()}\n        value={executionEnvironmentField.value}\n        popoverContent={projectHelpText.executionEnvironment}\n        onChange={handleExecutionEnvironmentUpdate}\n        tooltip={t`Select an organization before editing the default execution environment.`}\n        globallyAvailable\n        isDisabled={!organizationField.value}\n        organizationId={organizationField.value?.id}\n        isDefaultEnvironment\n        fieldName=\"default_environment\"\n      />\n      <FormGroup\n        fieldId=\"project-scm-type\"\n        helperTextInvalid={scmTypeMeta.error}\n        isRequired\n        validated={\n          !scmTypeMeta.touched || !scmTypeMeta.error ? 'default' : 'error'\n        }\n        label={t`Source Control Type`}\n      >\n        <AnsibleSelect\n          {...scmTypeField}\n          id=\"scm_type\"\n          data={[\n            {\n              value: '',\n              key: '',\n              label: t`Choose a Source Control Type`,\n              isDisabled: true,\n            },\n            ...scmTypeOptions.map(([value, label]) => {\n              if (value === '') {\n                value = 'manual';\n              }\n              return {\n                label,\n                value,\n                key: value,\n              };\n            }),\n          ]}\n          onChange={(event, value) => {\n            scmTypeHelpers.setValue(value);\n            resetScmTypeFields(value, formik);\n          }}\n        />\n      </FormGroup>\n      <CredentialLookup\n        credentialTypeId={signatureValidationCredentials.cryptography.typeId}\n        label={t`Content Signature Validation Credential`}\n        onChange={handleSignatureValidationCredentialChange}\n        value={signatureValidationCredentials.cryptography.value}\n        tooltip={projectHelpText.signatureValidation}\n      />\n      {formik.values.scm_type !== '' && (\n        <SubFormLayout>\n          <Title size=\"md\" headingLevel=\"h4\">\n            {t`Type Details`}\n          </Title>\n          <FormColumnLayout>\n            {\n              {\n                manual: (\n                  <ManualSubForm\n                    localPath={formik.initialValues.local_path}\n                    project_base_dir={project_base_dir}\n                    project_local_paths={project_local_paths}\n                  />\n                ),\n                git: (\n                  <GitSubForm\n                    credential={credentials.scm}\n                    onCredentialSelection={handleCredentialSelection}\n                    scmUpdateOnLaunch={formik.values.scm_update_on_launch}\n                  />\n                ),\n                svn: (\n                  <SvnSubForm\n                    credential={credentials.scm}\n                    onCredentialSelection={handleCredentialSelection}\n                    scmUpdateOnLaunch={formik.values.scm_update_on_launch}\n                  />\n                ),\n                archive: (\n                  <ArchiveSubForm\n                    credential={credentials.scm}\n                    onCredentialSelection={handleCredentialSelection}\n                    scmUpdateOnLaunch={formik.values.scm_update_on_launch}\n                  />\n                ),\n                insights: (\n                  <InsightsSubForm\n                    credential={credentials.insights}\n                    onCredentialSelection={handleCredentialSelection}\n                    scmUpdateOnLaunch={formik.values.scm_update_on_launch}\n                    autoPopulateCredential={\n                      !project?.id || project?.scm_type !== 'insights'\n                    }\n                  />\n                ),\n              }[formik.values.scm_type]\n            }\n          </FormColumnLayout>\n        </SubFormLayout>\n      )}\n    </>\n  );\n}\nfunction ProjectForm({ project, submitError, ...props }) {\n  const { handleCancel, handleSubmit } = props;\n  const { summary_fields = {} } = project;\n  const { project_base_dir, project_local_paths } = useConfig();\n  const [contentError, setContentError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [scmSubFormState, setScmSubFormState] = useState({\n    scm_url: '',\n    scm_branch: '',\n    scm_refspec: '',\n    credential: '',\n    signature_validation_credential: '',\n    scm_clean: false,\n    scm_delete_on_update: false,\n    scm_track_submodules: false,\n    scm_update_on_launch: false,\n    allow_override: false,\n    scm_update_cache_timeout: 0,\n  });\n  const [scmTypeOptions, setScmTypeOptions] = useState(null);\n  const [credentials, setCredentials] = useState({\n    scm: { typeId: null, value: null },\n    insights: { typeId: null, value: null },\n    cryptography: { typeId: null, value: null },\n  });\n  const [signatureValidationCredentials, setSignatureValidationCredentials] =\n    useState({\n      scm: { typeId: null, value: null },\n      insights: { typeId: null, value: null },\n      cryptography: { typeId: null, value: null },\n    });\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const credentialResponse = fetchCredentials(summary_fields.credential);\n        const signatureValidationCredentialResponse = fetchCredentials(\n          summary_fields.signature_validation_credential\n        );\n        const {\n          data: {\n            actions: {\n              GET: {\n                scm_type: { choices },\n              },\n            },\n          },\n        } = await ProjectsAPI.readOptions();\n\n        setCredentials(await credentialResponse);\n        setSignatureValidationCredentials(\n          await signatureValidationCredentialResponse\n        );\n        setScmTypeOptions(choices);\n      } catch (error) {\n        setContentError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchData();\n  }, [\n    summary_fields.credential,\n    summary_fields.signature_validation_credential,\n  ]);\n\n  if (isLoading) {\n    return <ContentLoading />;\n  }\n\n  if (contentError) {\n    return <ContentError error={contentError} />;\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        allow_override: project.allow_override || false,\n        base_dir: project_base_dir || '',\n        credential: project.credential || '',\n        description: project.description || '',\n        local_path: project.local_path || '',\n        name: project.name || '',\n        organization: project.summary_fields?.organization || null,\n        scm_branch: project.scm_branch || '',\n        scm_clean: project.scm_clean || false,\n        scm_delete_on_update: project.scm_delete_on_update || false,\n        scm_track_submodules: project.scm_track_submodules || false,\n        scm_refspec: project.scm_refspec || '',\n        scm_type:\n          project.scm_type === ''\n            ? 'manual'\n            : project.scm_type === undefined\n            ? ''\n            : project.scm_type,\n        scm_update_cache_timeout: project.scm_update_cache_timeout || 0,\n        scm_update_on_launch: project.scm_update_on_launch || false,\n        scm_url: project.scm_url || '',\n        signature_validation_credential:\n          project.signature_validation_credential || '',\n        default_environment:\n          project.summary_fields?.default_environment || null,\n      }}\n      onSubmit={handleSubmit}\n    >\n      {(formik) => (\n        <Form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n          <FormColumnLayout>\n            <ProjectFormFields\n              project={project}\n              project_base_dir={project_base_dir}\n              project_local_paths={project_local_paths}\n              formik={formik}\n              setCredentials={setCredentials}\n              setSignatureValidationCredentials={\n                setSignatureValidationCredentials\n              }\n              credentials={credentials}\n              signatureValidationCredentials={signatureValidationCredentials}\n              scmTypeOptions={scmTypeOptions}\n              setScmSubFormState={setScmSubFormState}\n              scmSubFormState={scmSubFormState}\n            />\n            <FormSubmitError error={submitError} />\n            <FormActionGroup\n              onCancel={handleCancel}\n              onSubmit={formik.handleSubmit}\n            />\n          </FormColumnLayout>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nProjectForm.propTypes = {\n  handleCancel: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  project: PropTypes.shape({}),\n  submitError: PropTypes.shape({}),\n};\n\nProjectForm.defaultProps = {\n  project: {},\n  submitError: null,\n};\n\nexport default ProjectForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}