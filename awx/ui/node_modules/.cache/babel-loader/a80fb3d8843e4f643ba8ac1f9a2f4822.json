{"ast":null,"code":"import _objectSpread from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";import{useState,useEffect}from'react';import useWebsocket from'hooks/useWebsocket';import{InventorySourcesAPI}from'api';export default function useWsInventorySourcesDetails(initialSource){var _useState=useState(initialSource),_useState2=_slicedToArray(_useState,2),source=_useState2[0],setSource=_useState2[1];var lastMessage=useWebsocket({jobs:['status_changed'],control:['limit_reached_1']});useEffect(function(){setSource(initialSource);},[initialSource]);useEffect(function(){if(!(lastMessage!==null&&lastMessage!==void 0&&lastMessage.unified_job_id)||!(lastMessage!==null&&lastMessage!==void 0&&lastMessage.inventory_source_id)||lastMessage.type!=='inventory_update'){return;}if(['successful','failed','error','cancelled'].includes(lastMessage.status)){fetchSource();}setSource(updateSource(source,lastMessage));},[lastMessage]// eslint-disable-line react-hooks/exhaustive-deps\n);function fetchSource(){return _fetchSource.apply(this,arguments);}function _fetchSource(){_fetchSource=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$InventorySourc,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return InventorySourcesAPI.readDetail(source.id);case 2:_yield$InventorySourc=_context.sent;data=_yield$InventorySourc.data;setSource(data);case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchSource.apply(this,arguments);}return source;}function updateSource(source,message){return _objectSpread(_objectSpread({},source),{},{summary_fields:_objectSpread(_objectSpread({},source.summary_fields),{},{current_job:{id:message.unified_job_id,status:message.status,finished:message.finished}})});}","map":{"version":3,"names":["useState","useEffect","useWebsocket","InventorySourcesAPI","useWsInventorySourcesDetails","initialSource","_useState","_useState2","_slicedToArray","source","setSource","lastMessage","jobs","control","unified_job_id","inventory_source_id","type","includes","status","fetchSource","updateSource","_fetchSource","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$InventorySourc","data","wrap","_callee$","_context","prev","next","readDetail","id","sent","stop","message","_objectSpread","summary_fields","current_job","finished"],"sources":["/awx_devel/awx/ui/src/screens/Inventory/shared/useWsInventorySourcesDetails.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport useWebsocket from 'hooks/useWebsocket';\nimport { InventorySourcesAPI } from 'api';\n\nexport default function useWsInventorySourcesDetails(initialSource) {\n  const [source, setSource] = useState(initialSource);\n  const lastMessage = useWebsocket({\n    jobs: ['status_changed'],\n    control: ['limit_reached_1'],\n  });\n\n  useEffect(() => {\n    setSource(initialSource);\n  }, [initialSource]);\n\n  useEffect(\n    () => {\n      if (\n        !lastMessage?.unified_job_id ||\n        !lastMessage?.inventory_source_id ||\n        lastMessage.type !== 'inventory_update'\n      ) {\n        return;\n      }\n\n      if (\n        ['successful', 'failed', 'error', 'cancelled'].includes(\n          lastMessage.status\n        )\n      ) {\n        fetchSource();\n      }\n      setSource(updateSource(source, lastMessage));\n    },\n    [lastMessage] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  async function fetchSource() {\n    const { data } = await InventorySourcesAPI.readDetail(source.id);\n    setSource(data);\n  }\n\n  return source;\n}\n\nfunction updateSource(source, message) {\n  return {\n    ...source,\n    summary_fields: {\n      ...source.summary_fields,\n      current_job: {\n        id: message.unified_job_id,\n        status: message.status,\n        finished: message.finished,\n      },\n    },\n  };\n}\n"],"mappings":"8ZAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,YAAY,KAAM,oBAAoB,CAC7C,OAASC,mBAAmB,KAAQ,KAAK,CAEzC,cAAe,SAAS,CAAAC,4BAA4BA,CAACC,aAAa,CAAE,CAClE,IAAAC,SAAA,CAA4BN,QAAQ,CAACK,aAAa,CAAC,CAAAE,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA5CG,MAAM,CAAAF,UAAA,IAAEG,SAAS,CAAAH,UAAA,IACxB,GAAM,CAAAI,WAAW,CAAGT,YAAY,CAAC,CAC/BU,IAAI,CAAE,CAAC,gBAAgB,CAAC,CACxBC,OAAO,CAAE,CAAC,iBAAiB,CAC7B,CAAC,CAAC,CAEFZ,SAAS,CAAC,UAAM,CACdS,SAAS,CAACL,aAAa,CAAC,CAC1B,CAAC,CAAE,CAACA,aAAa,CAAC,CAAC,CAEnBJ,SAAS,CACP,UAAM,CACJ,GACE,EAACU,WAAW,SAAXA,WAAW,WAAXA,WAAW,CAAEG,cAAc,GAC5B,EAACH,WAAW,SAAXA,WAAW,WAAXA,WAAW,CAAEI,mBAAmB,GACjCJ,WAAW,CAACK,IAAI,GAAK,kBAAkB,CACvC,CACA,OACF,CAEA,GACE,CAAC,YAAY,CAAE,QAAQ,CAAE,OAAO,CAAE,WAAW,CAAC,CAACC,QAAQ,CACrDN,WAAW,CAACO,MACd,CAAC,CACD,CACAC,WAAW,CAAC,CAAC,CACf,CACAT,SAAS,CAACU,YAAY,CAACX,MAAM,CAAEE,WAAW,CAAC,CAAC,CAC9C,CAAC,CACD,CAACA,WAAW,CAAE;AAChB,CAAC,CAAC,QAEa,CAAAQ,WAAWA,CAAA,SAAAE,YAAA,CAAAC,KAAA,MAAAC,SAAA,YAAAF,aAAA,EAAAA,YAAA,CAAAG,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,CAA1B,SAAAC,QAAA,MAAAC,qBAAA,CAAAC,IAAA,QAAAJ,mBAAA,CAAAK,IAAA,UAAAC,SAAAC,QAAA,kBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SACyB,CAAA/B,mBAAmB,CAACgC,UAAU,CAAC1B,MAAM,CAAC2B,EAAE,CAAC,QAAAR,qBAAA,CAAAI,QAAA,CAAAK,IAAA,CAAxDR,IAAI,CAAAD,qBAAA,CAAJC,IAAI,CACZnB,SAAS,CAACmB,IAAI,CAAC,CAAC,wBAAAG,QAAA,CAAAM,IAAA,OAAAX,OAAA,GACjB,UAAAN,YAAA,CAAAC,KAAA,MAAAC,SAAA,GAED,MAAO,CAAAd,MAAM,CACf,CAEA,QAAS,CAAAW,YAAYA,CAACX,MAAM,CAAE8B,OAAO,CAAE,CACrC,OAAAC,aAAA,CAAAA,aAAA,IACK/B,MAAM,MACTgC,cAAc,CAAAD,aAAA,CAAAA,aAAA,IACT/B,MAAM,CAACgC,cAAc,MACxBC,WAAW,CAAE,CACXN,EAAE,CAAEG,OAAO,CAACzB,cAAc,CAC1BI,MAAM,CAAEqB,OAAO,CAACrB,MAAM,CACtByB,QAAQ,CAAEJ,OAAO,CAACI,QACpB,CAAC,EACF,GAEL"},"metadata":{},"sourceType":"module"}