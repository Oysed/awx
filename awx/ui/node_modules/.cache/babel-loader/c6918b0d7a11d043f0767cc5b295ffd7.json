{"ast":null,"code":"import _asyncToGenerator from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/awx_devel/awx/ui/node_modules/@babel/runtime/regenerator/index.js\";/* eslint-disable react/jsx-no-useless-fragment */import React,{useCallback,useEffect}from'react';import{useField,useFormikContext}from'formik';import{Form,FormGroup}from'@patternfly/react-core';import{CredentialTypesAPI}from'api';import AnsibleSelect from'components/AnsibleSelect';import ContentError from'components/ContentError';import ContentLoading from'components/ContentLoading';import FormField from'components/FormField';import{FormFullWidthLayout}from'components/FormLayout';import Popover from'components/Popover';import useRequest from'hooks/useRequest';import{required}from'util/validators';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function MetadataStep(){var form=useFormikContext();var _useField=useField('credential'),_useField2=_slicedToArray(_useField,1),selectedCredential=_useField2[0];var _useField3=useField('inputs'),_useField4=_slicedToArray(_useField3,1),inputValues=_useField4[0];var _useRequest=useRequest(useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$CredentialType,_yield$CredentialType2,requiredFields,metadata;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return CredentialTypesAPI.readDetail(selectedCredential.value.credential_type||selectedCredential.value.credential_type_id);case 2:_yield$CredentialType=_context.sent;_yield$CredentialType2=_yield$CredentialType.data.inputs;requiredFields=_yield$CredentialType2.required;metadata=_yield$CredentialType2.metadata;metadata.forEach(function(field){if(inputValues.value[field.id]){form.initialValues.inputs[field.id]=inputValues.value[field.id];}else if(field.type==='string'&&field.choices){form.initialValues.inputs[field.id]=field.default||field.choices[0];}else{form.initialValues.inputs[field.id]='';}if(requiredFields&&requiredFields.includes(field.id)){field.required=true;}});return _context.abrupt(\"return\",metadata);case 8:case\"end\":return _context.stop();}}},_callee);})),[]),[]),fields=_useRequest.result,error=_useRequest.error,isLoading=_useRequest.isLoading,fetchMetadataOptions=_useRequest.request;useEffect(function(){fetchMetadataOptions();},[fetchMetadataOptions]);if(isLoading){return/*#__PURE__*/_jsx(ContentLoading,{});}if(error){return/*#__PURE__*/_jsx(ContentError,{error:error});}return/*#__PURE__*/_jsx(_Fragment,{children:fields.length>0&&/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",children:/*#__PURE__*/_jsx(FormFullWidthLayout,{children:fields.map(function(field){if(field.type==='string'){if(field.choices){return/*#__PURE__*/_jsx(FormGroup,{fieldId:\"credential-\".concat(field.id),label:field.label,isRequired:field.required,labelIcon:field.help_text&&/*#__PURE__*/_jsx(Popover,{content:field.help_text}),children:/*#__PURE__*/_jsx(AnsibleSelect,{name:\"inputs.\".concat(field.id),value:form.values.inputs[field.id],id:\"credential-\".concat(field.id),data:field.choices.map(function(choice){return{value:choice,key:choice,label:choice};}),onChange:function onChange(event,value){form.setFieldValue(\"inputs.\".concat(field.id),value);},validate:field.required?required(null):null})},field.id);}return/*#__PURE__*/_jsx(FormField,{id:\"credential-\".concat(field.id),label:field.label,tooltip:field.help_text,name:\"inputs.\".concat(field.id),type:field.multiline?'textarea':'text',isRequired:field.required,validate:field.required?required(null):null},field.id);}return null;})})})});}export default MetadataStep;","map":{"version":3,"names":["React","useCallback","useEffect","useField","useFormikContext","Form","FormGroup","CredentialTypesAPI","AnsibleSelect","ContentError","ContentLoading","FormField","FormFullWidthLayout","Popover","useRequest","required","jsx","_jsx","Fragment","_Fragment","MetadataStep","form","_useField","_useField2","_slicedToArray","selectedCredential","_useField3","_useField4","inputValues","_useRequest","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$CredentialType","_yield$CredentialType2","requiredFields","metadata","wrap","_callee$","_context","prev","next","readDetail","value","credential_type","credential_type_id","sent","data","inputs","forEach","field","id","initialValues","type","choices","default","includes","abrupt","stop","fields","result","error","isLoading","fetchMetadataOptions","request","children","length","autoComplete","map","fieldId","concat","label","isRequired","labelIcon","help_text","content","name","values","choice","key","onChange","event","setFieldValue","validate","tooltip","multiline"],"sources":["/awx_devel/awx/ui/src/screens/Credential/shared/CredentialPlugins/CredentialPluginPrompt/MetadataStep.js"],"sourcesContent":["/* eslint-disable react/jsx-no-useless-fragment */\nimport React, { useCallback, useEffect } from 'react';\n\nimport { useField, useFormikContext } from 'formik';\nimport { Form, FormGroup } from '@patternfly/react-core';\nimport { CredentialTypesAPI } from 'api';\nimport AnsibleSelect from 'components/AnsibleSelect';\nimport ContentError from 'components/ContentError';\nimport ContentLoading from 'components/ContentLoading';\nimport FormField from 'components/FormField';\nimport { FormFullWidthLayout } from 'components/FormLayout';\nimport Popover from 'components/Popover';\nimport useRequest from 'hooks/useRequest';\nimport { required } from 'util/validators';\n\nfunction MetadataStep() {\n  const form = useFormikContext();\n  const [selectedCredential] = useField('credential');\n  const [inputValues] = useField('inputs');\n\n  const {\n    result: fields,\n    error,\n    isLoading,\n    request: fetchMetadataOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const {\n        data: {\n          inputs: { required: requiredFields, metadata },\n        },\n      } = await CredentialTypesAPI.readDetail(\n        selectedCredential.value.credential_type ||\n          selectedCredential.value.credential_type_id\n      );\n      metadata.forEach((field) => {\n        if (inputValues.value[field.id]) {\n          form.initialValues.inputs[field.id] = inputValues.value[field.id];\n        } else if (field.type === 'string' && field.choices) {\n          form.initialValues.inputs[field.id] =\n            field.default || field.choices[0];\n        } else {\n          form.initialValues.inputs[field.id] = '';\n        }\n        if (requiredFields && requiredFields.includes(field.id)) {\n          field.required = true;\n        }\n      });\n      return metadata;\n      /* eslint-disable-next-line react-hooks/exhaustive-deps */\n    }, []),\n    []\n  );\n\n  useEffect(() => {\n    fetchMetadataOptions();\n  }, [fetchMetadataOptions]);\n\n  if (isLoading) {\n    return <ContentLoading />;\n  }\n\n  if (error) {\n    return <ContentError error={error} />;\n  }\n\n  return (\n    <>\n      {fields.length > 0 && (\n        <Form autoComplete=\"off\">\n          <FormFullWidthLayout>\n            {fields.map((field) => {\n              if (field.type === 'string') {\n                if (field.choices) {\n                  return (\n                    <FormGroup\n                      key={field.id}\n                      fieldId={`credential-${field.id}`}\n                      label={field.label}\n                      isRequired={field.required}\n                      labelIcon={\n                        field.help_text && <Popover content={field.help_text} />\n                      }\n                    >\n                      <AnsibleSelect\n                        name={`inputs.${field.id}`}\n                        value={form.values.inputs[field.id]}\n                        id={`credential-${field.id}`}\n                        data={field.choices.map((choice) => ({\n                          value: choice,\n                          key: choice,\n                          label: choice,\n                        }))}\n                        onChange={(event, value) => {\n                          form.setFieldValue(`inputs.${field.id}`, value);\n                        }}\n                        validate={field.required ? required(null) : null}\n                      />\n                    </FormGroup>\n                  );\n                }\n\n                return (\n                  <FormField\n                    key={field.id}\n                    id={`credential-${field.id}`}\n                    label={field.label}\n                    tooltip={field.help_text}\n                    name={`inputs.${field.id}`}\n                    type={field.multiline ? 'textarea' : 'text'}\n                    isRequired={field.required}\n                    validate={field.required ? required(null) : null}\n                  />\n                );\n              }\n\n              return null;\n            })}\n          </FormFullWidthLayout>\n        </Form>\n      )}\n    </>\n  );\n}\n\nexport default MetadataStep;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}