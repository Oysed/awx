{"ast":null,"code":"import _toConsumableArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/awx_devel/awx/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useCallback}from'react';/**\n * useSelected hook provides a way to read and update a selected list\n * Param: array of list items\n * Returns: {\n *  selected: array of selected list items\n *  isAllSelected: boolean that indicates if all items are selected\n *  handleSelect: function that adds and removes items from selected list\n *  setSelected: setter function\n *  clearSelected: de-select all items\n * }\n */export default function useSelected(){var list=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var defaultSelected=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var _useState=useState(defaultSelected),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];var isAllSelected=selected.length>0&&selected.length===list.length;var handleSelect=function handleSelect(row){if(!row.id){throw new Error(\"Selected row does not have an id\");}if(selected.some(function(s){return s.id===row.id;})){setSelected(function(prevState){return _toConsumableArray(prevState.filter(function(i){return i.id!==row.id;}));});}else{setSelected(function(prevState){return[].concat(_toConsumableArray(prevState),[row]);});}};var selectAll=useCallback(function(isSelected){setSelected(isSelected?_toConsumableArray(list):[]);},[list]);var clearSelected=useCallback(function(){setSelected([]);},[]);return{selected:selected,isAllSelected:isAllSelected,handleSelect:handleSelect,setSelected:setSelected,selectAll:selectAll,clearSelected:clearSelected};}","map":{"version":3,"names":["useState","useCallback","useSelected","list","arguments","length","undefined","defaultSelected","_useState","_useState2","_slicedToArray","selected","setSelected","isAllSelected","handleSelect","row","id","Error","some","s","prevState","_toConsumableArray","filter","i","concat","selectAll","isSelected","clearSelected"],"sources":["/awx_devel/awx/ui/src/hooks/useSelected.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\n/**\n * useSelected hook provides a way to read and update a selected list\n * Param: array of list items\n * Returns: {\n *  selected: array of selected list items\n *  isAllSelected: boolean that indicates if all items are selected\n *  handleSelect: function that adds and removes items from selected list\n *  setSelected: setter function\n *  clearSelected: de-select all items\n * }\n */\n\nexport default function useSelected(list = [], defaultSelected = []) {\n  const [selected, setSelected] = useState(defaultSelected);\n  const isAllSelected = selected.length > 0 && selected.length === list.length;\n\n  const handleSelect = (row) => {\n    if (!row.id) {\n      throw new Error(`Selected row does not have an id`);\n    }\n    if (selected.some((s) => s.id === row.id)) {\n      setSelected((prevState) => [...prevState.filter((i) => i.id !== row.id)]);\n    } else {\n      setSelected((prevState) => [...prevState, row]);\n    }\n  };\n\n  const selectAll = useCallback(\n    (isSelected) => {\n      setSelected(isSelected ? [...list] : []);\n    },\n    [list]\n  );\n\n  const clearSelected = useCallback(() => {\n    setSelected([]);\n  }, []);\n\n  return {\n    selected,\n    isAllSelected,\n    handleSelect,\n    setSelected,\n    selectAll,\n    clearSelected,\n  };\n}\n"],"mappings":"sNAAA,OAASA,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,cAAe,SAAS,CAAAC,WAAWA,CAAA,CAAkC,IAAjC,CAAAC,IAAI,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,IAAE,CAAAG,eAAe,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CACjE,IAAAI,SAAA,CAAgCR,QAAQ,CAACO,eAAe,CAAC,CAAAE,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAlDG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAC5B,GAAM,CAAAI,aAAa,CAAGF,QAAQ,CAACN,MAAM,CAAG,CAAC,EAAIM,QAAQ,CAACN,MAAM,GAAKF,IAAI,CAACE,MAAM,CAE5E,GAAM,CAAAS,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,GAAG,CAAK,CAC5B,GAAI,CAACA,GAAG,CAACC,EAAE,CAAE,CACX,KAAM,IAAI,CAAAC,KAAK,mCAAmC,CAAC,CACrD,CACA,GAAIN,QAAQ,CAACO,IAAI,CAAC,SAACC,CAAC,QAAK,CAAAA,CAAC,CAACH,EAAE,GAAKD,GAAG,CAACC,EAAE,GAAC,CAAE,CACzCJ,WAAW,CAAC,SAACQ,SAAS,SAAAC,kBAAA,CAASD,SAAS,CAACE,MAAM,CAAC,SAACC,CAAC,QAAK,CAAAA,CAAC,CAACP,EAAE,GAAKD,GAAG,CAACC,EAAE,GAAC,GAAC,CAAC,CAC3E,CAAC,IAAM,CACLJ,WAAW,CAAC,SAACQ,SAAS,WAAAI,MAAA,CAAAH,kBAAA,CAASD,SAAS,GAAEL,GAAG,IAAC,CAAC,CACjD,CACF,CAAC,CAED,GAAM,CAAAU,SAAS,CAAGxB,WAAW,CAC3B,SAACyB,UAAU,CAAK,CACdd,WAAW,CAACc,UAAU,CAAAL,kBAAA,CAAOlB,IAAI,EAAI,EAAE,CAAC,CAC1C,CAAC,CACD,CAACA,IAAI,CACP,CAAC,CAED,GAAM,CAAAwB,aAAa,CAAG1B,WAAW,CAAC,UAAM,CACtCW,WAAW,CAAC,EAAE,CAAC,CACjB,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CACLD,QAAQ,CAARA,QAAQ,CACRE,aAAa,CAAbA,aAAa,CACbC,YAAY,CAAZA,YAAY,CACZF,WAAW,CAAXA,WAAW,CACXa,SAAS,CAATA,SAAS,CACTE,aAAa,CAAbA,aACF,CAAC,CACH"},"metadata":{},"sourceType":"module"}