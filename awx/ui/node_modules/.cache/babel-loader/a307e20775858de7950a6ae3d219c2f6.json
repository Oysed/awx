{"ast":null,"code":"import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport stylesTreeView from '@patternfly/react-styles/css/components/Table/table-tree-view';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/esm/components/Checkbox';\nimport AngleDownIcon from '@patternfly/react-icons/dist/esm/icons/angle-down-icon';\nimport EllipsisHIcon from '@patternfly/react-icons/dist/esm/icons/ellipsis-h-icon';\nexport var treeRow = function treeRow(onCollapse, onCheckChange, onToggleRowDetails) {\n  return function (value, _ref) {\n    var rowIndex = _ref.rowIndex,\n      rowData = _ref.rowData;\n    var _rowData$props = rowData.props,\n      isExpanded = _rowData$props.isExpanded,\n      isDetailsExpanded = _rowData$props.isDetailsExpanded,\n      level = _rowData$props['aria-level'],\n      setsize = _rowData$props['aria-setsize'],\n      toggleAriaLabel = _rowData$props.toggleAriaLabel,\n      checkAriaLabel = _rowData$props.checkAriaLabel,\n      showDetailsAriaLabel = _rowData$props.showDetailsAriaLabel,\n      isChecked = _rowData$props.isChecked,\n      checkboxId = _rowData$props.checkboxId,\n      icon = _rowData$props.icon;\n    var content = value.title || value;\n    var text = React.createElement(\"div\", {\n      className: css(stylesTreeView.tableTreeViewText),\n      key: \"tree-view-text\"\n    }, icon && React.createElement(\"span\", {\n      className: css(stylesTreeView.tableTreeViewIcon),\n      key: \"tree-view-text-icon\"\n    }, icon), React.createElement(\"span\", {\n      className: \"pf-c-table__text\",\n      key: \"table-text\"\n    }, content));\n    var onChange = function onChange(isChecked, event) {\n      onCheckChange(event, isChecked, rowIndex, content, rowData);\n    };\n    return {\n      component: 'th',\n      className: 'pf-c-table__tree-view-title-cell',\n      children: level !== undefined ? React.createElement(\"div\", {\n        className: css(stylesTreeView.tableTreeViewMain)\n      }, setsize > 0 && React.createElement(\"span\", {\n        className: css(stylesTreeView.tableToggle),\n        key: \"table-toggle\"\n      }, React.createElement(Button, {\n        variant: \"plain\",\n        onClick: function onClick(event) {\n          return onCollapse && onCollapse(event, rowIndex, content, rowData);\n        },\n        className: css(isExpanded && styles.modifiers.expanded),\n        \"aria-expanded\": isExpanded,\n        \"aria-label\": toggleAriaLabel || \"\".concat(isExpanded ? 'Collapse' : 'Expand', \" row \").concat(rowIndex)\n      }, React.createElement(\"div\", {\n        className: css(stylesTreeView.tableToggleIcon)\n      }, React.createElement(AngleDownIcon, {\n        \"aria-hidden\": \"true\"\n      })))), !!onCheckChange && React.createElement(\"span\", {\n        className: css(stylesTreeView.tableCheck),\n        key: \"table-check\"\n      }, React.createElement(\"label\", {\n        htmlFor: checkboxId || \"checkbox_\".concat(rowIndex)\n      }, React.createElement(Checkbox, {\n        id: checkboxId || \"checkbox_\".concat(rowIndex),\n        \"aria-label\": checkAriaLabel || \"Row \".concat(rowIndex, \" checkbox\"),\n        isChecked: isChecked,\n        onChange: onChange\n      }))), text, !!onToggleRowDetails && React.createElement(\"span\", {\n        className: css(stylesTreeView.tableTreeViewDetailsToggle),\n        key: \"view-details-toggle\"\n      }, React.createElement(Button, {\n        variant: \"plain\",\n        \"aria-expanded\": isDetailsExpanded,\n        \"aria-label\": showDetailsAriaLabel || 'Show row details',\n        onClick: function onClick(event) {\n          return onToggleRowDetails && onToggleRowDetails(event, rowIndex, content, rowData);\n        }\n      }, React.createElement(\"span\", {\n        className: \"pf-c-table__details-toggle-icon\"\n      }, React.createElement(EllipsisHIcon, {\n        \"aria-hidden\": true\n      }))))) : text\n    };\n  };\n};","map":{"version":3,"names":["React","css","styles","stylesTreeView","Button","Checkbox","AngleDownIcon","EllipsisHIcon","treeRow","onCollapse","onCheckChange","onToggleRowDetails","value","_ref","rowIndex","rowData","_rowData$props","props","isExpanded","isDetailsExpanded","level","setsize","toggleAriaLabel","checkAriaLabel","showDetailsAriaLabel","isChecked","checkboxId","icon","content","title","text","createElement","className","tableTreeViewText","key","tableTreeViewIcon","onChange","event","component","children","undefined","tableTreeViewMain","tableToggle","variant","onClick","modifiers","expanded","concat","tableToggleIcon","tableCheck","htmlFor","id","tableTreeViewDetailsToggle"],"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/utils/decorators/treeRow.tsx"],"sourcesContent":["import * as React from 'react';\nimport { IExtra, IFormatterValueType, OnCheckChange, OnTreeRowCollapse, OnToggleRowDetails } from '../../TableTypes';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport stylesTreeView from '@patternfly/react-styles/css/components/Table/table-tree-view';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/esm/components/Checkbox';\nimport AngleDownIcon from '@patternfly/react-icons/dist/esm/icons/angle-down-icon';\nimport EllipsisHIcon from '@patternfly/react-icons/dist/esm/icons/ellipsis-h-icon';\n\nexport const treeRow = (\n  onCollapse: OnTreeRowCollapse,\n  onCheckChange?: OnCheckChange,\n  onToggleRowDetails?: OnToggleRowDetails\n) => (value: IFormatterValueType, { rowIndex, rowData }: IExtra) => {\n  const {\n    isExpanded,\n    isDetailsExpanded,\n    'aria-level': level,\n    'aria-setsize': setsize,\n    toggleAriaLabel,\n    checkAriaLabel,\n    showDetailsAriaLabel,\n    isChecked,\n    checkboxId,\n    icon\n  } = rowData.props;\n  const content = value.title || value;\n  const text = (\n    <div className={css(stylesTreeView.tableTreeViewText)} key=\"tree-view-text\">\n      {icon && (\n        <span className={css(stylesTreeView.tableTreeViewIcon)} key=\"tree-view-text-icon\">\n          {icon}\n        </span>\n      )}\n      <span className=\"pf-c-table__text\" key=\"table-text\">\n        {content as React.ReactNode}\n      </span>\n    </div>\n  );\n  const onChange = (isChecked: boolean, event: React.FormEvent<HTMLInputElement>) => {\n    onCheckChange(event, isChecked, rowIndex, content as React.ReactNode, rowData);\n  };\n  return {\n    component: 'th',\n    className: 'pf-c-table__tree-view-title-cell',\n    children:\n      level !== undefined ? (\n        <div className={css(stylesTreeView.tableTreeViewMain)}>\n          {setsize > 0 && (\n            <span className={css(stylesTreeView.tableToggle)} key=\"table-toggle\">\n              <Button\n                variant=\"plain\"\n                onClick={event => onCollapse && onCollapse(event, rowIndex, content as React.ReactNode, rowData)}\n                className={css(isExpanded && styles.modifiers.expanded)}\n                aria-expanded={isExpanded}\n                aria-label={toggleAriaLabel || `${isExpanded ? 'Collapse' : 'Expand'} row ${rowIndex}`}\n              >\n                <div className={css(stylesTreeView.tableToggleIcon)}>\n                  <AngleDownIcon aria-hidden=\"true\" />\n                </div>\n              </Button>\n            </span>\n          )}\n          {!!onCheckChange && (\n            <span className={css(stylesTreeView.tableCheck)} key=\"table-check\">\n              <label htmlFor={checkboxId || `checkbox_${rowIndex}`}>\n                <Checkbox\n                  id={checkboxId || `checkbox_${rowIndex}`}\n                  aria-label={checkAriaLabel || `Row ${rowIndex} checkbox`}\n                  isChecked={isChecked}\n                  onChange={onChange}\n                />\n              </label>\n            </span>\n          )}\n          {text}\n          {!!onToggleRowDetails && (\n            <span className={css(stylesTreeView.tableTreeViewDetailsToggle)} key=\"view-details-toggle\">\n              <Button\n                variant=\"plain\"\n                aria-expanded={isDetailsExpanded}\n                aria-label={showDetailsAriaLabel || 'Show row details'}\n                onClick={event =>\n                  onToggleRowDetails && onToggleRowDetails(event, rowIndex, content as React.ReactNode, rowData)\n                }\n              >\n                <span className=\"pf-c-table__details-toggle-icon\">\n                  <EllipsisHIcon aria-hidden />\n                </span>\n              </Button>\n            </span>\n          )}\n        </div>\n      ) : (\n        text\n      )\n  };\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,qDAAqD;AACxE,OAAOC,cAAc,MAAM,+DAA+D;AAC1F,SAASC,MAAM,QAAQ,mDAAmD;AAC1E,SAASC,QAAQ,QAAQ,qDAAqD;AAC9E,OAAOC,aAAa,MAAM,wDAAwD;AAClF,OAAOC,aAAa,MAAM,wDAAwD;AAElF,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAClBC,UAA6B,EAC7BC,aAA6B,EAC7BC,kBAAuC;EAAA,OACpC,UAACC,KAA0B,EAAAC,IAAA,EAAmC;IAAA,IAA/BC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;MAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IACnD,IAAAC,cAAA,GAWID,OAAO,CAACE,KAAK;MAVfC,UAAU,GAAAF,cAAA,CAAVE,UAAU;MACVC,iBAAiB,GAAAH,cAAA,CAAjBG,iBAAiB;MACHC,KAAK,GAAAJ,cAAA,CAAnB,YAAY;MACIK,OAAO,GAAAL,cAAA,CAAvB,cAAc;MACdM,eAAe,GAAAN,cAAA,CAAfM,eAAe;MACfC,cAAc,GAAAP,cAAA,CAAdO,cAAc;MACdC,oBAAoB,GAAAR,cAAA,CAApBQ,oBAAoB;MACpBC,SAAS,GAAAT,cAAA,CAATS,SAAS;MACTC,UAAU,GAAAV,cAAA,CAAVU,UAAU;MACVC,IAAI,GAAAX,cAAA,CAAJW,IAAI;IAEN,IAAMC,OAAO,GAAGhB,KAAK,CAACiB,KAAK,IAAIjB,KAAK;IACpC,IAAMkB,IAAI,GACR9B,KAAA,CAAA+B,aAAA;MAAKC,SAAS,EAAE/B,GAAG,CAACE,cAAc,CAAC8B,iBAAiB,CAAC;MAAEC,GAAG,EAAC;IAAgB,GACxEP,IAAI,IACH3B,KAAA,CAAA+B,aAAA;MAAMC,SAAS,EAAE/B,GAAG,CAACE,cAAc,CAACgC,iBAAiB,CAAC;MAAED,GAAG,EAAC;IAAqB,GAC9EP,IAAI,CAER,EACD3B,KAAA,CAAA+B,aAAA;MAAMC,SAAS,EAAC,kBAAkB;MAACE,GAAG,EAAC;IAAY,GAChDN,OAA0B,CACtB,CAEV;IACD,IAAMQ,QAAQ,GAAG,SAAXA,QAAQA,CAAIX,SAAkB,EAAEY,KAAwC,EAAI;MAChF3B,aAAa,CAAC2B,KAAK,EAAEZ,SAAS,EAAEX,QAAQ,EAAEc,OAA0B,EAAEb,OAAO,CAAC;IAChF,CAAC;IACD,OAAO;MACLuB,SAAS,EAAE,IAAI;MACfN,SAAS,EAAE,kCAAkC;MAC7CO,QAAQ,EACNnB,KAAK,KAAKoB,SAAS,GACjBxC,KAAA,CAAA+B,aAAA;QAAKC,SAAS,EAAE/B,GAAG,CAACE,cAAc,CAACsC,iBAAiB;MAAC,GAClDpB,OAAO,GAAG,CAAC,IACVrB,KAAA,CAAA+B,aAAA;QAAMC,SAAS,EAAE/B,GAAG,CAACE,cAAc,CAACuC,WAAW,CAAC;QAAER,GAAG,EAAC;MAAc,GAClElC,KAAA,CAAA+B,aAAA,CAAC3B,MAAM;QACLuC,OAAO,EAAC,OAAO;QACfC,OAAO,EAAE,SAAAA,QAAAP,KAAK;UAAA,OAAI5B,UAAU,IAAIA,UAAU,CAAC4B,KAAK,EAAEvB,QAAQ,EAAEc,OAA0B,EAAEb,OAAO,CAAC;QAAA;QAChGiB,SAAS,EAAE/B,GAAG,CAACiB,UAAU,IAAIhB,MAAM,CAAC2C,SAAS,CAACC,QAAQ,CAAC;QAAA,iBACxC5B,UAAU;QAAA,cACbI,eAAe,OAAAyB,MAAA,CAAO7B,UAAU,GAAG,UAAU,GAAG,QAAQ,WAAA6B,MAAA,CAAQjC,QAAQ;MAAE,GAEtFd,KAAA,CAAA+B,aAAA;QAAKC,SAAS,EAAE/B,GAAG,CAACE,cAAc,CAAC6C,eAAe;MAAC,GACjDhD,KAAA,CAAA+B,aAAA,CAACzB,aAAa;QAAA,eAAa;MAAM,EAAG,CAChC,CACC,CAEZ,EACA,CAAC,CAACI,aAAa,IACdV,KAAA,CAAA+B,aAAA;QAAMC,SAAS,EAAE/B,GAAG,CAACE,cAAc,CAAC8C,UAAU,CAAC;QAAEf,GAAG,EAAC;MAAa,GAChElC,KAAA,CAAA+B,aAAA;QAAOmB,OAAO,EAAExB,UAAU,gBAAAqB,MAAA,CAAgBjC,QAAQ;MAAE,GAClDd,KAAA,CAAA+B,aAAA,CAAC1B,QAAQ;QACP8C,EAAE,EAAEzB,UAAU,gBAAAqB,MAAA,CAAgBjC,QAAQ,CAAE;QAAA,cAC5BS,cAAc,WAAAwB,MAAA,CAAWjC,QAAQ,cAAW;QACxDW,SAAS,EAAEA,SAAS;QACpBW,QAAQ,EAAEA;MAAQ,EAClB,CACI,CAEX,EACAN,IAAI,EACJ,CAAC,CAACnB,kBAAkB,IACnBX,KAAA,CAAA+B,aAAA;QAAMC,SAAS,EAAE/B,GAAG,CAACE,cAAc,CAACiD,0BAA0B,CAAC;QAAElB,GAAG,EAAC;MAAqB,GACxFlC,KAAA,CAAA+B,aAAA,CAAC3B,MAAM;QACLuC,OAAO,EAAC,OAAO;QAAA,iBACAxB,iBAAiB;QAAA,cACpBK,oBAAoB,IAAI,kBAAkB;QACtDoB,OAAO,EAAE,SAAAA,QAAAP,KAAK;UAAA,OACZ1B,kBAAkB,IAAIA,kBAAkB,CAAC0B,KAAK,EAAEvB,QAAQ,EAAEc,OAA0B,EAAEb,OAAO,CAAC;QAAA;MAAA,GAGhGf,KAAA,CAAA+B,aAAA;QAAMC,SAAS,EAAC;MAAiC,GAC/ChC,KAAA,CAAA+B,aAAA,CAACxB,aAAa;QAAA;MAAA,EAAe,CACxB,CACA,CAEZ,CACG,GAENuB;KAEL;EACH,CAAC;AAAA"},"metadata":{},"sourceType":"module"}