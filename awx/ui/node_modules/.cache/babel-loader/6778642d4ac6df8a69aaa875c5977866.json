{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Th } from '../TableComposable/Th';\nexport var HeaderCell = function HeaderCell(_a) {\n  var _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    _a$component = _a.component,\n    component = _a$component === void 0 ? 'th' : _a$component,\n    _a$scope = _a.scope,\n    scope = _a$scope === void 0 ? '' : _a$scope,\n    _a$textCenter = _a.textCenter,\n    textCenter = _a$textCenter === void 0 ? false : _a$textCenter,\n    _a$tooltip = _a.tooltip,\n    tooltip = _a$tooltip === void 0 ? '' : _a$tooltip,\n    _a$onMouseEnter = _a.onMouseEnter,\n    onMouseEnter = _a$onMouseEnter === void 0 ? function () {} : _a$onMouseEnter,\n    children = _a.children,\n    isVisible = _a.isVisible,\n    _a$dataLabel = _a.dataLabel,\n    dataLabel = _a$dataLabel === void 0 ? '' : _a$dataLabel,\n    props = __rest(_a, [\"className\", \"component\", \"scope\", \"textCenter\", \"tooltip\", \"onMouseEnter\", \"children\", \"isVisible\", \"dataLabel\"]);\n  return React.createElement(Th, Object.assign({}, props, {\n    scope: scope,\n    tooltip: tooltip,\n    onMouseEnter: onMouseEnter,\n    textCenter: textCenter,\n    component: component,\n    className: className\n  }), children);\n};\nHeaderCell.displayName = 'HeaderCell';","map":{"version":3,"names":["React","Th","HeaderCell","_a","className","_a$className","_a$component","component","_a$scope","scope","_a$textCenter","textCenter","_a$tooltip","tooltip","_a$onMouseEnter","onMouseEnter","children","isVisible","_a$dataLabel","dataLabel","props","__rest","createElement","Object","assign","displayName"],"sources":["/awx_devel/awx/ui/node_modules/@patternfly/react-table/src/components/Table/HeaderCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Th } from '../TableComposable/Th';\n\nexport interface HeaderCellProps {\n  'data-label'?: string;\n  className?: string;\n  component?: React.ReactNode;\n  isVisible?: boolean;\n  scope?: string;\n  textCenter?: boolean;\n  dataLabel?: string;\n  tooltip?: string;\n  onMouseEnter?: (event: any) => void;\n  children: React.ReactNode;\n}\n\nexport const HeaderCell: React.FunctionComponent<HeaderCellProps> = ({\n  className = '',\n  component = 'th',\n  scope = '',\n  textCenter = false,\n  tooltip = '',\n  onMouseEnter = () => {},\n  children,\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  isVisible,\n  dataLabel = '',\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n  ...props\n}: HeaderCellProps) => (\n  <Th\n    {...props}\n    scope={scope}\n    tooltip={tooltip}\n    onMouseEnter={onMouseEnter}\n    textCenter={textCenter}\n    component={component}\n    className={className}\n  >\n    {children}\n  </Th>\n);\nHeaderCell.displayName = 'HeaderCell';\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,EAAE,QAAQ,uBAAuB;AAe1C,OAAO,IAAMC,UAAU,GAA6C,SAAvDA,UAAUA,CAA8CC,EAanD,EAAI;qBAHNA,EAGE,CAZhBC,SAAS;IAATA,SAAS,GAAAC,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAC,YAAA,GASAH,EAGE,CAXhBI,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,IAAI,GAAAA,YAAA;IAAAE,QAAA,GAQFL,EAGE,CAVhBM,KAAK;IAALA,KAAK,GAAAD,QAAA,cAAG,EAAE,GAAAA,QAAA;IAAAE,aAAA,GAOIP,EAGE,CAThBQ,UAAU;IAAVA,UAAU,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;IAAAE,UAAA,GAMJT,EAGE,CARhBU,OAAO;IAAPA,OAAO,GAAAD,UAAA,cAAG,EAAE,GAAAA,UAAA;IAAAE,eAAA,GAKEX,EAGE,CAPhBY,YAAY;IAAZA,YAAY,GAAAD,eAAA,cAAG,YAAK,CAAE,CAAC,GAAAA,eAAA;IACvBE,QAAQ,GAGMb,EAGE,CANhBa,QAAQ;IAERC,SAAS,GACKd,EAGE,CAJhBc,SAAS;IAAAC,YAAA,GACKf,EAGE,CAHhBgB,SAAS;IAATA,SAAS,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;IAEXE,KAAK,GAAAC,MAAA,CAAAlB,EAAA,EAZ2D,kHAapE,CADS;EACa,OACrBH,KAAA,CAAAsB,aAAA,CAACrB,EAAE,EAAAsB,MAAA,CAAAC,MAAA,KACGJ,KAAK;IACTX,KAAK,EAAEA,KAAK;IACZI,OAAO,EAAEA,OAAO;IAChBE,YAAY,EAAEA,YAAY;IAC1BJ,UAAU,EAAEA,UAAU;IACtBJ,SAAS,EAAEA,SAAS;IACpBH,SAAS,EAAEA;EAAS,IAEnBY,QAAQ,CACN;CACN;AACDd,UAAU,CAACuB,WAAW,GAAG,YAAY"},"metadata":{},"sourceType":"module"}